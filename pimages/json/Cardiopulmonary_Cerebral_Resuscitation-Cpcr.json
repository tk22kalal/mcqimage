[
  {
    "q_no": 1,
    "question": "A 30-year-old man collapses and is unresponsive. After tapping his shoulders and getting no response, what is your next step?",
    "options": {
      "A": "Check his pulse",
      "B": "Start high-quality CPR",
      "C": "Start rescue breaths",
      "D": "Shout for help"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Shout for help Explanation: The first step after confirming unresponsiveness is to shout for help and activate emergency services . This ensures that additional resources (like an AED or more rescuers) are available while you continue to assess and provide care. Steps in Basic Life Support Skills:",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 2,
    "question": "A 30-year-old man is found unconscious after a motorcycle accident. There are no signs of external bleeding, but you suspect a possible head or neck injury. You need to open his airway to check for breathing. What is the preferred method for opening the airway in this situation?",
    "options": {
      "A": "Head tilt-chin lift",
      "B": "Jaw thrust",
      "C": "Head tilt-neck lift",
      "D": "Avoid opening the airway"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Jaw thrust Explanation: In cases of suspected head or neck trauma, the jaw thrust manoeuvre is preferred to open the airway while minimizing neck movement, reducing the risk of exacerbating spinal injuries. The CAB algorithm highlights the key elements needed to ensure high-quality CPR in BLS. Compressions (C) Position: Place the patient in a supine position on a firm surface. Site: Lower I rd of sternum Rate: 100 to 120 compressions per minute. Depth: Compress 2 to 2.4 inches (5-6 cm); avoid exceeding 2.4 inches. Compression-to-Ventilation Ratio: 30 compressions to 2 breaths (30:2). Chest Recoil: Allow full recoil between compressions to optimize blood flow. Interruptions: Minimize interruptions in compressions ( <10 seconds ). Chest Compression Fraction (CCF): The proportion of time spent performing chest compressions during CPR: Maintain a CCF ≥ 60%. For pregnant women: perform manual lateral uterine displacement (LUD) to relieve pressure on large abdominal vessels. Airway (A) Head Tilt-Chin Lift: Used to open the airway in patients without suspected neck trauma. Jaw Thrust: Preferred method, if neck trauma is suspected. The most common cause of airway obstruction in unconscious patients is the tongue falling back. Breathing (B) Rescue Breaths: Give 2 breaths after every 30 compressions. Method: Mouth-to-mouth or with a bag-mask device, ensuring chest rise with each breath. Breath Duration: Each breath should last about 1 second. Head Tilt Chin Lift Maneuver: The head is tilted back while lifting the chin upwards to prevent the tongue from obstructing the airway. Used to open the airway in an unconscious patient without suspected spinal injury. Jaw Thrust Maneuver: The lower jaw is lifted forward by placing fingers behind the angle of the mandible, moving the tongue forward and clearing the airway without moving the neck. Used to open the airway in patients with suspected cervical spine injury.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 3,
    "question": "A 55-year-old man collapses at a shopping mall, and bystanders begin performing CPR. An automated external defibrillator (AED) is brought to the scene. After applying the pads, the AED begins analyzing the heart rhythm. You are assisting with the resuscitation. What action should you take during the AED's analysis?",
    "options": {
      "A": "Check the pulse.",
      "B": "Continue chest compressions.",
      "C": "Give rescue breaths only.",
      "D": "Stand clear of the victim."
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Stand clear of the victim Explanation: During the AED analysis, it is crucial to avoid touching the patient to prevent interference with the heart rhythm reading and ensure the safety of those around. Automated External Defibrillator (AED) An Automated External Defibrillator (AED) is a portable, computerized device designed to identify life-threatening cardiac arrhythmias and, if necessary, deliver an electrical shock to restore a normal heart rhythm. It is an automated , user-friendly device for layperson use, while a conventional defibrillator requires professional expertise for manual operation and rhythm interpretation. Indications for AED use: AEDs are indicated in cardiac arrest due to shockable rhythms such as: Pulseless Ventricular Tachycardia (pVT) Ventricular Fibrillation (VF) Steps for Operating an AED",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 4,
    "question": "A 60-year-old female is found unresponsive at home. Cardiopulmonary resuscitation (CPR) is initiated, and she is found to be in asystole. After several minutes of resuscitation efforts, her rhythm converts to ventricular fibrillation. Which of the following is most likely associated with improved survival in this case?",
    "options": {
      "A": "Defibrillation after the conversion to a shockable rhythm",
      "B": "Administration of high-dose epinephrine",
      "C": "Immediate initiation of therapeutic hypothermia",
      "D": "Continuous chest compressions without defibrillation"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Defibrillation after the conversion to a shockable rhythm Explanation: Initially, the patient is in asystole, a non-shockable rhythm , and later converts to ventricular fibrillation, a shockable rhythm . Once the patient converts from a non-shockable to a shockable rhythm, defibrillation is the most effective intervention. Shockable vs Non-Shockable Rhythm definitions Shockable Rhythms : Ventricular Fibrillation (VF) Pulseless Ventricular Tachycardia (pVT) Respond to defibrillation. Non-Shockable Rhythms : Asystole Pulseless Electrical Activity (PEA) Do not respond to defibrillation. Prognostic Implications Survival Rates : Shockable rhythms have better survival and neurological outcomes compared to non-shockable rhythms . Conversion from Non-Shockable to Shockable : Early conversion improves outcomes, enhancing survival rates and neurological recovery. Factors Influencing Rhythm Type Factor Non-Shockable Rhythms Shockable Rhythms Demographics Female, older age, unwitnessed arrests - Medical History Non-cardiovascular diseases (e.g., COPD), medications (antidepressants, antipsychotics) History of cardiovascular disease Administration of high-dose epinephrine (Option B) is not standard and may not significantly improve survival compared to defibrillation in shockable rhythms. Immediate initiation of therapeutic hypothermia (Option C) is used post-resuscitation for neuroprotection but does not address the immediate need for defibrillation. Continuous chest compressions without defibrillation (Option D) would delay the critical intervention for a shockable rhythm, reducing survival chances. Reference: https://pubmed.ncbi.nlm.nih.gov/27616581/ https://pubmed.ncbi.nlm.nih.gov/32504821/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 5,
    "question": "In pediatric Basic Life Support (BLS), which of the following is the most recent modification recommended by the American Heart Association (AHA) to improve resuscitation outcomes in children?",
    "options": {
      "A": "Starting with Airway, Breathing, Chest Compressions",
      "B": "Pulse check for 30 seconds before initiating CPR",
      "C": "Delivering chest compressions at a depth of 1 cm for infants",
      "D": "Shifting the resuscitation sequence to Chest Compressions, Airway, Breathing"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Shifting the resuscitation sequence to Chest Compressions, Airway, Breathing (A-B), to improve outcomes in pediatric cardiac arrest. Modifications in Pediatric Basic Life Support (BLS) Sequence Shift: C-A-B (Option A ruled out) (Option C) Emphasis on chest compressions is first , followed by airway and breathing to improve survival in cardiac arrest. \"Look, Listen, Feel\" Removed Immediate CPR initiation is recommended if unsure about a pulse; it minimizes treatment delay. Pulse Check Lay rescuers: Pulse check not required. Healthcare providers: Pulse check within 10 seconds; begin CPR if uncertain. (Option B ruled out) Compression Depth and Rate Depth: At least 1/3 of chest depth (4 cm for infants, 5 cm for children). (Option C ruled out) Rate: 100-120 compressions per minute. Use of AEDs: AEDs recommended for infants if no manual defibrillator is available. Training Adjustments: Simplified BLS training models improve knowledge and skill retention. High-Quality CPR Focus: Minimal interruptions and proper ventilation post-advanced airway insertion are emphasized. Reference: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3515044/ https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10685309/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 6,
    "question": "A 55-year-old male is found unresponsive and without a pulse. Emergency responders are activated, and advanced cardiac life support (ACLS) protocols are initiated. Which of the following steps should be prioritized immediately after confirming cardiac arrest?",
    "options": {
      "A": "Administer epinephrine (1 mg every 3-5 minutes)",
      "B": "Ensure proper airway management using bag-mask ventilation",
      "C": "Initiate high-quality chest compressions at a rate of 100-120 per minute",
      "D": "Deploy an Automated External Defibrillator (AED)"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Initiate high-quality chest compressions at a rate of 100-120 per minute compressions should be started immediately after confirming cardiac arrest to improve chances of survival. ACLS Steps Advanced Cardiac Life Support (ACLS) is crucial for managing cardiac arrest and cardiovascular emergencies, following the 2016 guidelines. Key Steps in ACLS Step Description 1. Early Recognition and Activation Identify cardiac arrest signs quickly and alert emergency services. 2. High-Quality Chest Compressions (Option C) Initiate compressions at a rate of 100-120 per minute, with a depth of at least 2 inches (5 cm) for adults, allowing full chest recoil. 3. Early Defibrillation (Option D ruled out) Deploy an AED promptly; follow prompts for defibrillation if a shockable rhythm is present. 4. Airway Management (Option B ruled out) Ensure airway patency using techniques like bag-mask ventilation or advanced airway placement; provide oxygen to support ventilation. 5. Drug Administration (Option A ruled out) Administer epinephrine (1 mg every 3-5 minutes); consider antiarrhythmics like amiodarone for shock-resistant VF/pulseless VT. 6. Identify and Treat Reversible Causes Assess for reversible causes (\"H's and T's\"): Hypoxia Hypovolemia Acidosis (Hydrogen ion) Hyper/hypokalemia Hypothermia Tension pneumothorax Cardiac tamponade Toxins Thrombosis (pulmonary/coronary) 7. Post-Resuscitation Care Provide comprehensive care after return of spontaneous circulation (ROSC), including monitoring and supportive therapies. 8. Continuous Quality Improvement Assess and enhance resuscitation efforts, focusing on minimizing interruptions in compressions and following protocols. Reference: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5523088/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 7,
    "question": "A healthcare provider is managing a patient with cardiac arrest due to pulseless ventricular tachycardia. Which of the following is a key advantage of using manual defibrillators in this scenario?",
    "options": {
      "A": "They are easier to operate than Automated External Defibrillators (AEDs).",
      "B": "Manual defibrillators can allow the users to adjust energy levels based on their clinical judgement.",
      "C": "They can be used by bystanders.",
      "D": "They are used independently, without ECG monitoring."
    },
    "correct_answer": "B",
    "explanation": "clinical judgement. Correct Answer: B) Manual defibrillators can allows the users to adjust energy levels based on their clinical judgement Explanation: One of the key advantages of manual defibrillators is the ability to synchronize shocks with the patient's heartbeat. Uses of Manual Defibrillators Manual defibrillators are crucial for treating cardiac arrest caused by ventricular fibrillation (VF) or pulseless ventricular tachycardia (VT) by delivering controlled electric shocks to restore normal heart rhythm. Uses Use Details Termination of VF and Pulseless VT Treats life-threatening arrhythmias, the leading causes of sudden cardiac arrest. Stops chaotic electrical activity, allowing heart reset. Early Defibrillation in Cardiac Arrest Critical for survival; chances decrease 7-10% each minute without defibrillation. Timely shocks significantly enhance resuscitation success. Differentiation from AEDs AEDs are for bystanders; manual defibrillators are used by healthcare professionals in clinical settings. Offer advanced features like energy adjustment. (Options A & C ruled out) Integration with ACLS Protocols Integral to Advanced Cardiac Life Support protocols for managing cardiac emergencies. Used with chest compressions, airway management, and drug administration. Ongoing Monitoring and Rhythm Analysis Incorporate ECG monitoring for continuous heart rhythm assessment. (Option D ruled out) Enable synchronized cardioversion for stable patients with abnormal rhythms. Reference: https://my.clevelandclinic.org/health/treatments/23020-defibrillator",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 8,
    "question": "A 60-year-old man presents to the emergency department after being resuscitated from cardiac arrest. The medical team suspects a reversible cause and starts assessing possible factors. Which of the following pairs do not represent causes to be prioritized for immediate treatment based on their roles in causing cardiac arrest?",
    "options": {
      "A": "Hypovolemia and Tension Pneumothorax",
      "B": "Hyperkalemia and Acidosis",
      "C": "Drug Overdose and Cardiac Tamponade",
      "D": "Hyperglycemia and alkalosis"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Hyperglycemia and alkalosis Explanation: While Hyperglycemia (high blood sugar) is a significant metabolic disturbance, it is not a direct reversible cause of cardiac arrest compared to the other pairs. 5 H's of Cardiac Arrest Cause Description Interventions Hypovolemia (Option A ruled out) Significant loss of blood volume leading to inadequate circulation. Identify blood loss; administer fluid resuscitation. Hypoxia Inadequate oxygen supply causing cardiac arrest. Ensure airway is clear; provide supplemental oxygen. Hydrogen Ion (Acidosis) (Option B ruled out) Disruption of heart function due to metabolic or respiratory acidosis. Monitor arterial blood gasses; administer sodium bicarbonate. Hyper-/Hypokalemia (Option B ruled out) Abnormal potassium levels leading to cardiac arrest. Treat with calcium, insulin, or dialysis. Hypoglycemia Low blood sugar levels precipitating cardiac arrest. Administer glucose. 5 T's of Cardiac Arrest Cause Description Interventions Toxins (Option C ruled out) Drug overdoses or toxic substance exposure causing cardiac arrest. Identify toxins; provide antidotes or supportive care. Tamponade (Cardiac) (Option C ruled out) Fluid accumulation in the pericardial sac leading to decreased cardiac output. Perform pericardiocentesis to relieve pressure. Tension Pneumothorax (Option A ruled out) Air in the pleural space causing lung collapse. Immediate needle thoracostomy for decompression. Thrombosis (Coronary and Pulmonary) Blockages causing cardiac arrest (heart attack or pulmonary embolism). Thrombolytics for coronary thrombosis; anticoagulation for pulmonary embolism. Trauma Severe injuries leading to cardiac arrest through hemorrhage or direct heart injury. Assess for injuries; provide appropriate interventions. Reference: https://acls-algorithms.com/hsandts/ https://pubmed.ncbi.nlm.nih.gov/32504821/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 9,
    "question": "A 60-year-old male patient presents to the emergency department with palpitations and shortness of breath. Upon assessment, he is found to have narrow-complex tachycardia at a rate of 180 beats per minute. He reports no chest pain or hypotension. What is the most appropriate initial management for this stable patient?",
    "options": {
      "A": "Synchronized cardioversion",
      "B": "Administration of amiodarone",
      "C": "Administration of adenosine",
      "D": "Observation and reassurance"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Administration of adenosine Explanation: Administration of adenosine because it is the first-line treatment for stable narrow-complex tachycardia. Adenosine acts quickly to potentially terminate the arrhythmia by interrupting the reentrant pathways, making it the most appropriate choice in this scenario. Adult Tachycardia Algorithm Management follows the Advanced Cardiac Life Support (ACLS) guidelines. Treatment decisions depend on patient stability and tachycardia characteristics. Key Steps Initial Assessment : Check for signs of tachycardia. Determine stability: Signs of instability: Chest pain Shortness of breath Altered mental status Hypotension Pulmonary edema Ischemic changes on ECG Rhythm Type Identification : Classify based on QRS complex \"list-style-type:square\" aria-level=\"3\"> Narrow-complex : QRS < 0.12 seconds Wide-complex : QRS ≥ 0.12 seconds Management Based on Stability : Stability Narrow-Complex Management Wide-Complex Management Stable Pharmacological options: Adenosine Beta-blockers Calcium channel blockers Antiarrhythmics, e.g., amiodarone (Option B ruled out) Unstable (Option C ruled out) Synchronized cardioversion Synchronized cardioversion Synchronized Cardioversion : Start at 50 joules, increase if needed. Ensure synchronization with R wave to prevent ventricular fibrillation. Post-Resuscitation Care : Monitor for complications after cardioversion or stabilization. Observation and reassurance (Option D) : This is insufficient management for a tachycardic patient, even if stable. Immediate treatment is warranted. Reference: https://www.ncbi.nlm.nih.gov/books/NBK482173/ https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5523088/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 10,
    "question": "A 68-year-old man presents to the emergency department with palpitations, dizziness, and chest discomfort. His vital signs are blood pressure 75/50 mmHg, heart rate 190 beats per minute, and oxygen saturation 94% on room air. He appears pale and diaphoretic. ECG is shown below. What is the most appropriate next step in the management of this patient?",
    "options": {
      "A": "Administer IV amiodarone 150 mg over 10 minutes",
      "B": "Perform immediate unsynchronized defibrillation",
      "C": "Perform immediate synchronized cardioversion",
      "D": "Administer intravenous adenosine 6 mg"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Perform immediate synchronized cardioversion Explanation: The clinical presentation and ECG suggesting a monomorphic wide-complex tachycardia with a regular rhythm is consistent with a diagnosis of an unstable monomorphic ventricular tachycardia. The first line of treatment for unstable VT with a pulse is synchronized cardioversion. Wide QRS Tachycardia (QRS ≥ 0.12 second): Ventricular in origin It includes ventricular tachycardia and ventricular fibrillation, pre-excited tachycardias (Wolff-Parkinson-White syndrome), and ventricular-paced rhythms. Ventricular tachycardia is classified as monomorphic or polymorphic Treatment is based on the type of ventricular tachycardia Monomorphic VT: Regular, stable with a pulse- DOC is Adenosine 6mg IV push followed by 12mg IV push if needed Unstable patient with pulse-synchronized cardioversion No pulse- Unsynchronized shock Polymorphic VT: With pulse- Amiodarone or procainamide Without pulse/unstable- Unsynchronized shock Ventricular fibrillation: Note: Almost always presents as unstable, without a pulse- Unsynchronized shock Administer IV amiodarone 150 mg over 10 minutes (Option A): It is not the first-line treatment in a patient with hemodynamic instability and shock. Immediate cardioversion is preferred",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Cardiopulmonary_Cerebral_Resuscitation-Cpcr_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 11,
    "question": "A 35-year-old woman presents to the emergency department with palpitations that started suddenly 30 minutes ago. She reports feeling lightheaded but denies chest pain or shortness of breath. Her vital signs show a heart rate of 180 beats per minute, blood pressure of 120/80 mmHg, and oxygen saturation of 96% on room air. ECG is shown below. Reveals a regular narrow-complex tachycardia without discernible P waves. What is the most appropriate initial management?",
    "options": {
      "A": "Immediate synchronized cardioversion",
      "B": "Intravenous adenosine 6 mg push",
      "C": "Intravenous amiodarone 150 mg over 10 minutes",
      "D": "Perform carotid sinus massage"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Perform carotid sinus massage Explanation: The patient is likely experiencing stable supraventricular tachycardia (SVT). Initial management for stable SVT includes vagal maneuvers such as carotid sinus massage or the Valsalva maneuver. Narrow complex tachycardia (QRS I 0.12 second): They arise above the ventricles Types: Regular and irregular rhythm SVT: Atrial flutter: Atrial fibrillation: Immediate synchronized cardioversion (Option A): In this case, the patient is hemodynamically stable with a blood pressure of 120/80 mmHg, no chest pain, and no shortness of breath. Therefore, synchronized cardioversion is unnecessary as a first-line treatment in this stable scenario. Intravenous adenosine 6 mg push (Option B): It is the next step after vagal manoeuvres fail in SVT. Intravenous amiodarone 150 mg over 10 minutes (Option C): It is not a first-line treatment for narrow-complex tachycardia like SVT in a stable patient.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Cardiopulmonary_Cerebral_Resuscitation-Cpcr_Q11_q.png",
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 12,
    "question": "A 65-year-old man with a history of coronary artery disease and heart failure presents to the emergency department after experiencing lightheadedness and near syncope. On examination, he is alert but pale, with a heart rate of 43 beats per minute and a blood pressure of 80/50 mmHg. The ECG is shown below. He remains hypotensive and symptomatic despite the IV administration of a maximum dose of atropine. What is the most appropriate next step in the management of this patient?",
    "options": {
      "A": "Epinephrine IV bolus",
      "B": "Amiodarone IV infusion",
      "C": "Dopamine IV infusion",
      "D": "Digoxin IV bolus"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Dopamine IV infusion Explanation: The clinical presentation and ECG suggesting sinus bradycardia without evidence of heart block are consistent with symptomatic sinus bradycardia with hypotension. After atropine fails, the next step in the management is dopamine infusion. Adult bradycardia algorithm Epinephrine IV bolus (Option A): The recommendation is IV infusion and not as a bolus administration of the drug. Amiodarone IV infusion (Option B) and digoxin IV bolus (Option D): They are not used in treating bradyarrhythmias.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Cardiopulmonary_Cerebral_Resuscitation-Cpcr_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 13,
    "question": "A 58-year-old man is found unresponsive and pulseless at home. Paramedics initiate CPR and provide bag-mask ventilation. Upon arrival at the emergency department, the patient is intubated. IV access is delayed due to difficult peripheral access, and intraosseous access is not immediately available. The decision is made to administer drugs via the endotracheal tube. Which of the following drugs is appropriate for endotracheal administration during cardiac arrest?",
    "options": {
      "A": "Amiodarone",
      "B": "Epinephrine",
      "C": "Adenosine",
      "D": "Atropine"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Epinephrine Explanation: Epinephrine can be administered via the endotracheal route if IV or IO access is not available during cardiac arrest. The recommended endotracheal dose is generally 2 to 2.5 times the intravenous dose. Drugs with good tracheal absorption (“NAVEL” mnemonic): N aloxone A tropine V asopressin V alium E pinephrine (Option B) L idocaine Amiodarone (Option A) and Adenosine (Option C) : They are not suitable for the endotracheal route of administration. Atropine (Option D): It can be administered via the endotracheal route but it is not used according to the recent ACLS guidelines in the event of a cardiac arrest. Reference: https://www.sciencedirect.com/science/article/abs/pii/B9780323341257000541 https://pubmed.ncbi.nlm.nih.gov/12351290/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 14,
    "question": "A 70-year-old man with a history of ischemic cardiomyopathy (ejection fraction 25%) and a previous history of myocardial infarction presents to the emergency department with dizziness, palpitations, and mild breathlessness. On arrival, his heart rate is 130 beats per minute, and his blood pressure is 100/64 mmHg. His ECG is shown below. Which among the following options is the most appropriate in the management of this patient?",
    "options": {
      "A": "Intravenous amiodarone 150 mg over 10 minutes",
      "B": "Adenosine 12 mg IV push",
      "C": "Intravenous lidocaine 1 mg/kg",
      "D": "Intravenous magnesium sulfate 2 g"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Intravenous amiodarone 150 mg over 10 minutes Explanation: The clinical presentation and ECG are suggestive of a stable, monomorphic wide-complex tachycardia, consistent with ventricular tachycardia (VT). Amiodarone 150 mg IV over 10 minutes, followed by 1 mg/min infusion for 6 hours is the antiarrhythmic of choice for hemodynamically stable monomorphic ventricular tachycardia (VT) with impaired cardiac function (EF<45%). Amiodarone Mechanism of action: Multichannel blocker (sodium, potassium, calcium channel, and non-competitive α / β -blocker) Indications: Hemodynamically stable monomorphic VT (wide complex) Stable irregular narrow complex tachycardia (atrial fibrillation) Stable regular narrow complex tachycardia Unstable VT and VF To control rapid ventricular rate due to accessory pathway conduction in pre-excited atrial arrhythmias Polymorphic VT with normal QT interval Antiarrhythmic of choice in cardiac function impairment (EF<40%) (Option A) Dosage: 150 mg given over 10 min and repeated if necessary Followed by a 1 mg/min infusion for six hours Followed by 0.5 mg/min The total dose over 24 h should not",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Cardiopulmonary_Cerebral_Resuscitation-Cpcr_Q14_q.png",
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  },
  {
    "q_no": 15,
    "question": "A 54-year-old woman presents to the emergency department with palpitations, dizziness, and mild shortness of breath. Her vital signs are heart rate of 150 bpm, blood pressure of 124/80 mmHg, and oxygen saturation of 95% on room air. The rhythm strip of the ECG is shown below. Vagal maneuvers are attempted without success. You decide to administer adenosine. Which of the following is the most appropriate initial dose of adenosine, and what is the mechanism of its action?",
    "options": {
      "A": "6 mg IV push, briefly depresses sinus node and AV node conduction",
      "B": "12 mg IV push, briefly depresses sinus node and AV node conduction",
      "C": "6 mg IV push, increases AV node conduction and depresses sinus node",
      "D": "12 mg IV push, decreases AV node conduction and increases sinus node rate"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 6 mg IV push, briefly depresses sinus node and AV node conduction consistent with supraventricular tachycardia (SVT). Adenosine is an endogenous purine nucleoside that temporarily depresses the sinus node and AV node function, essential in treating regular, narrow-complex tachycardias like SVT. The initial dose of 6 mg IV should be administered rapidly, followed by a 20 mL saline flush. Adenosine Mechanism of action: Endogenous purine nucleoside Briefly depresses sinus node rate and AV node conduction Vasodilator Half-life: 10-30s Indication: Narrow-complex tachycardia: Stable, regular tachycardias Unstable, regular tachycardias while preparing for electrical cardioversion Wide-complex tachycardia: Stable, regular, monomorphic, as a therapeutic and diagnostic maneuver Dosage: 6 mg IV as a rapid push followed by a 20 mL saline flush Repeat if required as 12 mg IV push Side effects: Hypotension Bronchospasm Chest discomfort Reference: Miller's Anesthesia, 9th Edition, Page 2729 https://www.ahajournals.org/doi/pdf/10.1161/01.CIR.82.5.1854",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Cardiopulmonary_Cerebral_Resuscitation-Cpcr_Q15_q.png",
    "explanation_image": null,
    "chapter_heading": "Cardiopulmonary Cerebral Resuscitation-Cpcr"
  }
]