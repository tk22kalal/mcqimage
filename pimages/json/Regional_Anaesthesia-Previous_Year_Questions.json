[
  {
    "q_no": 1,
    "question": "A female following an RTA injured her chest. On X-ray, fracture of 3rd to 5th ribs was noted. Pain was not responsive to analgesics. Which block will be given to reduce the pain?",
    "options": {
      "A": "Cervical block",
      "B": "Thoracic epidural block",
      "C": "Supra-clavicular block",
      "D": "Lumbar epidural block"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Thoracic epidural block Explanation: Pain Origin: The patient has rib fractures (3rd to 5th ribs), leading to severe pain that is not relieved by analgesics . Best Pain Management: A thoracic epidural block provides excellent analgesia for rib fractures by blocking intercostal nerves at multiple levels. Mechanism: It involves injecting local anesthetics and opioids into the thoracic epidural space , leading to segmental pain relief without systemic opioid side effects. Indications: Used for rib fractures, thoracic surgeries, and trauma-related pain management. Thoracic Epidural Block in Rib Fractures Feature Details Indication Rib fractures, thoracic surgeries, trauma pain Mechanism Blocks intercostal nerves via epidural space Level of Block Usually T4-T8 , depending on rib injury Drugs Used Local anesthetics (e.g., bupivacaine) + opioids (e.g., fentanyl) Advantages Superior pain control, reduces respiratory complications, prevents opioid overuse Complications Hypotension, motor blockade, infection (rare) Cervical block (Option A): Incorrect because cervical plexus blocks are used for neck surgeries, not rib fractures. Supra-clavicular block (Option C): Incorrect because it targets the brachial plexus and is used for upper limb anesthesia, not chest pain. Lumbar epidural block (Option D): Incorrect because lumbar epidurals are used for lower body surgeries and labor analgesia, not rib fractures. Reference: Miller’s Anesthesia, 9th Edition, Page 1033 https://pmc.ncbi.nlm.nih.gov/articles/PMC9840019/ https://pmc.ncbi.nlm.nih.gov/articles/PMC7151756/ https://pubmed.ncbi.nlm.nih.gov/24488821/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 2,
    "question": "In epidural anesthesia, which of the following layers is least likely to be punctured during the procedure?",
    "options": {
      "A": "Arachnoid mater",
      "B": "Ligamentum flavum",
      "C": "Supraspinous",
      "D": "Infraspinous"
    },
    "correct_answer": "A",
    "explanation": "anesthesia as it is not intended to be pierced. Order in which structures are pierced: Skin Subcutaneous fat Supraspinous ligament (Option C) Interspinous ligament (Option D) Ligamentum flavum (Option B) Reference: https://www.ncbi.nlm.nih.gov/books/NBK542219/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 3,
    "question": "Which of the following is most suitable for intravenous regional anesthesia?",
    "options": {
      "A": "Bupivacaine",
      "B": "Mepivacaine",
      "C": "Procaine",
      "D": "Lidocaine"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Lidocaine Explanation: The most suitable local anesthetic for intravenous regional anesthesia (IVRA), commonly known as Bier's block , is Lidocaine. Intravenous regional anesthesia (IVRA): Indications Suitable for minor surgical procedures on the upper or lower extremities (hand surgeries, forearm procedures, and foot surgeries). Used when general anesthesia is not necessary and for patients with contraindications to other forms of anesthesia. Anesthetic Agents Commonly used local anesthetics include Lidocaine (most frequent) Prilocaine Procedure Steps Tourniquet Application: Apply a tourniquet to the proximal part of the extremity to prevent blood flow and keep the local anesthetic localized. Venous Access: Establish intravenous access in the selected limb. Administration of Anesthetic agent: Inject the local anesthetic into the IV line, typically in a volume of 40-50 mL. Tourniquet Management The tourniquet should be inflated to a pressure that is approximately 50 mmHg above systolic blood pressure. It is typically safe to keep the tourniquet inflated for 30-60 minutes; prolonged inflation can increase the risk of complications. Advantages Provides effective analgesia with minimal systemic absorption. Allows for a bloodless surgical field. Quick onset of action and ease of administration. Disadvantages and Complications Local Anesthetic Systemic Toxicity (LAST) Can occur if the local anesthetic enters the systemic circulation. Tourniquet Pain Nerve Damage Contraindications Infection at the injection site or over the tourniquet. Severe peripheral vascular disease. Patient refusal or inability to cooperate. Lipid Emulsion Therapy Used as a treatment for Local anesthesia systemic toxicity, acts by sequestering the local anesthetic from circulation and mitigating toxic effects. Administer a 20% lipid emulsion intravenously if toxicity occurs. Bupivacaine (Option A): is the most cardiotoxic drug and it should never be administered intravenously. Mepivacaine (Option B): has the same anesthetic potency as lidocaine but also has a milder dilating ability, leading to a longer duration of anesthesia without a vasoconstrictor. Procaine (Option C): can be used as an alternative if allergic to lignocaine. It can cause methemoglobinemia.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 4,
    "question": "Which drug is most likely responsible for the occurrence of hyperthermia and muscle rigidity in a patient undergoing surgery while being administered anesthesia with halothane?",
    "options": {
      "A": "D-curare",
      "B": "Suxamethonium",
      "C": "Cis-atracurium",
      "D": "Rocuronium"
    },
    "correct_answer": "B",
    "explanation": "muscle relaxant can trigger malignant hyperthermia (MH) in genetically susceptible individuals, especially when used with volatile anesthetics like halothane. MH is characterized by hyperthermia, muscle rigidity, hypercapnia, and tachycardia due to excessive calcium release in skeletal muscle. Malignant hyperthermia is a rare but life-threatening condition triggered by drugs like succinylcholine and volatile anesthetics (e.g., halothane), requiring prompt treatment with dantrolene to prevent fatal outcomes. Incorrect Options: D-curare (Option A) : A non-depolarizing muscle relaxant, but it is not associated with triggering malignant hyperthermia. Cis-atracurium (Option C) : A non-depolarizing agent with minimal side effects and no association with MH. Rocuronium (Option D) : Another non-depolarizing muscle relaxant not linked to malignant hyperthermia. Reference: Morgan and Mikhail’s Clinical Anesthesiology, Edition 5, Pg 1185- 1188",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 5,
    "question": "A patient presented with headache, vomiting, and fever. Meningitis was suspected. While performing a lumbar puncture, which is the last structure you will pierce just before entering the lumbar cistern?",
    "options": {
      "A": "Ligamentum flavum",
      "B": "Dura mater",
      "C": "Arachnoid membrane",
      "D": "Pia mater"
    },
    "correct_answer": "C",
    "explanation": "pierced during a lumbar puncture before the needle enters the lumbar cistern, where cerebrospinal fluid (CSF) is present. During a lumbar puncture, the sequence of structures pierced includes skin → subcutaneous tissue → supraspinous ligament → interspinous ligament → ligamentum flavum → dura mater → arachnoid membrane. The needle stops in the lumbar cistern, which lies between the arachnoid membrane and pia mater. Incorrect Options: Ligamentum flavum (Option A) : This is pierced earlier, just after passing through the skin, subcutaneous tissue, and supraspinous and interspinous ligaments. Dura mater (Option B) : This tough, outer meningeal layer is pierced before the arachnoid membrane. Pia mater (Option D) : This innermost meningeal layer closely adheres to the spinal cord and is not pierced during a lumbar puncture unless there is accidental trauma. Reference: Miller’s Anaesthesia, Edition 9, Pg 1685, 1700, 1712",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 6,
    "question": "A smoker who underwent an interscalene block for an arthroscopic acromioclavicular joint reconstruction 2 days ago presents for a follow-up. A chest X-ray is performed, which shows an abnormality. The patient is asymptomatic and is resting comfortably in bed. What is the next step in management?",
    "options": {
      "A": "Insert chest drain as soon as possible",
      "B": "Do thoracostomy",
      "C": "Elective intubation and IPPV",
      "D": "Wait and watch and give supplementary oxygen if needed"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Wait and watch and give supplementary oxygen if needed Explanation: Given that the patient is asymptomatic and resting comfortably , the most appropriate course of action is close observation . This approach ensures that any changes in the patient's condition are promptly identified. If the patient develops any signs of respiratory distress or hypoxia , supplementary oxygen can be administered as necessary. Key points: The patient’s asymptomatic status suggests that immediate intervention is not required. Close monitoring helps detect any subtle signs of complications such as pneumothorax or diaphragmatic paralysis . Supplementary oxygen can be provided if respiratory symptoms emerge, ensuring optimal management in case the patient becomes symptomatic. Incorrect Options: Insert chest drain as soon as possible (Option A): Since the",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Regional_Anaesthesia-Previous_Year_Questions_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 7,
    "question": "What is the needle shown in the picture?",
    "options": {
      "A": "Whitacre needle",
      "B": "Sprotte needle",
      "C": "Tuohy needle",
      "D": "Quincke-Babcock needle"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Tuohy needle Explanation: The Tuohy needle is characterised by its curved, blunt tip, which is specifically designed to guide catheters into the epidural space for procedures such as: Epidural anaesthesia. Pain management (e.g., labour analgesia). Key features of the Tuohy needle: Blunt curved tip : Minimises the risk of puncturing the dura. Epidural markings : Assist in depth estimation during insertion. Side hole (lateral aperture) : Allows the passage of an epidural catheter. Incorrect Options: Whitacre needle (option A): This is a pencil-point needle used for spinal anaesthesia. It has a non-cutting tip to reduce the risk of post-dural puncture headache. Sprotte needle (option B): Another pencil-point needle designed for spinal anaesthesia with a longer side hole for smooth cerebrospinal fluid flow. Quincke-Babcock needle (option D): A cutting-tip needle used for spinal anaesthesia. It creates a sharp puncture, which increases the risk of post-dural puncture headache compared to pencil-point needles. Reference: Morgan and Mikhail’s Clinical Anaesthesia, 5th Edition, Page 955",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Regional_Anaesthesia-Previous_Year_Questions_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 8,
    "question": "Duration of action of Proparacaine:",
    "options": {
      "A": "2 min",
      "B": "5 min",
      "C": "40 min",
      "D": "20 min"
    },
    "correct_answer": "D",
    "explanation": "minutes. This means that its effects will typically last for approximately 20 minutes after application. It provides temporary and localized anesthesia to the eye, allowing for the performance of necessary procedures without causing significant discomfort to the patient. Incorrect Options: Option A - 2 min: This option suggests an extremely short duration of action, which is not consistent with the typical effects of Proparacaine. Option B - 5 min: This option suggests a slightly longer duration of action compared to option A, but it is still shorter than the correct answer Option C - 40 min: This option suggests a significantly longer duration of action, which is not consistent with the properties of Proparacaine. Reference: Morgan and Mikhail's anaesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 9,
    "question": "Spinal anaesthesia in an adult is given at this level:",
    "options": {
      "A": "T12-L1",
      "B": "L1-L2",
      "C": "L3-L4",
      "D": "L5-S1"
    },
    "correct_answer": "C",
    "explanation": "sensation and motor function in a specific area of the body. The level at which spinal anesthesia is typically administered in adults is the L3-L4 vertebral level. The anesthetic agent is injected into the cerebrospinal fluid (CSF) in the subarachnoid space at this level, allowing for selective anesthesia below that level. Incorrect Options: Option A - T12-L1: This level is higher than the usual level for spinal anesthesia and is not commonly used. Option B - L1-L2: This level is also higher than the usual level for spinal anesthesia and is not commonly used. Option D - L5-S1: This level is lower than the usual level for spinal anesthesia and is not typically used for this technique. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 10,
    "question": "The duration of spinal anaesthesia is based directly on:",
    "options": {
      "A": "Dose",
      "B": "Height",
      "C": "Age",
      "D": "Total body fat"
    },
    "correct_answer": "A",
    "explanation": "achieved by administering local anesthetics into the subarachnoid space, is primarily based on the dose of the anesthetic agent used. The higher the dose, the longer the duration of anesthesia. Incorrect Options: Option B - Height: The duration of spinal anesthesia is not directly influenced by a person's height. Option C - Age: The duration of spinal anesthesia is not directly determined by a person's age. Option D - Total body fat: The duration of spinal anesthesia is not directly related to a person's total body fat. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 11,
    "question": "The best type of anesthesia for pre eclampsia is:",
    "options": {
      "A": "Spinal anesthesia",
      "B": "Epidural anesthesia",
      "C": "General anesthesia",
      "D": "Caudal block"
    },
    "correct_answer": "B",
    "explanation": "anesthesia in pre-eclampsia because because in preeclampsia there is risk of airway edema that can lead to difficult intubation, therefore continuous epidural anesthesia avoid that need of intubation Incorrect Options: Option A - Spinal anesthesia: Spinal anesthesia may cause a sudden drop in blood pressure, which can be problematic in pre-eclampsia where blood pressure control is important. Option C - General anesthesia: it can be used in pre-eclampsia, it is not necessarily the best choice solely based on the risk of airway edema, but indicated in severe preeclampsia and coagulopathy. Option D - Caudal block: This option is incorrect. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Regional Anaesthesia-Previous Year Questions"
  }
]