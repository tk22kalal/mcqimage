[
  {
    "q_no": 1,
    "question": "Which of the following is true regarding spinal, epidural, and local anesthesia?",
    "options": {
      "A": "Epidural anesthesia is performed by injecting anesthetic into the intrathecal space.",
      "B": "Local anesthetics work by blocking calcium channels, preventing nerve impulse propagation.",
      "C": "Spinal anesthesia is commonly used for procedures above the umbilicus.",
      "D": "The absolute contraindication for local anesthesia is an allergy to the anesthetic."
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) The absolute contraindication for local anesthesia is an allergy to the anesthetic. Local anesthesia is a safe, effective pain management method. Works by reversibly binding sodium channels, blocking sodium entry, and inhibiting nerve impulse propagation. (Option B ruled out) Two classes of local anesthetics: Amides : Lidocaine, prilocaine, mepivacaine, bupivacaine. Esters . Widely used in dentistry for pain control. Absolute contraindication: Allergy to anesthetics. (Option D) Spinal anesthesia Spinal anesthesia is a neuraxial technique where local anesthetic is injected into the intrathecal (subarachnoid) space. Commonly used for surgeries below the umbilicus , including lower abdomen, pelvis, perineal, and lower extremities. (Option C ruled out) Performed with the patient in sitting or lateral decubitus position. Absolute contraindications: Lack of patient consent, elevated intracranial pressure (ICP). Relative contraindications: Neurological diseases, severe dehydration (hypovolemia), thrombocytopenia/coagulopathy, severe mitral/aortic stenosis, left ventricular outflow obstruction (e.g., hypertrophic obstructive cardiomyopathy).. Epidural Anesthesia Epidural anesthesia involves injecting anesthetic into the epidural space to block sensory and motor spinal nerve roots. (Option A ruled out) Covers areas like the thoracic, abdominal, pelvic, and lower extremities. Also used as adjunct pain management intraoperatively or postoperatively. Advantage : Flexible dosing and administration (intermittent or continuous infusion) to fit clinical needs. Primary indications: Obstetric anesthesia during labor, surgical anesthesia for thoracic, major intra-abdominal, or spine surgeries that do not require muscle relaxation. Absolute contraindications: Patient refusal, local infection at puncture site, increased intracranial pressure, traumatic spinal cord injury. Relative contraindications: Hemodynamic instability, obstructive cardiomyopathy, coagulopathy or therapeutic anticoagulation, thrombocytopenia, difficulty maintaining position for epidural placement, spinal abnormalities. Nerve block Peripheral nerve blocks inhibit distal nerve impulse transmission, stopping pain signals to the cortex. Uses : Acute pain management (e.g., procedural anesthesia, perioperative analgesia), diagnosing and treating chronic pain. Complications : Nerve injury, infection at catheter site, bleeding, local anesthetic systemic toxicity (LAST).",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 2,
    "question": "A 65-year-old male patient with a history of severe aortic stenosis is scheduled for elective hip replacement surgery. Which of the following is an absolute contraindication for general anesthesia in this patient?",
    "options": {
      "A": "Patient refusal",
      "B": "Severe aortic stenosis",
      "C": "Mallampati class IV airway",
      "D": "All of the above"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Patient refusal Explanation : Patient refusal is an absolute contraindication for general anesthesia in this patient. General anesthesia General anesthesia induces unconsciousness and blocks pain while controlling autonomic reflexes. Main anesthetic agents: IV anesthetics Inhalational anesthetics IV sedatives Synthetic opioids Neuromuscular blocking drugs. Common process: IV sedatives and analgesics for induction, followed by volatile anesthetics for maintenance. Absolute contraindication : Patient refusal. (Option A) Relative contraindications : Unoptimized medical conditions, difficult airway or significant comorbidities (e.g., severe aortic stenosis, pulmonary disease, CHF), procedures better suited for regional or neuraxial anesthesia to avoid airway manipulation. (Option B & C ruled out) Common side effects: Transient confusion or memory loss Dizziness Urinary retention Nausea and vomiting Chills Sore throat. Mallampati class IV airway (Option C): Mallampati class III and IV indicate a difficult airway during intubation, and thus a relative contraindication of general anesthesia Reference: Nerve block General anesthesia",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 3,
    "question": "Which of the following is true regarding the history and development of anesthesia?",
    "options": {
      "A": "Ether was introduced by Dr. Joseph O'Dwyer in 1842.",
      "B": "Chloroform was first used by Dr. Crawford Long in 1847.",
      "C": "William Morton demonstrated the use of ether as a general anesthetic in 1846.",
      "D": "Propofol was first introduced as an anesthetic in 1932."
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) William Morton demonstrated the use of ether as a general anesthetic in 1846. anesthetic (announced in 1849). 1846: William Morton demonstrated ether as a general anesthetic at Massachusetts General Hospital. (Option C) Development of Agents 1847: Dr. James Simpson introduced chloroform (used by Queen Victoria during childbirth in 1853). (Option B ruled out) Early anesthetic agents: ether and nitrous oxide. Airway Management Late 1800s: Dr. Joseph O'Dwyer described endotracheal tube usage. (Option A ruled out) 1932: Drs. Arthur Guedel and Ralph Waters introduced cuffed endotracheal tubes for positive pressure ventilation. Early 1900s: Dr. Chevalier Jackson developed handheld laryngoscopes. 1937: Dr. Robert Macintosh introduced direct laryngoscopy. Intravenous Anesthetics 1932: Barbiturates were introduced as IV anesthetics. 1977: Propofol, with faster recovery times, was developed. (Option D ruled out) Mechanisms of Anesthesia Early theories focused on anesthetics' lipophilic nature affecting neuronal membranes. Later research identified specific targets like chloride channels and neurotransmitter receptors. Recent theories examine the impact on functional brain connectivity and consciousness Reference: https://pubmed.ncbi.nlm.nih.gov/22583009/ https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9312459/ https://www.sciencedirect.com/topics/medicine-and-dentistry/history-of-anesthesia",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 4,
    "question": "A 45 year old man with a history of obesity and obstructive sleep apnea presents for elective hernia repair under general anesthesia. The newly joined Junior resident was given a chance to intubate but he could not succeed. Which of the following Mallampati classes is most likely to indicate the above scenario?",
    "options": {
      "A": "Class II",
      "B": "Class I",
      "C": "Class 0",
      "D": "Class III or IV"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Class III or IV Explanation: Mallampati class III and IV indicate a difficult airway during intubation. The Mallampati classification is used to predict the ease of intubation based on the visibility of pharyngeal structures during mouth opening and tongue protrusion. Mallampati Classification: (Mnemonic - PUSH - Pillars, Uvula, Soft palate, Hard palate) Class I: Faucial pillars, uvula, soft palate, and hard palate are visualized. Class II: The base of the uvula, soft palate, and hard palate are visualized. Class III: Soft palate and hard palate are visualized. Class IV: Hard palate only is visualized. Class 0: Any part of the epiglottis is visible (easy laryngoscopy with difficult airway management)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 5,
    "question": "A 45 year old male presents for a preoperative evaluation before a scheduled elective surgery. During the airway assessment, the base of the uvula is visible, with the soft palate and hard palate clearly seen. Based on this finding, which Mallampati classification is most appropriate for this patient?",
    "options": {
      "A": "Class I",
      "B": "Class II",
      "C": "Class III",
      "D": "Class I or II"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Class II Explanation The Mallampati classification is used to assess the ease of intubation based on the visibility of oropharyngeal structures when the patient opens their mouth and protrudes their tongue. In this case, the base of the uvula is visible along with the soft and hard palate , which fits Class II . Mallampati Classification Summary Class Visible Structures Class I (Options A & D) Soft palate, fauces, uvula, and pillars clearly visible Class II (Option D) Soft palate, fauces, and base of uvula visible (tip may not be seen) Class III (Option C) Only soft palate and base of uvula visible Class IV Only hard palate visible",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Pre-Anaesthetic_Evaluation-Introduction_And_Pac_Q5_exp.png",
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 6,
    "question": "Which interincisor distance in centimeters is considered an indicator of potential difficulty for intubation?",
    "options": {
      "A": "3 cm or less",
      "B": "5 cm or more",
      "C": "6 cm or more",
      "D": "8 cm or less"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 3 cm or less Explanation: Inter-incisor distance refers to the distance between the upper and lower incisors when the mouth is maximally opened. Measurement It is typically measured in centimeters or millimeters using a ruler or caliper. Normal Range The average interincisor distance for adults is usually around 4-5 cm (40-50 mm). Significance in Intubation An interincisor distance of less than 3 cm (2 fingerbreadths) is often considered a potential indicator of difficult intubation. A reduced distance may suggest restricted jaw mobility, making it harder to access the airway. Related Conditions Conditions such as temporomandibular joint dysfunction (TMD), jaw trauma, or other musculoskeletal issues can result in a reduced interincisor distance. Clinical Relevance An adequate inter-incisor distance is crucial for proper airway management, where intubation may be required.",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Pre-Anaesthetic_Evaluation-Introduction_And_Pac_Q6_exp.png",
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 7,
    "question": "What position should the patient's head be in to measure the sternomental distance accurately?",
    "options": {
      "A": "Neck flexed, chin down",
      "B": "Neck extended, mouth open",
      "C": "Neck fully extended, mouth closed",
      "D": "Neutral neck position"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Neck fully extended, mouth closed Explanation: The head should be in full extension with the mouth closed to get an accurate measurement of the sternomental distance. Thyromental Distance Sternomental Distance The straight line distance from the thyroid notch (Adam's apple) to the lower border of mentum (tip of the chin). The straight line distance between the manubrium sterni and bony point of mentum. A normal thyromental distance is typically greater than 6.5cm. A distance of less than 6.5 cm is often considered a predictor of difficult intubation. A normal sternomental distance is generally greater than 12.5-13.5 cm. A distance of less than 12 cm is associated with difficult airway management. Measured with the patient's neck fully extended, mouth closed , and head in a neutral position. Can be measured using a ruler or tape. Measured with the patient's neck fully extended, mouth closed , and head tilted back. A measuring tape or ruler is used to assess the distance. A shorter thyromental distance (<6.5 cm) may indicate limited mandibular space and suggest that the intubation could be difficult. A shorter sternomental distance suggests limited head and neck mobility, potentially indicating difficult intubation. Commonly used as part of a pre-anesthetic airway assessment. This measurement helps in predicting airway management challenges, particularly in patients with restricted neck movement or short necks.",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Pre-Anaesthetic_Evaluation-Introduction_And_Pac_Q7_exp.jpg",
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 8,
    "question": "A 2 year old child is scheduled for an elective surgery requiring general anesthesia. The child last had a bottle of breast milk 3 hours ago. According to current fasting guidelines for pediatric patients, what is the appropriate next step regarding the child's fasting status before anesthesia?",
    "options": {
      "A": "The child can be taken for surgery immediately since it has been 3 hours since the last feed.",
      "B": "The child should wait at least 4 hours from the last breast milk feed before undergoing anesthesia.",
      "C": "The child should not have anything to eat or drink for at least 8 hours before the procedure.",
      "D": "The child is allowed clear liquids until 4 hours prior to the surgery."
    },
    "correct_answer": "B",
    "explanation": "undergoing anesthesia. Correct Answer: B) The child should wait at least 4 hours from the last breast milk feed before undergoing anesthesia. Explanation: The recommended fasting period after breast milk consumption is 4 hours before anesthesia. Fasting Guidelines in Children and Adults Children Clear Liquids Fasting period 2 hours before anesthesia. Clear liquids include water, clear juices (without pulp), and clear broths. Breast Milk Fasting period 4 hours before anesthesia. Breast milk is digested more quickly than formula or solid foods. Infant Formula Fasting period 6 hours before anesthesia. Formula is heavier and takes longer to digest than breast milk. Non-Human Milk Fasting period 6 hours before anesthesia. Includes cow’s milk and soy milk, which are digested similarly to solid foods. Light Meal Fasting period 6 hours before anesthesia. A light meal may include toast and clear liquids but should avoid heavy, fatty, or fried foods. Solid Foods Fasting period 8 hours or more before anesthesia. This applies to a full meal, especially one containing fatty or fried foods that take longer to digest. Adults Clear Liquids Fasting period 2 hours before anesthesia. Clear liquids include water, tea, black coffee (no milk), and clear juices. Light Meal Fasting period 6 hours before anesthesia. A light meal consists of foods like toast or non-fatty snacks. Avoid heavy foods or meals rich in protein and fat. Solid Food Fasting period 8 hours or more before anesthesia. Clinical Importance of Fasting: Aspiration Prevention: Fasting reduces the risk of aspiration during anesthesia, where stomach contents may enter the lungs, leading to serious complications. Safe Induction of Anesthesia : Ensuring an empty stomach allows for safer airway management and anesthesia administration. Reference: Miller's Anesthesia, 9th Edition, Page 1381",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 9,
    "question": "Which of the following conditions is least likely to be associated with an increased risk of aspiration despite fasting in general anesthesia?",
    "options": {
      "A": "Hiatal hernia",
      "B": "Cerebral palsy",
      "C": "Multiple sclerosis",
      "D": "Patient after Nissen fundoplication surgery"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Patient after Nissen fundoplication surgery Explanation: Nissen fundoplication surgery: This procedure reinforces the lower esophageal sphincter (LES), reducing or eliminating gastroesophageal reflux, and thus lowering the risk of aspiration. Conditions at High Risk of Aspiration Despite Fasting Neurological Disorders Cerebral Palsy (Option B): Impaired motor function affects swallowing coordination. Stroke : Can lead to dysphagia and loss of protective airway reflexes. Multiple Sclerosis (Option C): Neuromuscular impairment affecting swallowing ability. Amyotrophic Lateral Sclerosis (ALS) : Progressive muscle weakness and dysphagia. Neuromuscular Disorders Myasthenia Gravis or Muscular Dystrophy Gastroesophageal Reflux Disease (GERD) Increased Risk of Reflux: Even during fasting, individuals with GERD can experience reflux, which may lead to aspiration. Obesity Increased Abdominal Pressure: Can contribute to gastroesophageal reflux, particularly when lying flat. Hiatal Hernia (Option 1) Exacerbate gastroesophageal reflux, increasing the potential for aspiration, especially when lying down. Pregnancy Hormonal Changes and Increased Abdominal Pressure: As the pregnancy progresses, these factors can increase the risk of reflux, leading to aspiration, especially in the third trimester. Diabetes Mellitus with Gastroparesis Delayed Gastric Emptying: Gastroparesis can lead to increased risk of reflux due to prolonged retention of food in the stomach. Elderly Population Age-Related Changes: Result in decreased swallowing efficiency and increased susceptibility to aspiration. Reference: Miller’s Anesthesia, 9th Edition, Page 1381",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 10,
    "question": "Which of the following medications is NOT typically discontinued prior to general anesthesia?",
    "options": {
      "A": "Metformin",
      "B": "Sulfonylureas",
      "C": "SGLT2 inhibitors",
      "D": "Calcium channel blockers"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Calcium channel blockers Explanation: Calcium channel blockers are generally continued through the perioperative period Diabetic Medications: Medication Preoperative Management Metformin (Option A ruled out) Sulfonylureas (Option B ruled out) Repaglinide GLP-1 agonists DPP-4 inhibitors Stop on the morning of surgery SGLT2 inhibitors (Option C ruled out) Stop at least 24 hours before surgery Insulin Discontinue while fasting. Exception: Patients on continuous subcutaneous insulin infusion pumps should continue at the lowest basal rate (usually the nighttime fasting rate). Intermediate-acting or long-acting insulin (Type 1 Diabetes) Take one third to one half of the usual morning dose of intermediate-acting or long-acting insulin (e.g., lente, isophane) to avoid diabetic ketoacidosis. Intermediate-acting or long-acting insulin (Type 2 Diabetes) Either take no insulin or up to one half of the usual morning dose of intermediate-acting, long-acting, or combination insulin (e.g., 70/30 preparations). Hypertensive Medications: Medication Preoperative management ACE Inhibitors (Enalapril) Stop 24 hours before surgery Angiotensin II Receptor Blockers (ARBs) (Telmisartan) Stop 24 hours before surgery Calcium Channel Blockers (Amlodipine) Continue (Option D) Reference: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8520037/ Miller’s Anesthesia, 9th Edition, Page 929",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 11,
    "question": "A 68 year old male with atrial fibrillation, on chronic warfarin therapy for stroke prevention, is scheduled for elective hip replacement surgery. How many days prior to the surgery should the warfarin be stopped?",
    "options": {
      "A": "2-5 days",
      "B": "1 day",
      "C": "7 days",
      "D": "10 days"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 2-5 days Explanation: Warfarin should be stopped 5 days before elective surgery to allow INR to fall below 1.5, minimising bleeding risk. INR is reassessed before surgery to ensure it is safe to proceed. Bridging anticoagulation (e.g., with LMWH) is considered for patients at high thromboembolic risk. Medication Continue or stop preoperatively Oral Anticoagulants Stop 2-5 days prior to noncardiac surgery Continue in high-patient risk (e.g., high-risk mechanical valves) Aspirin Low-dose aspirin (75–100 mg/day) : Often continued perioperatively in patients with high cardiovascular risk (e.g., recent stent). High-dose aspirin (>300 mg/day) : Typically stopped 7–10 days prior to surgery due to higher bleeding risk. Decision to continue or stop aspirin depends on bleeding risk of surgery vs thrombotic risk of the patient. Statins Continue Thienopyridines (e.g., Clopidogrel) Discontinue 2 weeks before surgery Note: Incase of a patient with coronary stent: Aspirin should be continued P2Y12 Inhibitors (e.g., clopidogrel, ticagrelor, prasugrel) should be discontinued 1 day (Option B) : IToo short. INR would still be elevated, increasing bleeding risk. 7 days (Option C) : Longer than needed in most cases; not routinely necessary. 10 days (Option D) : Excessively long and may unnecessarily increase thrombotic risk. Reference: Barash Clinical Anesthesia, 9th Edition, PDF reader, Pages 1794-1795 Miller’s Anesthesia, 9th Edition, Page 936 https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2464262/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 12,
    "question": "Which of the following drugs can be continued perioperatively?",
    "options": {
      "A": "Antithyroid",
      "B": "Antiepileptic",
      "C": "Antidepressants",
      "D": "All of the above"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) All of the above Explanation: Drug Continued or stopped preoperatively Antithyroid Continued Antiepileptic Continued Antidepressants Continued Smoking Stop at least 6-8 weeks prior Steroid Continued Anticonvulsants Continued Monoamine Oxidase Inhibitors (MAOIs) Discontinue 2-3 weeks before surgery Oral Contraceptive Pill Discontinue at least 6 weeks before Herbal Supplements Discontinue at least 2 weeks before surgery Note: Ayurvedic medicine: Stop 2 weeks prior to surgery All psychiatric meds continue except Lithium: Stop 48 hrs before surgery MAO Inhibitors/ TCA: Stop 3 Weeks Prior To Surgery Reference: Morgan and Mikhail’s Clinical Anesthesiology, 7th Edition, Pages 1113, 999, 1167, 1153, and 1418 https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2464262/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 13,
    "question": "A 30 year old primigravida is scheduled for elective cholecystectomy. What ASA category does she belong to?",
    "options": {
      "A": "Class 1",
      "B": "Class 2",
      "C": "Class 3",
      "D": "Class 4"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Class 2 Explanation: The ASA (American Society of Anesthesiologists) Physical Status Classification system categorises patients based on their preoperative health . A pregnant woman , even without any systemic illness, is classified as ASA Class 2 , because pregnancy itself is considered a systemic physiological change . American Society of Anesthesiologists physical status classification of patients Class Definition Examples 1 Normal healthy patient Healthy, non-smoking, no or minimal alcohol use 2 Patient with mild systemic disease (no functional limitations), normal healthy pregnancy. Mild diseases without functional limitations, including current smoker, social alcohol use, pregnancy , obesity (BMI under 35), well-controlled DM/HTN, or mild lung disease. 3 Patient with severe systemic disease (some functional limitations) functional limitations with one or more moderate to severe diseases, such as poorly controlled DM or HTN, COPD, morbid obesity (BMI ≥ 40), active hepatitis, alcohol dependence, pacemaker, moderate reduction in ejection fraction, ESRD on dialysis, or a history of MI, CVA, TIA, or CAD/stents. 4 Patient with severe systemic disease that is a constant threat to life (functionality incapacitated) Recent (<3 months) MI, CVA, TIA, CAD/stents, ongoing cardiac ischemia, severe valve dysfunction, severe ejection fraction reduction, shock, sepsis, DIC, ARD, or ESRD not on dialysis. 5 Moribund patient who is not expected to survive without the operation Ruptured abdominal/thoracic aneurysm, massive trauma, intracranial bleed with mass effect, ischemic bowel in the face of significant cardiac pathology or multiple organ/system dysfunction 6 Brain-dead patient whose organs are being removed for donor E If the procedure is an emergency, the physical status is followed by “E” (e.g., “2E”) Reference: Morgan and Mikhail’s Clinical Anesthesiology, 7th Edition, PDF Pages 547-548 https://www.asahq.org/standards-and-practice-parameters/statement-on-asa-physical-status-classification-system https://www.ncbi.nlm.nih.gov/books/NBK549785/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  },
  {
    "q_no": 14,
    "question": "A 30 year old female patient is undergoing routine laparoscopic appendectomy under general anesthesia. During laryngoscopy, the anesthesiologist can visualize the entire laryngeal aperture. What is the Cormack-Lehane grading of this laryngoscopic view?",
    "options": {
      "A": "Grade 1",
      "B": "Grade 2",
      "C": "Grade 3",
      "D": "Grade 4"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Grade 1 Explanation: Since the entire laryngeal aperture is visible, this is a Grade 1 view Cormack-Lehane grading system for laryngoscopic view: Grade 1: Entire laryngeal aperture visible (best view) Grade 2: Posterior portion of laryngeal aperture visible Grade 3: Only the epiglottis visible Grade 4: No structures visible (the most difficult view) Reference: Miller’s Anesthesia, 9th Edition, Pages 1396-1397",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Pre-Anaesthetic_Evaluation-Introduction_And_Pac_Q14_exp.jpg",
    "chapter_heading": "Pre-Anaesthetic Evaluation-Introduction And Pac"
  }
]