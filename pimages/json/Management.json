[
  {
    "q_no": 1,
    "question": "A 65 y/o male with coronary artery disease (CAD) is scheduled for an elective laparoscopic cholecystectomy. The patient is stable on medications with no recent chest pain or dyspnea. The anesthesiologist selects anaesthetic agents for the patient. Which of the following options is false regarding the choice of agents?",
    "options": {
      "A": "Propofol is used in CAD patients as the intravenous anaesthetic agent of choice.",
      "B": "Isoflurane is used as an inhalational agent for patients with good myocardial contractility.",
      "C": "Vecuronium is used as a muscle relaxant for cardiac patients.",
      "D": "Etomidate is used as an intravenous anaesthetic agent."
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Propofol is used in CAD patients as the intravenous anaesthetic agent of choice. coronary artery disease (CAD). It is not the anaesthetic agent of choice in CAD patients. Regional anaesthesia is preferred over general anaesthesia for cardiac patients when the procedure allows for it. General Anesthetics for Cardiac Patients Intravenous Anesthetics: Thiopentone: Reduces myocardial contractility, preload, and blood pressure; administer slowly with caution. Propofol: Significantly lowers blood pressure and heart rate; not ideal for patients with coronary artery disease (CAD). Ketamine: Not suitable for ischemic heart disease (IHD) and valvular heart disease; useful in cardiac tamponade and cyanotic heart disease. IIIIIII Only IV agent to increase BP and HR. Midazolam: Decreases mean arterial pressure and increases heart rate; provides excellent amnesia; safe for CAD patients. Etomidate: Causes minimal hemodynamic changes; good for patients with poor cardiac reserve. Agent of choice. (Option D) Narcotics: Preferred for cardiac stability and analgesia; newer agents like fentanyl and sufentanil also provide stability. Inhalational Agents: Isoflurane: Recommended for patients with good myocardial contractility. (Option B) Halothane: Causes myocardial depression and dysrhythmias; Not used. Nitrous Oxide: Maintains stable hemodynamics in cardiac patients. Muscle Relaxants: Vecuronium: Minimal hemodynamic changes; short-acting, suitable for cardiac patients. (Option C) Pipecuronium, Mivacurium, Doxacurium: Newer non-depolarizing agents with minimal cardiovascular side effects. Anticholinergics: Glycopyrrolate: Preferred over atropine for less tachycardia; use only as needed.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 2,
    "question": "Which of the following is the IV induction agent of choice in a patient with decompensated Cirrhosis?",
    "options": {
      "A": "Thiopentone",
      "B": "Propofol",
      "C": "Etomidate",
      "D": "Ketamine"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Propofol Explanation: Propofol is the IV induction agent of choice in patients with hepatic disease because it has a rapid onset and shorter recovery time, making it safer for these patients. Anesthesia for patients with hepatic diseases: IV induction agent of choice: Propofol Muscle relaxants of choice: Cis-atracurium/Atracurium due to organ-independent Hoffman degradation (i.e do not rely on renal or hepatic clearance) Inhalational agent: Desflurane or Isoflurane or Sevoflurane Avoid using halothane: Risk of halothane-induced hepatitis Narcotics used: Fentanyl, Sufentanil Sedatives used: Oxazepam, Lorazepam All long-acting narcotics and sedatives should be avoided in Cirrhotic patients. Thiopentone (Option A), Etomidate (Option C), and Ketamine (Option D) are not the induction agents of choice in hepatic disease. Reference: Morgan and Mikhail’s Clinical Anaesthesiology, 7th Edition, Pages 1375, 1388 Anaesthesia for Patients With Liver Disease - PMC Miller’s Anaesthesia, 9th Edition, Page 528",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 3,
    "question": "Which of the following anaesthetic agents should be avoided in patients undergoing neurosurgery who are at risk for developing pneumocephalus?",
    "options": {
      "A": "Propofol",
      "B": "Nitrous Oxide",
      "C": "Fentanyl",
      "D": "Mannitol"
    },
    "correct_answer": "B",
    "explanation": "Correct answer: B) Nitrous Oxide Explanation: Nitrous Oxide is known for its rapid onset and strong anaesthetic properties, but it should be avoided in patients at risk for pneumocephalus. Nitrous oxide can diffuse into closed-air spaces, leading to the expansion of trapped air. In neurosurgical patients, this could worsen pneumocephalus by enlarging intracranial air pockets, leading to increased intracranial pressure and potential complications. Note: Nitrous oxide is also contraindicated in bowel obstruction because it diffuses into closed air spaces, increasing bowel distension and the risk of complications. Propofol (Option A): It reduces cerebral blood flow and intracranial pressure, making it a good choice for neurosurgical patients. However, it does not affect air-filled spaces in the body, so there is no risk of exacerbating pneumocephalus when using propofol. Fentanyl (Option C): Fentanyl is an opioid that is commonly used to manage pain during surgery. It does not directly affect cerebral blood flow or alter intracranial air spaces. Mannitol (Option D): Mannitol is an osmotic diuretic that is frequently administered in neurosurgery to lower intracranial pressure by drawing fluid out of brain tissue. While it helps reduce cerebral oedema, it does not affect air-filled spaces. Reference: Miller’s Anaesthesia, 9th Edition, Pages 1872, 1874, 1878, 1893 Morgan and Mikhail’s Clinical Anaesthesiology, 7th Edition, Page 1114",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 4,
    "question": "A pregnant patient with pre-eclampsia is scheduled for a cesarean section. The anaesthesiologist opts for general anaesthesia. Which drug commonly used in general anaesthesia may have a prolonged effect in a patient receiving magnesium sulphate?",
    "options": {
      "A": "Bupivacaine",
      "B": "Fentanyl",
      "C": "Lidocaine",
      "D": "Succinylcholine"
    },
    "correct_answer": "D",
    "explanation": "Correct answer: D) Succinylcholine Explanation: Magnesium sulfate is commonly used in pre-eclampsia to prevent seizures (eclampsia). It has several effects on neuromuscular transmission: Magnesium sulfate inhibits the release of acetylcholine at the neuromuscular junction and decreases the sensitivity of the motor endplate to acetylcholine. This potentiates the action of succinylcholine, a depolarizing neuromuscular blocker, which leads to a prolonged neuromuscular blockade and, thus, a prolonged duration of muscle paralysis. Bupivacaine (Option A): Bupivacaine is a local anaesthetic used in epidural and spinal anaesthesia, and its duration of action is not significantly prolonged by magnesium sulphate. Fentanyl (Option B): Fentanyl, an opioid, does not have a prolonged effect due to magnesium sulphate and is used for pain relief during general and regional anaesthesia. Lidocaine (Option C): Lidocaine is a local anaesthetic used in regional blocks. It is not commonly affected by magnesium sulphate in terms of duration of action. Reference: Miller’s Anaesthesia, 9th edition, Pages 2018, 2201 Morgan and Mikhail’s Clinical Anaesthesiology, 7th Edition, Pages 1617,1634 Postoperative residual neuromuscular block in a woman with severe preeclampsia treated with magnesium sulfate",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 5,
    "question": "A 60-year-old obese patient with a history of ischemic heart disease is scheduled for surgery. The anesthesiologist decides to use Propofol for intravenous induction and Desflurane for maintenance. What is a crucial consideration for this anaesthetic management?",
    "options": {
      "A": "The need to keep the patient in a supine position during induction.",
      "B": "The potential for increased intraocular pressure with Desflurane.",
      "C": "The likelihood of respiratory depression with Propofol.",
      "D": "The requirement for a ramped position during induction."
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) The requirement for a ramped position during induction. Explanation: A ramped position is commonly used in obese patients to help maintain a clear airway and reduce the risk of respiratory complications during induction Anaesthesia for Obese Patients High Risk Factors: Increased risk of regurgitation and aspiration. Perioperative hypoxia; hypoxic hypoxia is most common. Induction: Rapid Sequence Induction (RSI) is utilized in the presence of any risk factors(aspiration) Inhalational Agent: Desflurane is preferred. IV Induction Agent: Propofol is commonly used. Muscle Relaxant: Any muscle relaxant can be used. Posture for Induction: Ramped position is commonly used for obese patients. Pillows are placed below the shoulders to improve airway alignment. Other Complications: Conditions such as diabetes mellitus, hypertension (HTN), and ischemic heart disease (IHD) may be present. Premedications: Avoid sedatives like benzodiazepines to minimize respiratory depression. Postoperative Considerations: Due to the increased risk of hypoxia, be prepared with CPAP or BiPAP oxygen supplementation. The need to keep the patient in a supine position during induction (Option A) : While the supine position is common, the ramped position is more appropriate for obese patients to optimize airway management. The potential for increased intraocular pressure with Desflurane (Option B): Desflurane is generally associated with minimal changes in intraocular pressure; thus, this is less of a concern compared to airway management. The likelihood of respiratory depression with Propofol (Option C): Although respiratory depression can occur with Propofol, the more critical consideration in this scenario is airway management in an obese patient, which can significantly impact safety during induction.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 6,
    "question": "A pediatric anesthesiologist is evaluating the best practice for inducing anaesthesia in a 5-year-old child with a history of asthma. Which of the following is the most appropriate choice for inhalational induction?",
    "options": {
      "A": "Isoflurane",
      "B": "Sevoflurane",
      "C": "Nitrous oxide",
      "D": "Halothane"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Sevoflurane Explanation: Sevoflurane is the preferred inhalational agent for induction in pediatric patients, especially asthmatics because it has a sweet odour, low pungency and causes minimal airway irritation. Anaesthesia in Pediatric Surgeries Concerns : Placing an IV cannula can be challenging. Bradycardia is the most common response to hypoxia. Induction Agents : Inhalational Agent : Sevoflurane is preferred due to its sweet odour and minimal airway irritation. Sevoflurane and halothane are less likely to irritate the airway or cause breath-holding and laryngospasm during induction. Volatile anaesthetics tend to depress ventilation more in infants than older children, with sevoflurane causing the least respiratory depression. IV Induction : Ketamine is commonly used. Laryngoscope : Miller laryngoscope is utilized for intubation. Endotracheal Tube : A microsized cuffed endotracheal tube is employed to minimize tracheal mucosal damage and reduce aspiration risk. Isoflurane (Option A): Isoflurane can irritate the airway, making it less suitable for patients with asthma compared to other agents. Nitrous oxide (Option C): Nitrous oxide is not the best choice for induction in this scenario because it is a weak anaesthetic and is typically used as a carrier gas rather than a sole agent for anaesthesia induction. Halothane (Option D) is associated with potential complications, such as hepatic dysfunction, bradycardia and arrhythmias , and is not preferred in pediatric patients, especially those with asthma.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 7,
    "question": "A 70-year-old patient with a history of hypertension is scheduled for cataract surgery under local anaesthesia. Which of the following is true regarding anaesthesia considerations in ocular procedures?",
    "options": {
      "A": "The use of ketamine as the induction agent to prevent complications.",
      "B": "Atropine is preferred to treat bradycardia due to the oculocardiac reflex.",
      "C": "Nitrous oxide is the preferred analgesic agent during vitreoretinal surgeries.",
      "D": "Retrobulbar block for anaesthesia is preferred due to its least side effects."
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Atropine is preferred to treat bradycardia due to the oculocardiac reflex. symptoms occurring during the event of an oculocardiac reflex. The surgery is halted immediately. Anesthesia in Ocular Surgeries: Topical : Commonly used for cataract and glaucoma surgeries. Beneficial for patients on anticoagulants as it reduces injection-related bleeding risks. Topical eye drops or gels are available. Eg. Lidocaine Local Anesthesia : (Option D ruled out) Retrobulbar : Generally avoided due to risks of optic nerve damage, global perforation and haemorrhage. Peribulbar : Most commonly used. Safer than retrobulbar block. (Has the least side effects) General Anesthesia : Induction agents (e.g., propofol, thiopental, etomidate) and volatile anaesthetics decrease IOP significantly. Avoid Ketamine : Increases intraocular pressure (IOP) and may cause nystagmus. (Option A) Avoid Nitrous Oxide (N2O) : This should be avoided in surgeries involving gas bubble placement (Viteroretinal surgery) as it can Increase the size of the bubble, leading to increased ICP. (Option C) Neuromuscular Blockade: Preferably non-depolarizing agents are used e.g. Atracurium, Cisatracurium Sugammadex for reversal of non-depolarizing blockers to avoid IOP increases associated with anticholinergics. Oculocardiac reflex: Bradycardia may occur due to a stretch of the rectus muscle during surgery Treatment : Atropine (due to its fast onset of action) is immediately given, and surgery is halted. (Option B)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 8,
    "question": "A 35 y/o asthmatic patient is scheduled for a minor surgical procedure. Which induction agent and muscle relaxant combination is safest for this patient?",
    "options": {
      "A": "Propofol and Succinylcholine",
      "B": "Ketamine and d-tubocurarine",
      "C": "Ketamine and Vecuronium",
      "D": "Thiopental and Rocuronium"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Ketamine and Vecuronium Explanation: Ketamine is beneficial in asthmatics as it provides analgesia and induces bronchodilation without significant hemodynamic instability and Vecuronium is a non-depolarizing muscle relaxant that does not release histamine, making it safe for use in asthmatic patients. Anaesthesia in Asthmatics IV Induction Agent : Propofol : Preferred for stable patients, promotes bronchodilation. Ketamine : Ideal for hemodynamically unstable asthmatics, promotes bronchodilation. Muscle Relaxant : Vecuronium , Rocuronium , Cis-atracurium : Safe for use in asthmatics, no significant histamine release. Pancuronium : Releases low levels of histamine. Inhalational Agent : Sevoflurane , Isoflurane , Halothane : Ideal choices as they depress airway reflexes and relax bronchial smooth muscle. Desflurane : This should be avoided due to airway irritation and increased airway resistance. Propofol and Succinylcholine (Option A) : Succinylcholine may provoke bronchospasm. Ketamine and d-tubocurarine (Option B) : d-tubocurarine releases histamine, which can trigger bronchospasm. Thiopental and Rocuronium (Option D) : Thiopental has slower recovery times and can cause respiratory depression. Reference: Miller’s Anaesthesia, 9th edition, Page 812",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 9,
    "question": "A 50-year-old patient is scheduled for a short elective procedure in a daycare setting. The anesthesiologist needs to ensure rapid induction, short-term muscle relaxation, and quick recovery to facilitate early discharge. Which muscle relaxant would be the most suitable for this scenario?",
    "options": {
      "A": "Vecuronium",
      "B": "Succinylcholine",
      "C": "Mivacurium",
      "D": "Pancuronium"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Mivacurium Explanation: Mivacurium is a short-acting, rapidly metabolized muscle relaxant, ideal for daycare surgeries where fast recovery is desired. Duration of Action Muscle Relaxant Long-Acting Pancuronium Intermediate-Acting Rocuronium, Vecuronium, Atracurium, Cisatracurium Short-Acting Mivacurium Ultrashort-Acting Gantacurium Anaesthesia in Day Care Surgery IV Induction Agent : Propofol : Rapid onset and recovery; commonly used for induction and maintenance. Muscle Relaxant : Mivacurium : Short-acting; suitable for short procedures. Inhalational Agent : Desflurane : Best for rapid recovery but less commonly used due to cost and airway irritability. Sevoflurane : Most commonly used; provides smooth induction with minimal airway irritation. Vecuronium (Option A) is an intermediate-acting muscle relaxant, not ideal for short procedures where quick recovery is needed Succinylcholine (Option B) : While Succinylcholine provides short-term paralysis, it has significant side effects (e.g., hyperkalemia, malignant hyperthermia) that make it less favourable for routine daycare surgeries. Pancuronium (Option D) is long-acting and is not suitable for short, daycare procedures due to delayed recovery time. Reference: Miller’s Anaesthesia, 9th edition, Pages 806, 812",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 10,
    "question": "A 70 kg patient is scheduled for elective open-heart surgery that is expected to last over 4 hours. According to fluid replacement guidelines, which of the following is the most appropriate additional fluid replacement rate to compensate for the third space volume loss for this patient?",
    "options": {
      "A": "140 mL/hr",
      "B": "280 mL/hr",
      "C": "560 mL/hr",
      "D": "1000 mL/hr"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) 560 mL/hr Explanation: For major surgery, such as open-heart surgery, the fluid replacement guideline recommends a rate of 6-8 mL/kg/hr . For a 70 kg patient: Minimum rate: 70 kg×8 mL/kg/hr=560 mL/hr Fluid Replacement Based on Type of Surgery Minor Surgery : Eg. Herniorrhaphy Fluid replacement: 2-4 ml/kg/hr Duration: 45 minutes to 1 hour Moderate Surgery : Eg. Cholecystectomy Fluid replacement: 4-6 ml/kg/hr Duration: Up to 2 hours Major Surgery : Eg. Bowel resection Eg. Fluid replacement: 6-8 ml/kg/hr Duration: Usually more than 4 hours Types of Fluids and Volume Replacement Crystalloids Colloids Small molecules Less effective than colloids at stabilizing hemodynamic endpoints Higher volumes are needed in the ICU compared to colloids (3:1) Larger molecules More effective at stabilizing hemodynamic endpoints Advantages : Cost-effective Easy to use Provide immediate fluid resuscitation Advantages : May provide a more swift volume expansion in the intravascular space (1:1) Disadvantages : May increase edema Disadvantages : Expensive Risk of allergic reactions. Potential for blood clotting disorders Risk of kidney failure Examples: Normal saline Balanced electrolyte solutions (e.g., Lactated Ringer's, PlasmaLyte) 5% dextrose in water (D5W) Hypertonic 3% saline Examples: Albumin (5%, 25%) Plasma protein fraction (5%) Dextran (Dextran 70, Dextran 40) Hetastarch (hydroxyethyl starch) Reference: Morgan and Mikhail’s Clinical Anaesthesia, 7th Edition, Page 2262",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 11,
    "question": "A 45 y/o male undergoes abdominal surgery and requires fluid replacement. The patient has a history of chronic kidney disease. Which of the following fluids is most appropriate for maintenance during surgery to avoid the risk of hyperchloremic metabolic acidosis?",
    "options": {
      "A": "0.9% Normal Saline",
      "B": "Ringer's Lactate",
      "C": "3% NaCl",
      "D": "5% Dextrose in Water"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Ringer's Lactate Explanation: Ringer's Lactate is often preferred because it contains a buffer (lactate) that helps to mitigate the risk of acidosis. It is isotonic and provides electrolytes in a more balanced way, making it a suitable option for patients with CKD. Ringer's Lactate (Balanced Crystalloid) Usage : Maintenance fluid during surgery. Advantage : Prevents hyperchloremic metabolic acidosis, unlike normal saline. Excretion : Rapid elimination due to suppression of ADH secretion, promoting diuresis. Buffer : Lactate metabolised to bicarbonate, maintaining or slightly increasing HCO3 − levels, hence preventing acidosis. ½ NS (0.45% NaCl, Hypotonic Saline) Usage : Maintenance fluid in the postoperative period along with 4% dextrose. Risk : To minimize the risk of hyponatremia, excessive use of hypotonic solutions, particularly in the postoperative phase, is discouraged. 3% NS (3% NaCl, Hypertonic Saline) Usage : Treatment of symptomatic hyponatremia and cerebral oedema. Mechanism : Draws water from intracellular to extracellular compartments, aiding in plasma volume expansion. Caution : Careful electrolyte and osmolality monitoring is required to avoid complications like osmotic demyelination. There is also a potential to cause fluid overload and hypernatremia, not recommended as a maintenance fluid. (Option C) 0.9% Normal Saline (Option A) : It may lead to hyperchloremic metabolic acidosis due to its high chloride content. 5% Dextrose in Water (Option D) : This hypotonic solution is used primarily for free water replacement, not surgical maintenance. It is usually used perioperatively and must be avoided in the postoperative period as it can severely dilute plasma electrolytes and osmolality. Note: An isotonic solution in the postoperative period could lead to potential GI dysfunction, when administered in excess, due to increased mucosal edema.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 12,
    "question": "A 6 y/o child weighs 20 kg and requires maintenance fluid based on the Holliday-Segar formula. What is the correct amount of fluid the child should receive in 24 hours?",
    "options": {
      "A": "1500 mL",
      "B": "1600 mL",
      "C": "1800 mL",
      "D": "2000 mL"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 1500 mL Explanation: Using the Holliday-Segar \"4-2-1\" rule : To calculate maintenance fluid per hour: First 10kgs × 4= a Next 10kgs × 2= b Next kgs × 1= c Total = a+b+c Hence, for this patient: For the first 10 kg of weight: 4 mL/kg/hour → 4 mL × 10 kg = 40 mL/hour For the next 10 kg (10-20 kg): 2 mL/kg/hour → 2 mL × 10 kg = 20 mL/hour Total per hour: 40 mL + 20 mL = 60 mL/hour In 24 hours: 60 mL/hour × 24 hours = 1440 mL (rounded to 1500 mL ) Reference: Miller’s Anaesthesia, 9th edition, Pages 1517, 1518",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  },
  {
    "q_no": 13,
    "question": "A 50 kg patient has been fasting for 6 hours before surgery. If the maintenance fluid rate is 1.2 mL/kg/h, what is the total maintenance fluid requirement?",
    "options": {
      "A": "360 mL",
      "B": "420 mL",
      "C": "500 mL",
      "D": "720 mL"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 360 mL Explanation: Maintenance Rate: 1.2 mL/kg/h Hours of Fasting: 6 hours Body Weight: 50 kg Total Maintenance Fluid = Maintenance rate (mL/kg/h) × Hours of fasting (h) × Body weight (kg) Total Maintenance Fluid = 1.2 × 6 × 50 = 360 mL Maintenance Fluid Requirements: Purpose : Covers insensible losses and urine output during fasting before surgery. Rate : Typically 1 to 1.5 mL/kg/h, adjusted for surgery type and anticipated fluid shifts. Reference: Miller’s Anaesthesia, 9th edition, Pages 1517, 1518",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Management"
  }
]