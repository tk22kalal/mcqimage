[
  {
    "q_no": 1,
    "question": "Which of the following drugs causes adrenal suppression?",
    "options": {
      "A": "Thiopental",
      "B": "Ketamine",
      "C": "Etomidate",
      "D": "Propofol"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Etomidate Explanation: Etomidate inhibits 11 β -hydroxylase , an enzyme essential for cortisol synthesis in the adrenal glands. Single-dose administration can cause transient adrenal suppression , and prolonged use can lead to critical illness-related corticosteroid insufficiency (CIRCI) . It is often avoided in septic and critically ill patients due to the risk of adrenal insufficiency. Despite minimal cardiovascular depression, its use is limited in critically ill patients due to its endocrine effects. Etomidate and Adrenal Suppression Feature Details Drug Class Intravenous anesthetic Mechanism of Adrenal Suppression Inhibition of 11 β -hydroxylase Effect Duration Lasts 6-24 hours after a single dose Clinical Impact Reduces cortisol production, leading to adrenal insufficiency Contraindications Sepsis, adrenal insufficiency, critically ill patients Advantages Minimal cardiovascular depression, rapid onset Thiopental (Option A): Incorrect because it does not inhibit cortisol synthesis and has no significant adrenal suppression effects. Ketamine (Option B): Incorrect because ketamine does not affect adrenal function; it increases sympathetic tone and is often used in shock. Propofol (Option D): Incorrect because it does not cause adrenal suppression, though it can cause hypotension due to vasodilation. Reference: Miller’s Anesthesia, 9th edition, Pages 648, 649, 667-669 Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 165-179",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 2,
    "question": "Which of the following is incorrect regarding thiopentone?",
    "options": {
      "A": "It is lipid soluble",
      "B": "It achieves maximum concentration in the brain after an IV infusion",
      "C": "Redistribution to adipose tissue and muscle is seen",
      "D": "Rapid decline in its effect is due to renal excretion"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Rapid decline in its effect is due to renal excretion Explanation: Thiopentone is a highly lipid-soluble barbiturate, allowing rapid penetration into the brain. Peak brain concentration occurs quickly after IV administration due to high cerebral perfusion. Redistribution from the brain to muscle and adipose tissue leads to a rapid decline in anesthetic effect within minutes. Termination of action is due to redistribution , not renal excretion. Renal elimination is slow and plays a minimal role in terminating its effect. Pharmacokinetics of Thiopentone Feature Details Drug Class Barbiturate Solubility Highly lipid-soluble Onset of Action Rapid (within 30 seconds IV) Termination of Effect Redistribution to muscle and fat Metabolism Hepatic metabolism (slow clearance) Excretion Primarily renal but not responsible for rapid effect decline Clinical Uses Induction of anesthesia, status epilepticus, neuroprotection It is lipid soluble (Option A): Correct because thiopentone is highly lipid-soluble, allowing rapid CNS penetration. It achieves maximum concentration in the brain after an IV infusion (Option B): Correct because peak brain levels occur within seconds after IV injection. Redistribution to adipose tissue and muscle is seen (Option C): Correct because redistribution accounts for rapid recovery from anesthesia rather than metabolism or excretion. Rapid decline in its effect is due to renal excretion (Option D): Incorrect because the effect declines due to redistribution , not renal clearance. Reference: Miller’s Anesthesia, 9th edition, Pages 648, 649 Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 165-179 KD Tripathi Essentials of Medical Pharmacology, 8th edition, Page 408",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 3,
    "question": "A 35 y/o asthmatic patient is scheduled for a minor surgical procedure. Which induction agent and muscle relaxant combination is safest for this patient?",
    "options": {
      "A": "Propofol and Succinylcholine",
      "B": "Ketamine and d-tubocurarine",
      "C": "Ketamine and Vecuronium",
      "D": "Thiopental and Rocuronium"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Ketamine and Vecuronium Explanation: Ketamine is beneficial in asthmatics as it provides analgesia and induces bronchodilation without significant hemodynamic instability. Vecuronium is a non-depolarizing muscle relaxant that does not release histamine, making it safe for use in asthmatic patients. Anaesthesia in Asthmatics IV Induction Agent : Propofol : Preferred for stable patients, promotes bronchodilation. Ketamine : Ideal for hemodynamically unstable asthmatics, promotes bronchodilation. Muscle Relaxant : Vecuronium , Rocuronium , Cis-atracurium : Safe for use in asthmatics, no significant histamine release. Pancuronium : Releases low levels of histamine. Inhalational Agent : Sevoflurane , Isoflurane , Halothane : Ideal choices as they depress airway reflexes and relax bronchial smooth muscle. Desflurane : This should be avoided due to airway irritation and increased airway resistance. Propofol and Succinylcholine (Option A) : Succinylcholine may provoke bronchospasm. Ketamine and d-tubocurarine (Option B) : d-tubocurarine releases histamine, which can trigger bronchospasm. Thiopental and Rocuronium (Option D) : Thiopental has slower recovery times and can cause respiratory depression. Reference: Anasethsia asthma Miller’s Anaesthesia, 9th edition, Page 812",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 4,
    "question": "Which of the following induction agents is most appropriate for a patient with cardiac disease?",
    "options": {
      "A": "Ketamine",
      "B": "Etomidate",
      "C": "Propofol",
      "D": "Thiopentone"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Etomidate Explanation: It is an α 2-receptors agonist therefore it maintains the vascular tone and myocardial contractility, thus maintaining cardiovascular haemodynamics which makes it an anesthetic of choice in cardiac disease. General Anesthetics for Cardiac Patients Intravenous Anesthetics: Thiopentone: Reduces myocardial contractility, preload, and blood pressure; administer slowly with caution. (Option D ruled out) Propofol: Significantly lowers blood pressure and heart rate; not ideal for patients with coronary artery disease (CAD) (Option C ruled out) Ketamine: Not suitable for ischemic heart disease (IHD) and valvular heart disease; useful in cardiac tamponade and cyanotic heart disease. Only IV agent to increase BP and HR. (Option A ruled out) Midazolam: Decreases mean arterial pressure and increases heart rate; provides excellent amnesia; safe for CAD patients. Etomidate: Causes minimal hemodynamic changes; good for patients with poor cardiac reserve. Agent of choice. (Option B) Narcotics: Preferred for cardiac stability and analgesia; newer agents like fentanyl and sufentanil also provide stability. Inhalational Agents: Isoflurane: Recommended for patients with good myocardial contractility. Halothane: Causes myocardial depression and dysrhythmias; Not used. Nitrous Oxide: Maintains stable hemodynamics in cardiac patients. Muscle Relaxants: Vecuronium: Minimal hemodynamic changes; short-acting, suitable for cardiac patients. Pipecuronium, Mivacurium, Doxacurium: Newer non-depolarizing agents with minimal cardiovascular side effects. Anticholinergics: Glycopyrrolate: Preferred over atropine for less tachycardia; use only as needed. Reference: Anaesthetic Considerations in Cardiac Patients Undergoing Non-Cardiac Surgery Morgan and Mikhail’s Clinical Anaesthesia, 7th Edition, Page 723 (PDF)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 5,
    "question": "Which of the following is contraindicated in patients with acute intermittent porphyria?",
    "options": {
      "A": "Thiopentone",
      "B": "Propofol",
      "C": "Etomidate",
      "D": "Ketamine"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Thiopentone Explanation: Thiopentone is contraindicated in patients with acute intermittent porphyria (AIP). AIP is a disorder of heme biosynthesis, and thiopentone, a barbiturate used for induction of anesthesia, can trigger an acute attack of porphyria. It induces the synthesis of porphyrin precursors, exacerbating the disease and leading to symptoms such as abdominal pain, neuropathy, and mental changes. Incorrect Options: Propofol (option B) is considered safe for use in patients with acute intermittent porphyria. It does not induce the production of porphyrin precursors and is a commonly used anesthetic agent in these patients. Etomidate (option C) is another anesthetic agent that is generally safe for use in patients with acute intermittent porphyria. It does not affect the heme pathway and is often preferred in situations where other agents might be contraindicated. Ketamine (option D) can be used in patients with acute intermittent porphyria. It does not interfere with the porphyrin biosynthesis pathway and is often used in situations where general anesthesia is required, especially in cases of trauma or when other agents are contraindicated. Reference: Morgan and Mikhail’s Clinical Anaesthesia, 6th Edition, Page 309",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 6,
    "question": "Which surgery should be avoided in a patient with a fibroma and moderate to severe cardiac disease?",
    "options": {
      "A": "Laparoscopic hysterectomy",
      "B": "Abdominal hysterectomy",
      "C": "Total hysterectomy",
      "D": "Subtotal hysterectomy"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Laparoscopic hysterectomy Explanation: Laparoscopic hysterectomy should be avoided in patients with moderate to severe cardiac disease due to the physiological changes caused by pneumoperitoneum (insufflation of the abdomen with carbon dioxide), including: Increased intra-abdominal pressure : Can lead to decreased venous return, increased afterload, and reduced cardiac output, which are particularly dangerous for patients with compromised cardiac function. Carbon dioxide absorption : Can cause hypercapnia, leading to respiratory acidosis and increased cardiac workload. Positioning during surgery : Trendelenburg position (head-down tilt) commonly used in laparoscopic surgeries can exacerbate hemodynamic instability. Incorrect Options: Abdominal hysterectomy (option B): Although it is more invasive, it avoids the hemodynamic complications of pneumoperitoneum and is relatively safer for patients with cardiac disease. Total hysterectomy (option C): This term refers to the removal of the uterus and cervix and can be performed abdominally or vaginally. The abdominal approach is safer than laparoscopic surgery in patients with cardiac disease. Subtotal hysterectomy (option D): This involves removing the uterus while leaving the cervix intact and can also be performed abdominally, which is safer for cardiac patients. Reference: Morgan and Mikhail’s Clinical Anaesthesia, 5th Edition, Page 379",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 7,
    "question": "According to the American Heart Association (AHA), what is the 6th link added to the chain of survival?",
    "options": {
      "A": "Rapid defibrillation",
      "B": "Recovery and rehabilitation",
      "C": "High-quality CPR",
      "D": "Advanced airway management"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Recovery and rehabilitation Explanation: The American Heart Association (AHA) has expanded the Chain of Survival concept by adding a sixth link: recovery and rehabilitation . This addition reflects the growing recognition that survival extends beyond the immediate resuscitation period . The complete AHA Chain of Survival now includes: Early recognition and activation of emergency response Early CPR with an emphasis on chest compressions Rapid defibrillation Advanced life support Post-cardiac arrest care Recovery/rehabilitation Rapid defibrillation (Option A) is already included as the third link. Rapid defibrillation remains a critical component for improving survival in cardiac arrest, particularly for shockable rhythms like ventricular fibrillation and pulseless ventricular tachycardia. High-quality CPR (Option C) constitutes the second link. The AHA emphasizes the importance of proper chest compression depth, rate, allowing full chest recoil, and minimizing interruptions in CPR to optimize outcomes. Advanced airway management (Option D) is part of the fourth link (advanced life support) in the Chain of Survival. While airway management is an important component of resuscitation, the AHA guidelines emphasize that it should not interfere with or delay other critical interventions such as chest compressions and defibrillation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 8,
    "question": "Which of the following can be considered effective CPR? 1. Respiratory rate: 20-24 breaths per minute 2. Chest compressions: 100-120/min 3. Allow complete chest recoil 4. 5-6cm deep compression",
    "options": {
      "A": "1,2,3 and 4",
      "B": "1,2 and 4",
      "C": "2,3 and 4",
      "D": "1 and 2 only"
    },
    "correct_answer": "C",
    "explanation": "needed to ensure high-quality CPR in BLS. Compressions (C) Position: Place the patient in a supine position on a firm surface. Site: Lower I rd of sternum Rate: 100 to 120 compressions per minute. (Statement 2) Depth: Compress 2 to 2.4 inches (5-6 cm); avoid exceeding 2.4 inches. (Statement 4) Compression-to-Ventilation Ratio: 30 compressions to 2 breaths (30:2). (Statement 1) Chest Recoil: Allow full recoil between compressions to optimize blood flow. (Statement 3) Interruptions: Minimize interruptions in compressions ( <10 seconds ). Chest Compression Fraction (CCF): The proportion of time spent performing chest compressions during CPR: Maintain a CCF ≥ 60%. For pregnant women: perform manual lateral uterine displacement (LUD) to relieve pressure on large abdominal vessels. Airway (A) Head Tilt-Chin Lift: Used to open the airway in patients without suspected neck trauma. Jaw Thrust: Preferred method, if neck trauma is suspected. The most common cause of airway obstruction in unconscious patients is the tongue falling back. Breathing (B) Rescue Breaths: Give 2 breaths after every 30 compressions. Method: Mouth-to-mouth or with a bag-mask device, ensuring chest rise with each breath. Breath Duration: Each breath should last about 1 second. Reference: American Heart Association, Basic life support provider manual- 2020, Part 4, page 19 - 23",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 9,
    "question": "While taking your morning stroll in the park, you come across an individual who is unconscious and lying on the ground. What would be the most appropriate course of action to take next from the given choices?",
    "options": {
      "A": "Check carotid pulse, start CPR, and call for help; Defibrillate if no pulse",
      "B": "Call for help, check pulse, do CPR, defibrillate if no pulse",
      "C": "Observe",
      "D": "Ignore and continue to walk"
    },
    "correct_answer": "B",
    "explanation": "Reference: American Heart Association, Basic life support provider manual- 2020, Part 4, page 15.",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q9_exp.jpg",
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 10,
    "question": "What is the specific action being demonstrated in the provided image?",
    "options": {
      "A": "Head tilt, chin lift",
      "B": "Jaw thrust",
      "C": "Head extension",
      "D": "In line manual stabilisation"
    },
    "correct_answer": "A",
    "explanation": "in an unconscious patient. By tilting the head back and lifting the chin upwards, this maneuver helps to prevent the tongue from obstructing the airway. This is commonly used in basic life support (BLS) and first aid for unresponsive patients to ensure proper ventilation. Incorrect Options: Jaw thrust (Option B) : This technique is used when there is suspicion of a spinal injury and the head tilt, chin lift might exacerbate neck injury. It involves pushing the jaw forward to open the airway without tilting the head. Head extension (Option C) : This involves extending the neck backward beyond the neutral position, which may be used in specific cases, but it is not the same as the head tilt, chin lift. In-line manual stabilization (Option D) : This refers to stabilizing the neck and spine to prevent movement, especially when there is a concern of a cervical spine injury. It is not used to open the airway directly. Reference: Morgan and Mikhail’s Clinical Anesthesiology, Edition 5, Pg 1232, 1235",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 11,
    "question": "An unresponsive patient in ambulance on attachment of monitors showed following rhythm. What should be done immediately?",
    "options": {
      "A": "Check for pulse and breathing",
      "B": "Chest compressions and defibrillation",
      "C": "Put the patient in left lateral position",
      "D": "Cardioversion"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Chest compressions and defibrillation Explanation: The rhythm in the ECG image is ventricular fibrillation (VF). This is a life-threatening arrhythmia characterized by chaotic and disorganized electrical activity in the ventricles, leading to the inability of the heart to pump blood effectively. For an unresponsive patient with ventricular fibrillation , the immediate step is: Chest compressions and defibrillation. Steps in Basic Life Support Skills: Check for pulse and breathing (Option A): While checking for pulse and breathing is crucial when assessing an unresponsive patient, in this case, the ECG already shows ventricular fibrillation, a shockable rhythm that implies cardiac arrest. There is no need to check for a pulse if the patient is unresponsive with this rhythm because VF always requires immediate chest compressions and defibrillation. Delaying treatment to check for a pulse could worsen outcomes. Put the patient in the left lateral position (Option C): The left lateral position is used to prevent aspiration in cases like unconscious patients with an intact airway or during pregnancy to reduce pressure on the inferior vena cava. However, in a patient with ventricular fibrillation, there is no effective cardiac output, and this position provides no benefit. Immediate CPR and defibrillation are the only lifesaving actions. Cardioversion (Option D): Cardioversion is used for arrhythmias like atrial fibrillation, atrial flutter, or supraventricular tachycardia in a hemodynamically unstable patient. It is a synchronized procedure delivered at a specific point in the cardiac cycle. Ventricular fibrillation requires unsynchronized defibrillation, not cardioversion, as there is no organized electrical activity to synchronize with.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 12,
    "question": "When should the indicated position be used during resuscitation?",
    "options": {
      "A": "Unconsciousness with pulse absent and breathing absent",
      "B": "Unconsciousness with pulse present and breathing absent",
      "C": "Unconsciousness with pulse and breathing present",
      "D": "Unconsciousness with pulse absent and breathing present"
    },
    "correct_answer": "C",
    "explanation": "given position (Recovery position) involves placing the patient on their side with the lower arm extended and the upper leg flexed at the hip and knee. This helps prevent the tongue from blocking the airway and allows secretions to drain from the mouth. It can help to maintain an open airway and improve ventilation. The given position is particularly useful in cases where the unconsciousness has been caused by alcohol or drug use, as these substances can increase the risk of aspiration (inhaling vomit or other liquids) and airway obstruction. By maintaining an open airway, the given position can help to prevent these complications and improve oxygenation of the tissues. Unconsciousness with pulse absent and breathing absent (Option A): This situation indicates cardiac arrest and requires cardiopulmonary resuscitation (CPR), including chest compressions and rescue breaths. Unconsciousness with pulse present and breathing absent (Option B): This situation requires artificial ventilation to support oxygenation. Unconsciousness with pulse absent and breathing present (Option D): This is a highly unlikely combination physiologically, as breathing is typically absent if the heart has stopped. If it were to occur, it would require immediate assessment and intervention, not the recovery position. Reference: https://pmc.ncbi.nlm.nih.gov/articles/PMC3161868/",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 13,
    "question": "Please identify the manoeuvre being executed in the image provided.",
    "options": {
      "A": "Head tilt, chin lift",
      "B": "Jaw thrust",
      "C": "Head extension",
      "D": "In-line manual stabilization"
    },
    "correct_answer": "A",
    "explanation": "chin lift. Head Tilt Chin Lift Maneuver: The head is tilted back while lifting the chin upwards to prevent the tongue from obstructing the airway. Used to open the airway in an unconscious patient without suspected spinal injury. Jaw Thrust Maneuver: (Option B ruled out) The lower jaw is lifted forward by placing fingers behind the angle of the mandible, moving the tongue forward and clearing the airway without moving the neck. Used to open the airway in patients with suspected cervical spine injury. Head extension (Optio C): It involves tilting the head backward but without lifting the chin. It is not as effective as the head tilt, chin lift for airway opening and is generally not recommended alone as a maneuver for maintaining a patent airway. In-line manual stabilization (Option D): This technique is used to stabilize the cervical spine in patients with suspected spinal trauma, especially during airway management or intubation. The rescuer holds the patient’s head in a neutral position to prevent any cervical movement, which could worsen a spinal injury.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 14,
    "question": "In a 60-year-old patient who has just experienced a cardiac arrest, which of the following interventions is not a part of the Advanced Cardiovascular Life Support (ACLS) protocol?",
    "options": {
      "A": "Amiodarone",
      "B": "Defibrillation",
      "C": "Adrenaline",
      "D": "Soda Bicarbonate"
    },
    "correct_answer": "D",
    "explanation": "in the past, its use has become more limited in recent guidelines. It was commonly used to correct acidosis (increased acidity) during cardiac arrest. However, current evidence suggests that routine use of sodium bicarbonate in cardiac arrest may not provide significant benefits and could potentially cause harm. Therefore, it is no longer routinely recommended in ACLS protocols, especially in cases of cardiac arrest due to non-hypoxic causes. Incorrect Options: Option A- Amiodarone: Amiodarone is included in the ACLS protocol and is used for the treatment of certain types of irregular heart rhythms, particularly ventricular fibrillation and ventricular tachycardia that are resistant to other interventions. It helps stabilize the heart's electrical activity. Option B- Defibrillation: Defibrillation is a critical component of the ACLS protocol. It involves delivering an electric shock to the heart to reset its electrical rhythm in cases of ventricular fibrillation or pulseless ventricular tachycardia, which are life-threatening arrhythmias that can lead to cardiac arrest. Option C- Adrenaline: Adrenaline (also known as epinephrine) is an essential medication in the ACLS protocol. It is used to stimulate the heart and blood vessels, increasing heart rate and blood pressure. It is administered during cardiac arrest to improve blood flow to vital organs. Reference: .",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 15,
    "question": "Which of the following statements given below is incorrect regarding CPR in adults?",
    "options": {
      "A": "Depth of chest compression up to 5-6 cm",
      "B": "Allow adequate chest recoil",
      "C": "Ventilation: 22-25 breaths/min",
      "D": "Chest compression rate 100-120/min"
    },
    "correct_answer": "C",
    "explanation": "10-12 breaths/min. Clear the airway before provide rescue breaths. CPR is carried out at a ratio of 30:2, i.e. give 2 breaths after 30 chest compressions if one person is performing CPR. If two persons are performing CPR, give two breaths after every 15 chest compressions i.e, a ratio of 15:2. The CAB algorithm highlights the key elements needed to ensure high-quality CPR in BLS. Compressions (C) Position: Place the patient in a supine position on a firm surface. Site: Lower I rd of sternum Rate: 100 to 120 compressions per minute. (Option D ruled out) Depth: Compress 2 to 2.4 inches (5-6 cm); avoid exceeding 2.4 inches. (Option A ruled out) Compression-to-Ventilation Ratio: 30 compressions to 2 breaths (30:2). (Option C) Chest Recoil: Allow full recoil between compressions to optimize blood flow. (Option B ruled out) Interruptions: Minimize interruptions in compressions ( <10 seconds ). Chest Compression Fraction (CCF): The proportion of time spent performing chest compressions during CPR: Maintain a CCF ≥ 60%. For pregnant women: perform manual lateral uterine displacement (LUD) to relieve pressure on large abdominal vessels. Airway (A) Head Tilt-Chin Lift: Used to open the airway in patients without suspected neck trauma. Jaw Thrust: Preferred method, if neck trauma is suspected. The most common cause of airway obstruction in unconscious patients is the tongue falling back. Breathing (B) Rescue Breaths: Give 2 breaths after every 30 compressions. Method: Mouth-to-mouth or with a bag-mask device, ensuring chest rise with each breath. Breath Duration: Each breath should last about 1 second. Reference: American Heart Association, Basic life support provider manual- 2020, Part 4, page 19 - 23.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 16,
    "question": "Which of the following is not an ideal step for effective CPR in adults?",
    "options": {
      "A": "100 -120 compressions per minute",
      "B": "Depth of compression 2-3 cm",
      "C": "Compression to ventilation ratio - 30:2",
      "D": "Allow complete recoil in between compressions"
    },
    "correct_answer": "B",
    "explanation": "CPR in adults is 5 to 6 cm (2 to 2.4 inches). A depth of 2 to 3 cm is insufficient for effective compressions. Incorrect Options: Option A - 100-120 compressions per minute: This is the recommended compression rate for effective CPR. Option C - Compression to ventilation ratio is 30:2: This signifies the correct ratio for adult CPR when performed by a single rescuer. Option D - Allow complete recoil in between compressions: Allowing complete chest recoil is essential to facilitate adequate venous return during CPR. Reference: .",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 17,
    "question": "When do you put a victim in the following position?",
    "options": {
      "A": "Conscious patient with pulse & breathing present.",
      "B": "Unconscious patient with pulse & breathing present.",
      "C": "Unconscious patient with pulse present but no breathing.",
      "D": "Unconscious patient without pulse but breathing present."
    },
    "correct_answer": "B",
    "explanation": "recovery position (also known as the lateral recumbent position), which is used in first aid. This position is specifically indicated when a person is unconscious but breathing and has a pulse , and there is no evidence of spinal injury . It keeps the airway open , prevents aspiration of vomit or secretions, and promotes drainage from the mouth. When to use the Recovery Position Patient Status Recovery Position Used? Reason Conscious with pulse & breathing (Option A) No No need to alter position unless needed for comfort or other reasons. Unconscious with pulse & breathing (Option B) Yes Prevents airway obstruction and aspiration. Unconscious with pulse but no breathing (Option C) No Requires rescue breathing or CPR , not recovery position. Unconscious without pulse but breathing (Option D) No This is physiologically unlikely; no pulse = no circulation. Reference: .https://pmc.ncbi.nlm.nih.gov/articles/PMC9065878/ https://pmc.ncbi.nlm.nih.gov/articles/PMC11293584/",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 18,
    "question": "A patient presents with no pulse, and the ECG shows the following rhythm. What is the next appropriate step?",
    "options": {
      "A": "Defibrillate, check pulse and then perform CPR",
      "B": "Cardioversion",
      "C": "Defibrillate, perform CPR, and then check the pulse",
      "D": "Administer epinephrine"
    },
    "correct_answer": "C",
    "explanation": "Cardiovascular Life Support (ACLS) guidelines, for a shockable rhythm like ventricular tachycardia, the first step is to defibrillate the patient. After delivering the shock, you immediately start CPR (Cardiopulmonary Resuscitation) to maintain blood circulation. Checking the pulse is done after completing a cycle of CPR to assess the effectiveness of the resuscitation efforts. Incorrect Options: Options A, B, and D are incorrect, as explained above.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 19,
    "question": "Which of the following must be avoided in post cardiac arrest resuscitation care?",
    "options": {
      "A": "Maintain MAP over 65",
      "B": "Maintain SpO2 above 94%",
      "C": "Revascularisation procedure if patient develops ST elevation post resuscitation",
      "D": "Bring the body temperature down to below 32 degrees, therapeutic hypothermia if unresponsive"
    },
    "correct_answer": "D",
    "explanation": "if unresponsive Correct Answer: D) Bring the body temperature down to below 32 degrees, therapeutic hypothermia if unresponsive Explanation: Targeted Temperature Management (TTM) is recommended between 32–36°C , but below 32°C is not advised due to potential risks like arrhythmias and coagulopathies. Therapeutic hypothermia (TTM) should be maintained at 32–36°C for at least 24 hours in comatose patients after cardiac arrest to reduce neurological damage. Excessive cooling (<32°C) increases complications such as bradycardia, electrolyte imbalances, and impaired coagulation. Post-Cardiac Arrest Care Post-cardiac arrest care focuses on stabilizing the patient, preventing secondary organ damage, and optimizing neurological outcomes. It includes hemodynamic management, targeted temperature management (TTM), oxygenation, and coronary intervention when indicated. Aspect Key Considerations Hemodynamic Support Maintain MAP ≥ 65 mmHg with fluids and vasopressors if needed to ensure adequate cerebral and organ perfusion. Oxygenation & Ventilation Target SpO I between 94–98% to prevent hypoxia and hyperoxia-related injury. Avoid excessive ventilation (PaCO I should be maintained at 35–45 mmHg). Targeted Temperature Management (TTM) Maintain temperature at 32–36°C for at least 24 hours in comatose patients to reduce neurological injury. Cooling below 32°C is not recommended due to increased risks of arrhythmias and coagulopathies. Coronary Revascularization Patients with ST elevation post-resuscitation should undergo urgent PCI to improve outcomes. Coronary angiography may also be considered in select non-ST elevation cases. Neurological Monitoring Continuous EEG and serial neurological assessments are crucial to detect seizures and assess prognosis. Glucose Control Maintain blood glucose between 140–180 mg/dL to prevent hyperglycemia-induced neuronal damage. Maintain MAP over 65 (Option A): Correct because maintaining adequate perfusion pressure (MAP ≥ 65 mmHg) is essential to prevent organ hypoxia. Maintain SpO I above 94% (Option B): Correct because post-resuscitation oxygenation should be between 94–98% to avoid both hypoxia and hyperoxia toxicity . Revascularisation procedure if patient develops ST elevation post resuscitation (Option C): Correct because emergency PCI should be done in post-cardiac arrest patients with STEMI to improve survival. Reference: https://pmc.ncbi.nlm.nih.gov/articles/PMC4959439/ https://pmc.ncbi.nlm.nih.gov/articles/PMC4780335/ https://pmc.ncbi.nlm.nih.gov/articles/PMC5523091/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 20,
    "question": "What should be done after immediate defibrillation is performed on a young male patient who was brought to the emergency department unconscious after collapsing at a railway station, with no pulse felt and a monitor showing ventricular fibrillation?",
    "options": {
      "A": "Check for a pulse",
      "B": "Resume chest compressions",
      "C": "Epinephrine 1 mg IV",
      "D": "Amiodarone 300 mg IV bolus"
    },
    "correct_answer": "B",
    "explanation": "rhythm condition that can cause cardiac arrest. Hence, it is necessary to stop V-fib immediately to restore pulse and blood pressure. The second focus should be on reducing the development of V-fib in the future. The treatment for ventricular fibrillation(V-fib) includes cardiopulmonary resuscitation, i.e., (CPR). Recent consensus guidelines for CPR advocate that chest compression immediately resumes after the defibrillation process. Pulse checks and rhythm checks can be postponed until the completion of five compressions, minimally for two minutes. Incorrect Options: Option A - Check for a pulse: The pulse check can be postponed for 2 minutes until the five-chest compression is completed. Option C - Epinephrine 1 mg IV: Epinephrine, 1 mg, is recommended every 3-5 minutes once IV or IO access is established until the completion of five compressions. Option D - Amiodarone 300 mg IV bolus: Amiodarone can be provided for ventricular tachycardia or ventricular fibrillation (VT/VF) cardiac arrest via intraosseous (IO)/intravenous (IV) infusion as a 300mg rapid bolus. A 150 mg IO/IV additional bolus is provided if VT persists. Reference: Harrison's 20th edition",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 21,
    "question": "Identify the device shown in the image below",
    "options": {
      "A": "Automated External Desynchonizer",
      "B": "Automated external defibrillator",
      "C": "Automated electronic defibrillator",
      "D": "Automated external decompressor"
    },
    "correct_answer": "B",
    "explanation": "portable electronic device used to diagnose and treat life-threatening cardiac arrhythmias, specifically ventricular fibrillation and ventricular tachycardia, through the application of an electric shock to the heart. It is designed to be user-friendly and can be used by individuals with minimal medical training. Incorrect Options: Option A - Automated External Desynchronizer: This is not a recognized device in the context of medical emergency management. It appears to be an incorrect or fictional term. Option C - Automated Electronic Defibrillator: This is not a recognized term for a specific medical device. It may be a combination of terms, but it does not accurately represent the device shown in the image. Option D - Automated External Decompressor: This is not a recognized term for a medical device. It does not relate to the purpose or function of the device shown in the image. Reference: Harrison's 20th edition",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q21_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 22,
    "question": "Which of the following is not a risk factor for postoperative pulmonary complications ?",
    "options": {
      "A": "BMI >30",
      "B": "Well controlled asthma",
      "C": "Upper abdominal surgery",
      "D": "Ag>70 years"
    },
    "correct_answer": "B",
    "explanation": "risk factor for postoperative pulmonary complications. When asthma is well controlled, the risk of complications is generally lower compared to uncontrolled or severe asthma. Incorrect Options: Option A - BMI >30: Obesity, indicated by a BMI greater than 30, is a known risk factor for postoperative pulmonary complications. It can impair lung function and increase the risk of respiratory complications after surgery. Option C - Upper abdominal surgery: Upper abdominal surgeries, such as surgeries involving the chest, abdomen, or diaphragm, can impact respiratory function due to the proximity to the respiratory muscles and potential effects on lung expansion. This increases the risk of postoperative pulmonary complications. Option D - Age >70 years: Advanced age is associated with decreased respiratory reserve and decreased lung function, making older individuals more susceptible to postoperative pulmonary complications. Reference: Morgan and Mikhail's clinical anaesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 23,
    "question": "You are working as an intern in ICU. Which of the following statements is incorrect about ABG report?",
    "options": {
      "A": "Normal pH cannot rule out acid base disorder",
      "B": "Flush syringe with 0.5 ml heparin before taking the sample",
      "C": "If the modified Allen test is positive use an alternative site for sampling",
      "D": "Radial artery is preferred site for taking sample"
    },
    "correct_answer": "C",
    "explanation": "Allen test means that the patient has an adequate dual blood supply to the hand. A negative Allen test shows the patient may not have adequate dual blood supply, which would be a contraindication for catheterization, radial forearm flap harvest, or any procedure that may result in the occlusion of the vessel. Therefore this statement is incorrect. Incorrect options: Option A. Normal pH can't rule out an acid-base disorder: This statement is correct. Normal pH values in an ABG analysis do not rule out the presence of an acid-base disorder. Acid-base disorders involve disturbances in the pH, partial pressure of carbon dioxide (PaCO2), and bicarbonate (HCO3-) levels. As the patients having a combination of metabolic acidosis and metabolic alkalosis will have normal pH. Option B. Add 0.5 ml Heparin to the syringe before taking blood: This statement is correct. Heparin is typically added to the syringe before obtaining the arterial blood sample to prevent clotting of the blood in the syringe. Flushing the syringe will prevent clotting but leaving heparin behind will cause falsely low pH and bicarbonate. Option D. Radial artery is the preferred site: This statement is correct. The radial artery is preferred as it usually has good collateral circulation with the ulnar artery. Reference: Morgan and Mikhail's clinical anaesthisiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 24,
    "question": "How many chest compressions per minute are performed during CPR in adults?",
    "options": {
      "A": "30-50 per minute",
      "B": "50-72 per minute",
      "C": "100-120 per minute",
      "D": "120-200 per minute"
    },
    "correct_answer": "C",
    "explanation": "the heart and brain during CPR (cardiopulmonary resuscitation). The recommended rate for chest compressions in adult CPR is 100-120 compressions per minute, which ensures adequate blood flow to vital organs. Incorrect Options: Option A - 30-50 per minute: This range is incorrect as it is too low for effective CPR. Option B - 50-72 per minute: This range is also incorrect as it is below the recommended rate for effective chest compressions. Option D - 120-200 per minute: This range is too high and not recommended for effective CPR. An excessive compression rate may compromise the quality of compressions. Reference: Harrison's 20th edition",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Year_Questions_Q24_exp.jpg",
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 25,
    "question": "If epinephrine fails to be effective, what other medication would you consider using for cardiac arrest?",
    "options": {
      "A": "Vasopressin",
      "B": "Atropine",
      "C": "Amiodarone",
      "D": "Adenosine"
    },
    "correct_answer": "C",
    "explanation": "in the management of cardiac arrest. It is used when initial treatments, such as epinephrine, fail to restore a stable heart rhythm. Amiodarone works by stabilizing the electrical activity of the heart and is effective in treating various types of life-threatening arrhythmias. Incorrect Options: Option A - Vasopressin: It has been used in the past as an alternative to epinephrine, current guidelines recommend epinephrine as the primary vasopressor in cardiac arrest. Amiodarone is the preferred alternative to epinephrine if it proves ineffective. Option B - Atropine: Atropine is a medication used to increase heart rate and treat certain types of bradycardia (slow heart rate). It is not typically effective in treating cardiac arrest, particularly in cases of ventricular fibrillation or pulseless ventricular tachycardia. Therefore, it is not the preferred alternative to epinephrine. Option D - Adenosine: Adenosine is primarily used in the treatment of supraventricular tachycardia (SVT), which is a different type of arrhythmia compared to ventricular fibrillation or pulseless ventricular tachycardia seen in cardiac arrest. Adenosine works by briefly slowing down the heart rate and interrupting the re-entry pathway responsible for SVT. It is not indicated for use during cardiac arrest and is not an alternative to epinephrine in that context. Reference: .",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  },
  {
    "q_no": 26,
    "question": "Which of the following statements accurately describes the distinction between adult and pediatric resuscitation?",
    "options": {
      "A": "Ventricular dysrhythmias are uncommon in children",
      "B": "Infant myocardium more refractory to hypoxia because of congenital heart disease",
      "C": "More ventilation to be given compared to chest compression",
      "D": "Dissolved aortic oxygen concentration is more in pre attach state"
    },
    "correct_answer": "A",
    "explanation": "resuscitation, there are some differences between adults and children. Ventricular dysrhythmias, such as ventricular fibrillation and ventricular tachycardia, are more common in adults than in children. Therefore, the correct statement is that ventricular dysrhythmias are uncommon in children. Incorrect Options: Option B - Infant myocardium more refractory to hypoxia because of congenital heart disease: Infant myocardium more refractory to hypoxia because of congenital heart disease: This statement is incorrect. While certain congenital heart diseases may affect the myocardium's ability to handle hypoxia, it is not accurate to generalize that the infant myocardium is more refractory to hypoxia due to congenital heart disease. Option C - More ventilation to be given compared to chest compression: More ventilation to be given compared to chest compression: This statement is incorrect. In both adult and child resuscitation, the ratio of chest compressions to ventilation is different. For adults, it is typically 30:2 (30 compressions followed by 2 ventilations), while for children, it is often 15:2 or 30:2, depending on the circumstances. However, it is not accurate to say that more ventilation should be given compared to chest compressions in either case. Option D - Dissolved aortic oxygen concentration is more in pre attach state: Dissolved aortic oxygen concentration is more in pre-attach state: This statement is incorrect. The term \"pre-attach state\" is not clear in the context of resuscitation. Additionally, dissolved aortic oxygen concentration is not typically discussed in the comparison of adult and child resuscitation. Reference: Harrison's 20th edition",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Year Questions"
  }
]