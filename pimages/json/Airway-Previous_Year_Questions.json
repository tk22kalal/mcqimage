[
  {
    "q_no": 1,
    "question": "A 42-year-old man who was under home isolation after testing positive for COVID-19 develops breathing difficulty and is brought to the ER. The patient is alert and responsive but is breathing rapidly. SpO 2 is measured to be 86%. He is administered oxygen via a face mask with a reservoir bag with a flow rate of 10 L/min. After a trial of one hour, his SpO 2 is 88%. What is the next step in management?",
    "options": {
      "A": "Increase flow rate to 15 L/min",
      "B": "High-flow nasal cannula oxygen therapy",
      "C": "Endotracheal intubation",
      "D": "No specific intervention is necessary"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) High-flow nasal cannula oxygen therapy Explanation: In this scenario, the patient is experiencing hypoxemia with a SpO I of 86% despite receiving oxygen via a non-rebreather mask at 10 L/min for one hour, resulting in only a slight improvement to 88%. This indicates inadequate oxygenation and suggests the need for more effective respiratory support. The most appropriate next step is to initiate high-flow nasal cannula oxygen therapy to improve oxygenation and reduce the work of breathing. High-Flow Nasal Cannula (HFNC) / High-Flow Humidified Nasal Cannula (HFHNC): It works by delivering warmed & humidified gas , preventing nasal mucosa drying, and overcoming the limitations of traditional cannulas. Provide flows up to 60 L/min , allowing for accurate delivery of high FiO 2 levels Generates positive airway pressures of over 5 cm H 2 O, making it a potential substitute for low-level CPAP (Conitinous Positive Airway Pressure). Can deliver 100% FiO 2 Advantages: Better tolerance compared to traditional face masks, allowing for greater comfort during oxygen therapy. Accurate delivery of high FiO 2 in various clinical situations. Improved mortality rates in patients experiencing acute hypoxemic respiratory failure due to Sepsis and SARS-CoV-2 infection. Disadvantages: Higher cost compared to standard oxygen delivery devices. Limited availability outside of critical care settings Incorrect Options: Increase flow rate to 15 L/min (Option A): May provide a small improvement in oxygenation. However, given that the patient's SpO 2 only improved from 86% to 88% after one hour of oxygen therapy at 10 L/min, a further increase in flow rate alone is unlikely to be sufficient. Endotracheal intubation (Option C) is a more invasive procedure typically reserved for patients with severe respiratory distress who cannot maintain adequate oxygenation or ventilation despite non-invasive interventions. No specific intervention is necessary (Option D): After an hour of oxygen therapy, the patient's SpO 2 is still below the target range, indicating that a specific intervention is required to improve oxygenation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 2,
    "question": "Where can the devices in Murphy's eye be observed?",
    "options": {
      "A": "Nasopharyngeal airway",
      "B": "Laryngoscope",
      "C": "Bronchoscope",
      "D": "Endotracheal tube"
    },
    "correct_answer": "D",
    "explanation": "devices, particularly in endotracheal tubes (ETT) and tracheostomy tubes. It consists of an additional opening or eyelet located on the side of the tube near the distal end, opposite to the main opening through which the tube is inserted into the airway. The purpose of the Murphy's eye is to provide an alternative pathway for airflow in case the main opening becomes obstructed. This can happen due to factors such as mucosal swelling, secretions, or misplacement of the tube against the tracheal wall. When the tube is correctly positioned in the airway, the Murphy's eye remains outside the tracheal wall. However, if the tube tip is pressed against the tracheal wall, the Murphy's eye allows air to flow into the lungs, preventing complete obstruction. Incorrect Options: Option A - Nasopharyngeal airway: The nasopharyngeal airway is used in conscious patients with a compromised airway. It is made of soft silicon and has a single opening. Option B - Laryngoscope: The laryngoscope is an instrument used to view the larynx or voice box. Option C - Bronchoscope: The bronchoscope is a tube-like instrument with a lens to check for abnormalities in the lungs and bronchioles. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q2_exp.jpg",
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 3,
    "question": "The color of the nitrous oxide cylinder is",
    "options": {
      "A": "Completely Blue",
      "B": "Blue body with shoulder",
      "C": "Black body & white shoulder",
      "D": "Grey body & black white shoulder"
    },
    "correct_answer": "A",
    "explanation": "blue (french blue). Anesthetic gasses are supplied in cylinders. The cylinders are made up of molybdenum steel which is an alloy. Nitrous oxide is stored under high pressure in cylinders. It cannot be directly given to patients as it can lead to the danger of barotrauma, and the flow rates at high pressure are difficult to control. Cylinder Colour Oxygen (gas) Black body and white shoulder. Nitrous Oxide (gas) Blue Nitrogen (gas) Black Air (gas) Gray/black body with black/white shoulder Entonox (gas) Blue body and white/blue shoulder Incorrect Options: Option B - Blue body with shoulder: Blue body with the blue shoulder is the color code for Entonox. Option C - Black body & white shoulder: Black body with a white shoulder is the color code for oxygen (gas). Option D - Grey body & black white sholuder: Grey body and black-white shoulder is the color code for nitrogen. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q3_exp.jpg",
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 4,
    "question": "Identify the given instrument?",
    "options": {
      "A": "Guedel airway",
      "B": "Laryngeal mask airway",
      "C": "Endotracheal tube",
      "D": "Nasogastric tube"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Laryngeal mask airway Explanation: A laryngeal mask airway (LMA) is a supraglottic airway device used to secure the airway in situations requiring anaesthesia or emergency management. It consists of: A tube connected to an inflatable mask that is placed over the laryngeal inlet. A cuff that is inflated to create a seal around the larynx. It is commonly used in: Daycare surgeries. Scenarios requiring less invasive airway management than an endotracheal tube. Patients where bag-mask ventilation is challenging. Guedel airway (option A): This is an oropharyngeal airway device used to keep the tongue from obstructing the airway. It looks like a rigid, curved plastic or rubber tube. Endotracheal tube (option C): This is a flexible tube inserted into the trachea through the mouth or nose to provide ventilation. It does not have an inflatable cuff like the LMA shown in the image. Nasogastric tube (option D): This is a thin, flexible tube used for feeding or suctioning gastric contents, inserted through the nose and extending into the stomach.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 5,
    "question": "What is this device called?",
    "options": {
      "A": "Armored endotracheal tube",
      "B": "Double-lumen endotracheal tube",
      "C": "Ring-adair-elwin type",
      "D": "Endotracheal tubes equipped with bronchial blockers"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Double-lumen endotracheal tube Explanation: A double-lumen endotracheal tube is designed with two separate lumens or channels. It allows independent ventilation of each lung during thoracic surgeries or procedures requiring lung isolation. The tube has one lumen that enters the trachea and provides ventilation to one lung, while the other lumen enters the bronchus of the opposite lung, allowing selective lung collapse and ventilation control. Armored endotracheal tube (Option A): An armored endotracheal tube is a specialized type of endotracheal tube that has an internal wire coil or reinforcement. This provides rigidity and prevents kinking or collapse of the tube, ensuring a patent airway. Armored tubes are typically used in situations where there is a risk of tube compression or obstruction, such as during head and neck surgery. Ring-Adair-Elwin (RAE) tube (Option C): The Ring-Adair-Elwin tube is a type of cuffed endotracheal tube that has a preformed curvature near the distal end. This curved design helps to facilitate placement and positioning of the tube within the trachea. RAE tubes are commonly used in anesthesia and critical care settings. Endotracheal tubes equipped with bronchial blockers (Option D): These are endotracheal tubes that have an additional component called a bronchial blocker. A bronchial blocker is a small balloon-tipped catheter that can be inserted through the endotracheal tube and into one of the main bronchi. It is used to selectively block the airflow to one lung while allowing ventilation of the other lung. This technique is employed for lung isolation during thoracic surgeries or procedures.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q5_q.png",
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 6,
    "question": "Which of the following is not a clear benefit of using high-pressure oxygen via nasal cannula",
    "options": {
      "A": "Decreases the need for intubation",
      "B": "Reduces nasopharyngeal dead space",
      "C": "Heating and humidification",
      "D": "PEEP"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Decreases the need for intubation Explanation: High-flow oxygen therapy delivered via nasal cannula, also known as high-flow nasal cannula (HFNC) therapy, has several benefits, but it does not necessarily decrease the need for intubation in all cases. Compared to the other options, Option A is the least clear benefit of using HFNC. High-Flow Nasal Cannula (HFNC) / High-Flow Humidified Nasal Cannula (HFHNC): It works by delivering warmed & humidified gas , preventing nasal mucosa drying and overcoming the limitations of traditional cannulas. (Option C) HFNC therapy delivers a high flow of oxygen that washes out the nasopharyngeal dead space, allowing for more efficient ventilation and oxygenation. (Option A) Provide flows up to 60 L/min , allowing for accurate delivery of high FiO2 levels Generates positive airway pressures of over 5 cm H2O, making it a potential substitute for low-level CPAP (Conitinous Positive Airway Pressure). Can provide a degree of positive end-expiratory pressure. (Option D) Can deliver 100% Fio2. Advantages: Better tolerance compared to traditional face masks, allowing for greater comfort during oxygen therapy. Accurate delivery of high FiO2 in various clinical situations. Improved mortality rates in patients experiencing acute hypoxemic respiratory failure due to Sepsis and SARS-CoV-2 infection. Disadvantages: Higher cost compared to standard oxygen delivery devices. Limited availability outside of critical care settings Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 7,
    "question": "Regarding the initial setting for a patient with blunt chest trauma who has been initiated on mechanical ventilation, which of the following statements is incorrect? I O",
    "options": {
      "A": "Respiratory rate 12 breaths/min",
      "B": "PEEP - 5 cm H",
      "C": "FIO-100%",
      "D": "Tidal volume-12ml/kg of actual BW"
    },
    "correct_answer": "D",
    "explanation": "chest trauma, lung-protective ventilation strategies are crucial to minimize ventilator-induced lung injury (VILI). One of the key components of lung-protective ventilation is limiting tidal volume. The generally recommended tidal volume for patients with acute respiratory distress syndrome (ARDS), which includes many cases of severe blunt chest trauma, is 6 ml/kg of predicted body weight (not actual body weight) to reduce the risk of barotrauma. Lung Protective Ventilation is the current standard in mechanical ventilation which includes the following: Low TV to prevent barotrauma Increase RR-RR can be increased up to 30-35/min to maintain minute ventilation Increase PEEP-Can increase PEEP from 4-12 even up to 16 cm H 2 O if needed to prevent collapse of alveoli especially in ARDS FiO 2 < 0.6 or 60% - If FiO 2 > 60%, oxygen radical formation can occur causing worsening of symptoms Respiratory rate - 12 breaths/min (Option A): It is within the normal range for an adult and can be an appropriate initial setting, although the specific rate may need adjustment based on the patient's condition and blood gas values. PEEP-5 cm H 2 O (Option B): Positive end-expiratory pressure (PEEP) is used to prevent alveolar collapse and improve oxygenation. A setting of 5 cm H 2 O is a common starting point and can be adjusted based on the patient's oxygenation status. FiO 2 -100% (Option C): In the initial stages, a high fraction of inspired oxygen (FiO 2 ) might be necessary to ensure adequate oxygenation, but it should be titrated down as soon as possible to the lowest level necessary to maintain adequate oxygen saturation, in order to minimize the risk of oxygen toxicity. Reference: Barash Clinical Anesthesiology. 9th edition. Pdf Page 4841-4846",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 8,
    "question": "What is the most effective way to verify the placement of the endotracheal tube in a 30-year-old male patient who has been intubated for surgery by a final-year resident? I concentration",
    "options": {
      "A": "X-ray chest",
      "B": "Auscultation",
      "C": "End-tidal CO",
      "D": "Chest rise"
    },
    "correct_answer": "C",
    "explanation": "I concentration Correct Answer: C) End-tidal CO I concentration Explanation: End-tidal CO I concentration (capnography) : This is the most reliable and effective method to confirm endotracheal tube placement. A sustained detection of CO I in exhaled air indicates proper placement in the trachea and confirms ventilation. It provides immediate, continuous, and quantitative confirmation. Capnography is the gold standard for confirming endotracheal tube placement during intubation due to its accuracy and real-time feedback. Incorrect Options: X-ray chest (Option A) : Useful for confirming tube depth or ruling out complications like pneumothorax, but it is not practical for immediate verification of tube placement. Auscultation (Option B) : Helps assess ventilation by listening for bilateral breath sounds, but it is less reliable as it can miss esophageal intubation or identify asymmetrical placement. Chest rise (Option D) : A visible chest rise may indicate ventilation but does not confirm tracheal placement, as it can occur with esophageal intubation or bag-mask ventilation. Reference: Morgan and Mikhail’s Clinical Anesthesiology, Edition 5, Pg 127, 328, 1187",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 9,
    "question": "In conventional oxygen therapy, which device will deliver the highest FiO 2 ?",
    "options": {
      "A": "Venturi mask",
      "B": "Hudson mask",
      "C": "Non-rebreathing mask",
      "D": "High Flow Nasal Cannula"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) High Flow Nasal Cannula Explanation: High-Flow Nasal Cannula (HFNC) therapy is a mode of respiratory support that delivers a high flow of heated and humidified oxygen-enriched air through nasal prongs to patients with respiratory distress. Can deliver 100% FiO 2 1. High-Flow Devices: High-Flow Nasal Cannula (HFNC), Venturi mask 2. Low-Flow Devices: Nasal Prongs, Simple Face Mask, Non-Rebreather Mask (NRBM) Low-Flow Devices: Type of mask Nasal Prong Face Mask ( Hudson mask ) (Option B) NRBM (Option C) Flow rate 1 to 6 L 6 to 10 L 10 to 15 L FiO 2 25 to 45% 35 to 60% 65 to 95 % High-Flow Devices: High-Flow Nasal Cannula (HFNC), Venturi mask High-Flow Nasal Cannula (HFNC) / High-Flow Humidified Nasal Cannula (HFHNC): It works by delivering warmed & humidified gas , preventing nasal mucosa drying and overcoming the limitations of traditional cannulas. Provide flows up to 60 L/min , allowing for accurate delivery of high FiO 2 levels Generates positive airway pressures of over 5 cm H 2 O, making it a potential substitute for low-level CPAP (Conitinous Positive Airway Pressure). Can deliver 100% Fio 2 . Venturi Mask: (Option A) is also a high-flow device with fixed performance that delivers a precise concentration of oxygen (FiO I ) by mixing oxygen with ambient air at specific flow rates, typically ranging from 2 to 15 L/min. It is often used in patients requiring controlled oxygen therapy, such as those with COPD.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 10,
    "question": "What is the maximum rate of oxygen flow that can be maintained using a traditional oxygen mask?",
    "options": {
      "A": "5 L/min",
      "B": "15 L/min",
      "C": "10 L/min",
      "D": "20 L/min"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) 10 L/min Explanation: A conventional oxygen mask , also known as a simple face mask, is a device used for oxygen delivery to patients who require supplemental oxygen. The mask covers the nose and mouth, allowing the patient to breathe in a mixture of oxygen and room air. The maximum oxygen flow rate that can be delivered with a conventional oxygen mask is typically around 10 L/min . This flow rate ensures that a sufficient amount of oxygen is delivered to the patient, maintaining an adequate oxygen concentration or fraction of inspired oxygen (FiO 2 ). Higher flow rates may not significantly increase the delivered oxygen concentration and may lead to discomfort for the patient. Type of mask Nasal Prong Face Mask (Simple face mask) NRBM Flow rate 1 to 6 L 6 to 10 L 10 to 15 L FiO 2 25 to 45% 35 to 60% 65 to 95 %",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q10_exp.jpg",
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 11,
    "question": "In the given capnograph, what does the marked area denote?",
    "options": {
      "A": "Expiratory upstroke",
      "B": "Alveolar Plateau",
      "C": "Inspiratory downstroke",
      "D": "Inspiratory baseline"
    },
    "correct_answer": "B",
    "explanation": "alveolar plateau phase. This is the flat part of the capnograph, indicating constant exhalation of CO2. Incorrect Options: Options A, C, and D are not marked in the given capnograph.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 12,
    "question": "Which of the following post-bronchodilator pulmonary function test (PFT) results would necessitate a further assessment of lung function in a 50-year-old male patient with grade 3 American Society of Anesthesiology (ASA) status?",
    "options": {
      "A": "FEV1<0.85 and FEV1/FVC<0.8",
      "B": "FEV1<0.85 and FEV1/FVC<0.75",
      "C": "FEV1<0.85 and FEV1/FVC<0.7",
      "D": "FEV1<0.8 and FEV1/FVC<0.75"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) FEV1<0.85 and FEV1/FVC<0.7 Explanation: FEV1 below 0.85 liters and FEV1/FVC ratio less than 0.7 indicate significant airflow limitation, suggesting conditions like COPD. In patients with grade 3 ASA, further evaluation, including lung volume measurements or gas diffusion capacity assessment, is needed to determine the severity and type of lung disease. FEV1 < 0.85 and FEV1/FVC < 0.8(Option A): An FEV1/FVC ratio of 0.8 is normal, usually not needing more assessment. However, an FEV1 under 0.85 liters suggests airflow limitation, possibly requiring further evaluation. FEV1 < 0.85 and FEV1/FVC < 0.75 (Option B): An FEV1/FVC ratio of 0.75 suggests airflow limitation, while an FEV1 below 0.85 liters indicates reduced air volume expelled in the first second. Despite the exact FEV1/FVC ratio, a low FEV1 necessitates further evaluation. FEV1 < 0.8 and FEV1/FVC < 0.75 (Option D): An FEV1 below 0.8 liters suggests significant airflow limitation, warranting further evaluation. However, with an FEV1/FVC ratio of 0.75 within the normal range, immediate additional assessment may not be necessary Reference: https://pmc.ncbi.nlm.nih.gov/articles/PMC7898324/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 13,
    "question": "A COVID patient required oxygen therapy. Which of the following cylinders should be used to provide oxygen for this patient? [",
    "options": {
      "A": "1",
      "B": "2",
      "C": "3",
      "D": "4"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 1 Explanation: The first cylinder (black body with a white shoulder) is the one to be used for oxygen therapy for the COVID-19 patient, as it contains medical oxygen. Gasses and their PIN Indices: Gas Cylinder color Image PIN Index system Air Black body with black & white shoulder 1,5 Oxygen Black body with white shoulder 2,5 N2O Blue 3,5 Carbon dioxide Grey 1,6 (> 7.5%) ; 2,6 (< 7.5%) Entonox Blue body with white shoulders 7 Cyclopropane Orange 3,6",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q13_q.png",
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 14,
    "question": "The mask given below works on which of the following principles?",
    "options": {
      "A": "Bohr effect",
      "B": "Boyle's principle",
      "C": "Bernoulli principle",
      "D": "Mapleson's circuit"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Bernoulli principle Explanation: The picture depicts a High Flow Venturi mask that uses Bernoulli’s principle to deliver a predetermined and fixed oxygen concentration to the patient. This principle states that as the velocity of a fluid (in this case, oxygen) increases, the pressure within the fluid decreases. The mask uses this principle to entrain room air when pure oxygen is delivered through a small orifice, resulting in a high-velocity jet. This creates a predictable and controlled oxygen concentration that is delivered to the patient I Venturi Mask: Is a high-flow device with fixed performance that delivers a precise concentration of oxygen (FiO I ) by mixing oxygen with ambient air at specific flow rates, typically ranging from 2 to 15 L/min. It is often used in patients requiring controlled oxygen therapy, such as those with COPD. Color coding of Venturi mask Color FiO2 Require Flow rate (L/min) Blue 24% 4 White 28% 4 Orange 31% 6 Yellow 35% 8 Red 40% 8 Green 60% 12 Bohr effect (Option A): describes how hemoglobin's oxygen-binding affinity decreases in response to increased levels of carbon dioxide and decreased pH, facilitating oxygen release to tissues. This physiological phenomenon pertains to blood gas exchange Boyle's principle (Option B): states that the pressure of a gas is inversely proportional to its volume at a constant temperature. Mapleson’s circuits (Option D): are Semi-closed types of Breathing circuits used during anesthesia to deliver oxygen and anesthetic agents and effectively washout CO2.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 15,
    "question": "A patient in the ICU with an endotracheal tube now needs a tracheostomy tube. Which type of tube will you use?",
    "options": {
      "A": "Uncuffed tracheostomy tube",
      "B": "Cuffed tracheostomy tube",
      "C": "Metallic tracheostomy tube",
      "D": "Endotracheal tube"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Cuffed tracheostomy tube Explanation: Cuffed tracheostomy tubes are commonly used for patients who require mechanical ventilation or have an increased risk of aspiration. The cuff creates a seal around the trachea, preventing air leaks and minimizing the risk of aspiration of secretions, food, or other materials into the lungs. Uncuffed tracheostomy tube (Option A): An uncuffed tracheostomy tube has no inflatable cup. These are most commonly used in the neonatal population or for patients who can manage their own secretions. These allow airway clearance but don't protect from aspiration. Metallic tracheostomy tube (Option C): A 2-3 inch long curved metal or plastic tube placed in a surgically created opening in the trachea to keep it open. It is indicated in case of obstruction in the upper airway Establishes and maintains a secure airway when it is unsafe to do so via the mouth or nose, in cases of severe facial, head, or neck injuries, for bronchial hygiene and secretion removal, and to provide airway protection in patients with neuromuscular disorders. Endotracheal tube (Option D): It is made of polyvinyl chloride. The main indication is to secure a definitive airway when there is the inability to maintain airway patency, inability to protect the air against aspiration, failure to ventilate, failure to oxygenate, and anticipation of a deteriorating course leading to respiratory failure. Reference: https://journals.sagepub.com/doi/pdf/10.1177/0310057X0002800609?utm",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 16,
    "question": "What should be the next course of action in managing a patient with pneumonia who is on a ventilator, weighs 50 kg, has a respiratory rate of 14 breaths per minute, a bicarbonate level of 18, a pH of 7.33, a paCO2 level of 48 mmHg, a Pao2 level of 110 mmHg, a PEEP of 12 cm H I O, a tidal volume of 420 mL, and a SpO2 level of 100% with an FiO2 of 90%? I",
    "options": {
      "A": "Increase PEEP",
      "B": "Decrease FiO",
      "C": "Decrease RR",
      "D": "Increase tidal volume"
    },
    "correct_answer": "B",
    "explanation": "I I standard in mechanical ventilation. If Fio2 > 60%, oxygen radical formation can occur causing worsening of symptoms. FIO2 has to be decreased in this patient to prevent free radical formation and since PaO2 is higher than normal. Clinical Modes of Management in ARDS Lung Protective Ventilation (LPV): Tidal volumes : ≤ 6 mL/kg of ideal body weight to prevent alveolar overdistension. (Option D ruled out) PEEP : Use moderate levels to avoid alveolar collapse. (Option A ruled out) Plateau pressure : Limit to ≤ 30 cm H I O to minimize barotrauma and pneumothorax. Permissive hypercapnia : Allow mild-to-moderate respiratory acidosis to avoid lung injury. (Option C ruled out) FiO I : Minimize while targeting PaO I >55 mmHg or SpO I >88%. (Option B) Recruitment Strategies: Use of PEEP to recruit collapsed alveoli and improve oxygenation. Prone positioning : Shown to improve survival in severe ARDS (P/F ratio ≤ 150). Advanced Techniques: Neuromuscular blockade : Early use may benefit patients with severe ARDS (P/F ratio <150). ECMO : Considered for severe, refractory ARDS in specialized centers. Rescue Therapies (Limited evidence for survival benefit): High-frequency oscillatory ventilation : No significant outcome improvements. Inhaled vasodilators (iNO, prostaglandins): Transient oxygenation improvement but no long-term benefit. Fluid Management: Conservative fluid management : Improves oxygenation and ventilator-free days. Corticosteroids : Mixed results; may benefit ARDS from bacterial sepsis but not viral pneumonia (except SARS-CoV2). Reference: Barash Clinical Anesthesiology. 9th edition. Pdf Page 4841-4846",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 17,
    "question": "A neonate is brought to the pediatric ER in acute respiratory distress. On examination, the abdomen is scaphoid. Which of the following should not be performed in this patient?",
    "options": {
      "A": "PPV",
      "B": "Bag and mask ventilation",
      "C": "Oxygen therapy",
      "D": "Intubation"
    },
    "correct_answer": "B",
    "explanation": "distress with a scaphoid could potentially be experiencing complications of a diaphragmatic hernia. Bag and Mask Ventilation is contraindicated in congenital diaphragmatic hernia (CDH) patients due to the risk of worsening respiratory distress and increasing intrathoracic pressure, which can further impede lung expansion and exacerbate the hernia. Management of Congenital Diaphragmatic Hernia: Initial Stabilization: Airway Management: Immediate endotracheal intubation (ET) is critical. (Option D ruled out) ECMO: If there is no response to ET Avoid excessive, mean airway pressure to prevent barotrauma Gastric Decompression: An orogastric tube is inserted to prevent gastric distention that worsens lung compression. Bag and Mask Ventilation is Contraindicated in CDH Surgical Repair is done only after pulmonary stabilisation in CDH (Immediate surgery done in case of Traumatic Hernia) PPV (Positive Pressure Ventilation) (Option A): This can be performed but should be done carefully to avoid overinflating the stomach, which can worsen respiratory distress. Intubation with PPV is preferred. Oxygen therapy (Option C): This is safe and can help improve oxygenation but is usually insufficient alone for severe respiratory distress in CDH. Reference: Nelson Textbook of Paediatrics 21st Edition, Pg - 945 Bailey & Love’s Short Practice of Surgery, 28th edition, Pg - 271",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q17_exp.jpg",
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 18,
    "question": "A child was being delivered oxygen by nasal cannula at 3L/min. What is the FiO2 being delivered?",
    "options": {
      "A": "24%",
      "B": "30%",
      "C": "44%",
      "D": "40%"
    },
    "correct_answer": "B",
    "explanation": "can estimate an increase in FiO2 of about 4%. 1L/min of O2 corresponds to an FIO2 of 24% In this case, with an oxygen flow rate of 3 L/min, the FiO2 delivered is approximately 32% Nasal cannula: Used in low to medium concentrations of O2 (22-44%) When these are attached to the flow meter which is connected to the central pipeline supply of an ICU or cylinders and is turned on at 1L per minute, these deliver oxygen of about 24%. Atmospheric oxygen is from 20 to 21% When the concentration of oxygen is increased, it leads to an increase in the concentration of FIO2 This device can only deliver up to 6L per minute Every liter corresponds to its subsequent FiO2: 1 L/min-24% 2 L/min-28% 3 L/min-32% 4 L/min-36% 5 L/min-40% 6 L/min-44% This device is not beneficial for a capacity of > 6 liters Advantages: Patients can talk and eat with 02 support when using a nasal cannula and a nasal cannula can be used in home settings. Disadvantages: It may irritate nasal and pharyngeal mucosa. If the flow is given for more than 6L, the FiO2 may vary. 24% (Option A): An FiO2 of 24% corresponds to 1L/min of oxygen. 44% (Option C): An FiO2 of 44% corresponds to 6L/min of oxygen. 40% (Option D): An FiO2 of 40% corresponds to 5L/min of oxygen. Reference: Oxygen devices and delivery systems - PMC",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 19,
    "question": "Which of these is a second-generation Laryngeal Mask Airway (LMA)?",
    "options": {
      "A": "LMA Proseal",
      "B": "Ambu",
      "C": "Intubating LMA",
      "D": "Classic LMA"
    },
    "correct_answer": "A",
    "explanation": "ports: Tracheal port Esophageal port Incorrect Options: Options B, C, and D are not considered second-generation LMAs as they have only one port. Reference: .",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q19_exp.jpg",
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 20,
    "question": "Which of the following conditions is a contraindication for the use of bi-level positive airway pressure?",
    "options": {
      "A": "Obstructive sleep apnea",
      "B": "Unconscious/ sedation",
      "C": "High oxygen levels",
      "D": "Low partial pressure of oxygen"
    },
    "correct_answer": "B",
    "explanation": "therapy is best for short-term use and in patients who can cough and protect their airway. Indications for using BiPAP machine COPD Obstructive sleep apnea (Option A) Patients with conditions causing low partial pressure of oxygen (Option D) Contraindications: Absolute contraindication Relative contraindication Facial trauma/ burn Altered mental staus/ unconscious (Option B) Fixed upper airway obstruction Inability to protect the airway Active vomiting Life threatening hypoxemia Respiratory or cardiac arrest Reference: https://www.ncbi.nlm.nih.gov/books/NBK578188/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 21,
    "question": "In which of the following is the given position used?",
    "options": {
      "A": "Neurosurgery",
      "B": "Intubation",
      "C": "NG tube insertion",
      "D": "Bougie insertion"
    },
    "correct_answer": "B",
    "explanation": "intubation to align the oral, pharyngeal, and laryngeal axes, making it easier to visualize the vocal cords and insert the endotracheal tube. Incorrect Options: Options A, C, and D: The sniffing position is not typically used for these.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Airway-Previous_Year_Questions_Q21_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 22,
    "question": "A known case of asthmatic bronchitis was reported to the hospital with breathlessness, palpitations, and oxygen saturation of 88%. The hospital does not have a ventilator. All the following can be given to the patient, except?",
    "options": {
      "A": "Hydrocortisone",
      "B": "Theophylline",
      "C": "Oxygen with oxygen mask, and reservoir",
      "D": "Leukotriene antagonist"
    },
    "correct_answer": "C",
    "explanation": "chronic disease condition of airways that is characterized by paroxysmal wheezing, cough, and chest tightness. Asthma causes tightening of muscles around the airways and causes airways to narrow. Hence, when both acute bronchitis and asthma occur together, this situation is called asthmatic bronchitis. Currently, nasal cannula, non-breathing bag face mask reservoir, venturi masks, are used in the clinical settings as conventional oxygen therapies. However, non-invasive ventilation (NIV) in airways causes trauma, need for sedation, infections. Conventional oxygen therapy (COT) involves a simple face mask that delivers oxygen. COT is not able to provide sufficient respiratory support to the patients that are suffering from bronchial asthma. As it needs an extra attempt to breath and work for the breathing process to maintain oxygenation. Incorrect Options: Option A - Hydrocortisone: In case of bronchial asthma and hay fever, oral hydrocortisone is an effective therapy for symptomatic relief. Option B - Theophylline: Theophylline is applied for the treatment of shortness of breath, wheezing, chest tightness caused by asthma, emphysema, chronic bronchitis and other lung diseases. Lungs passages are opened and relaxed to make breathing easier. Option D - Leukotriene antagonist: Chronic asthma/bronchial asthma is treated with Leukotriene-receptor antagonists such as Montelukast and Zafirlukast. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 23,
    "question": "Which of the following is not a clear benefit of using high-pressure oxygen via nasal cannula?",
    "options": {
      "A": "Decreases the need of intubation",
      "B": "Reduces nasopharyngeal dead space",
      "C": "Heating and humidification",
      "D": "PEEP"
    },
    "correct_answer": "A",
    "explanation": "cannula, also known as high-flow nasal cannula (HFNC) therapy, has several benefits, but it does not necessarily decrease the need for intubation in all cases. HFNC therapy can improve oxygenation, provide consistent and comfortable humidification, and reduce nasopharyngeal dead space, making it an effective therapy for patients with respiratory distress. However, the decision to intubate a patient is complex and depends on various factors, including the underlying condition, the severity of respiratory distress, and the patient's response to other therapies. HFNC therapy may delay the need for intubation in some cases, but it does not eliminate the need entirely. Incorrect Options Option B. Reduces nasopharyngeal dead space : HFNC therapy delivers a high flow of oxygen that washes out the nasopharyngeal dead space, allowing for more efficient ventilation and oxygenation. Option C. Heating and humidification : HFNC systems effectively heat and humidify the oxygen, preventing drying and irritation of the airways. This is particularly beneficial for patients requiring high-flow oxygen for extended periods. Option D. PEEP (Positive End-Expiratory Pressure) : HFNC can provide a degree of positive end-expiratory pressure, which helps keep the airways open, improve lung recruitment, and enhance oxygenation. This is especially useful in patients with atelectasis or other conditions where maintaining lung volume is important. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 24,
    "question": "What is the cylinder associated with a black body and white shoulder?",
    "options": {
      "A": "Oxygen",
      "B": "Nitric oxide",
      "C": "Helium",
      "D": "Entonox"
    },
    "correct_answer": "A",
    "explanation": "color coding of cylinders. Anesthetic gasses are usually supplied in cylinders that are made of molybdenum steel. This allows the cylinders to be made thinner and lighter for comparable working pressures. Oxygen is stored under high pressure in cylinders and they cannot be directly administered to a patient. Incorrect Options: Option B - Nitric oxide: Nitric oxide cylinders have a blue color code. Option C - Helium: Helium cylinders have a brown color code. Option D - Entonox: Entonox cylinders have a blue body with a white shoulder color code. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  },
  {
    "q_no": 25,
    "question": "Which is the best way to recognize the cylinder?",
    "options": {
      "A": "Color coding",
      "B": "Label",
      "C": "Pin index system",
      "D": "All of the above"
    },
    "correct_answer": "B",
    "explanation": "identify the cylinders. The name of the gas is usually written on the neck of the cylinder. The labels on the cylinder also had details about the weight of the gas, the pressure, and volume, the manufacturer, etc. There are also safety instructions given on the label (including danger signs and exposure to air warnings). Incorrect Options: Option A - Color coding: Color coding is a way to identify a cylinder, but it's not the best way, as some people may not be aware of the color coding given for a cylinder. Option C - Pin index: A pin index system is also not the best way to recognize a cylinder, as the person must understand the arrangement of the pins. Option D - All of the above: All of the above are methods used to identify a cylinder but only the label is the best method. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Airway-Previous Year Questions"
  }
]