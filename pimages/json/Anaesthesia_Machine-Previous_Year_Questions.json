[
  {
    "q_no": 1,
    "question": "Ambu aura 40 is an example of?",
    "options": {
      "A": "Supraglottic laryngeal airway generation 1",
      "B": "Supraglottic laryngeal airway generation 2",
      "C": "Supraglottic laryngeal airway generation 3",
      "D": "Supraglottic laryngeal airway generation 4"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Supraglottic laryngeal airway generation 1 Explanation: Ambu Aura 40 is a second-generation supraglottic airway device designed for improved airway protection and ventilation . It includes a gastric drainage channel , which helps reduce the risk of aspiration , a key feature of second-generation devices. Better sealing pressure compared to first-generation devices, allowing for effective positive pressure ventilation. Commonly used in elective and emergency airway management . Generations of Supraglottic Airways (SGAs) Supraglottic airway devices are classified into generations based on their features . Higher generations offer improved airway protection and better ventilation control. Generation Features Examples Generation 1 No gastric drainage, basic airway management LMA Classic, Ambu Aura Once Generation 2 Gastric drainage channel, better seal, aspiration protection Ambu Aura 40, LMA Supreme, ProSeal LMA Generation 3 Dual-lumen design, advanced sealing, integrated bite block LMA Protector Generation 4 Smart/intelligent airway control, integrated real-time monitoring (Still under research) Supraglottic laryngeal airway generation 1 (Option A): Incorrect because first-generation devices lack a gastric drainage tube , while Ambu Aura 40 has one. Supraglottic laryngeal airway generation 3 (Option C): Incorrect because third-generation SGAs have more advanced sealing and monitoring features , which Ambu Aura 40 lacks. Supraglottic laryngeal airway generation 4 (Option D): Incorrect because fourth-generation SGAs are not yet widely available , and Ambu Aura 40 does not belong to this category. Reference: Miller’s Anesthesia, 9th edition, Pages 615, 615. Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 99, 100.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 2,
    "question": "What is the typical pressure setting for the valve in a Mapleson circuit? I O, I O",
    "options": {
      "A": "30–40 cm H",
      "B": "30–40 mm Hg",
      "C": "10–20 cm H",
      "D": "10–20 mm Hg"
    },
    "correct_answer": "A",
    "explanation": "I O, Correct Answer: A) 30–40 cm H I O , Explanation: The APL (Adjustable Pressure Limiting) valve in a Mapleson circuit is typically set to allow pressures up to 30–40 cm H I O , especially during controlled ventilation . This pressure helps ensure adequate ventilation , especially in scenarios like positive pressure ventilation under anesthesia. It does not mean the pressure constantly stays at 30–40 cm H I O , but that the valve opens when pressures rise to this range , preventing further pressure buildup. Mapleson Circuit Feature Details Used in Anesthesia, manual or controlled ventilation APL Valve Purpose Limits peak airway pressure by releasing excess gas Valve Pressure Setting Typically 30–40 cm H I O , especially during controlled ventilation Spontaneous Ventilation Use Valve kept open to atmosphere (minimal resistance) Risk if too high >40 cm H I O may cause barotrauma Units Used cm H I O (not mm Hg) in respiratory and anesthesia circuits 30–40 mm Hg (Option B): Incorrect because 30 mm Hg ≈ 40.8 cm H I O — the unit is not standard for respiratory pressures. 10–20 cm H I O (Option C): Incorrect for APL valve setting ; this is more typical for PEEP or lower pressure alarms , not the opening pressure of the APL valve in controlled ventilation. 10–20 mm Hg (Option D): Incorrect both in unit (mm Hg) and value — 10 mm Hg ≈ 13.6 cm H I O, which is lower than required for safe manual ventilation in controlled settings. Reference: Equipment in Anaesthesia and Critical Care- Page 84 Miller's Anaesthesia, 9th Edition, Page 603, 604.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 3,
    "question": "Which of the following instrument is shown in the image below?",
    "options": {
      "A": "Veress needle",
      "B": "Hasson Cannula",
      "C": "Large Bore Cannula",
      "D": "Small bore cannula"
    },
    "correct_answer": "A",
    "explanation": "pneumoperitoneum and facilitating initial entry into the abdominal cavity during laparoscopic surgery. Pneumoperitoneum is the process of filling the abdominal cavity with carbon dioxide gas to create a working space for laparoscopic instruments. The Veress needle is inserted through a small incision or puncture in the abdominal wall, and carbon dioxide gas is insufflated into the abdominal cavity. This technique allows for safe and controlled entry into the peritoneal cavity before other laparoscopic instruments are introduced. Hasson Cannula (Option B): The Hasson cannula is another instrument used for entry into the abdominal cavity during laparoscopic surgery. It involves making a small incision in the abdominal wall and inserting the cannula under direct visualization. The cannula is secured in place, and carbon dioxide gas is then insufflated to create pneumoperitoneum. While the Hasson cannula is a valid method of entry, the Veress needle is more commonly used due to its less invasive nature. Large Bore Cannula (Option C): A large bore cannula is not typically used for creating pneumoperitoneum and initial entry into the abdominal cavity. Large bore cannulas are generally used for suction and irrigation during laparoscopic procedures. Small Bore Cannula (Option D): A small bore cannula is also not commonly used for creating pneumoperitoneum and initial entry. Small bore cannulas might be used for specific tasks during laparoscopic surgery, but they are not the primary instrument for establishing the",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 4,
    "question": "Resistance of the tube shown below is primarily because of:",
    "options": {
      "A": "Curvature",
      "B": "Circumference",
      "C": "Length",
      "D": "Diameter"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Diameter Explanation: Airway resistance (R) in the endotracheal tube is because of diameter. Resistance is directly proportional to viscosity and length and inversely proportional to the radius (r^4) according to the Hagen Poiseuille law. The ETT size is described in terms of internal diameter: Age Internal Diameter length Term-Neonate 3 mm (uncuffed) 9 cm 1 Year Old 4 mm (uncuffed) 10 cm Child (>1 Year) Age/4 + 4 mm (uncuffed) Age/2 + 12 cm Adult > 7 mm 18-22 cm The cuff is positioned 3-4 cm above the carina and 2-2.5 cm below the glottis. Murphy's eye is a side hole at the tip, which allows continued ventilation if the end abuts the tracheal wall.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Anaesthesia_Machine-Previous_Year_Questions_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 5,
    "question": "Which of the following gases is delivered through the blue pipeline in the operation theatre?",
    "options": {
      "A": "Oxygen",
      "B": "Nitrous oxide",
      "C": "Air",
      "D": "Vacuum"
    },
    "correct_answer": "B",
    "explanation": "color-coded to differentiate the gases being delivered. Colour coding is one of the other options for safety measures. Hoses are made up of copper and are color coded: O 2 White N 2 O Blue Air Black Suction Yellow For every gas cylinder the top part is known as the shoulder, and the lower part is known as the body: Gas Cylinder color Body Shoulder Air Black Black & white Oxygen Black White N2O Blue Blue Nitrogen Black Black Carbon dioxide Grey Grey Entonox Blue White & blue Helium Brown Brown Reference: Equipment in Anaesthesia and critical care by Daniel Aston pages - 6, 10, 11, 12 https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3821267/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 6,
    "question": "Identify the equipment shown in the image below",
    "options": {
      "A": "Mechanical ventilator",
      "B": "Infusion pump",
      "C": "CPAP machine",
      "D": "Nasal cannula"
    },
    "correct_answer": "D",
    "explanation": "deliver supplemental oxygen or increased airflow to a patient or person in need of respiratory help. It consists of a lightweight tube that splits into two prongs that are placed in the nostrils. The other end of the tube is connected to an oxygen supply. Nasal cannula: Used in low to medium concentrations of O2 (22-44%) When these are attached to the flow meter which is connected to the central pipeline supply of an ICU or cylinders and is turned on at 1L per minute, these deliver oxygen of about 24%. Atmospheric oxygen is from 20 to 21% When the concentration of oxygen is increased, it leads to an increase in the concentration of FIO2 This device can only deliver up to 6L per minute Every liter corresponds to its subsequent FiO2: 1 L/min-24% 2 L/min-28% 3 L/min-32% 4 L/min-36% 5 L/min-40% 6 L/min-44% This device is not beneficial for a capacity of > 6 liters Advantages: Patients can talk and eat with 02 support when using a nasal cannula and a nasal cannula can be used in home settings. Disadvantages: It may irritate nasal and pharyngeal mucosa. If the flow is given for more than 6L, the FiO2 may vary. Mechanical ventilator (Option A): It is a device used to assist or control a patient's breathing. It delivers a mixture of air and oxygen, controls the respiratory rate and tidal volume, and provides positive pressure to support ventilation. It is more complex than a high-flow nasal cannula and is used in cases where more advanced respiratory support is needed. Infusion pump (Option B): It is a device used to deliver fluids, such as medications or nutrients, into a",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Anaesthesia_Machine-Previous_Year_Questions_Q6_q.png",
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 7,
    "question": "The colour of the nitrous oxide cylinder is?",
    "options": {
      "A": "Blue",
      "B": "Blue body with white shoulder",
      "C": "White",
      "D": "Black"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Blue Explanation: Nitrous oxide cylinders are color-coded blue. Gasses and their PIN Indices: Gas Cylinder color PIN Index system Air Black body with black & white shoulder 1,5 Oxygen Black body with white shoulder 2,5 N 2 O Blue 3,5 Carbon dioxide Grey 1,6 (> 7.5%) ; 2,6 (< 7.5%) Entonox Blue body with white shoulders 7 Cyclopropane Orange 3,6 Entonox: Composition: 50% N 2 O + 50% O 2 Cylinder color: Blue body with white shoulders PIN Index: 7 Uses: Only provides analgesia Used for short-term pain relief such as labor analgesia/dental procedures Disadvantage: No anesthesia effect",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/pimages/images/Anaesthesia_Machine-Previous_Year_Questions_Q7_exp.png",
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 8,
    "question": "The Pin Index of Entonox is",
    "options": {
      "A": "7",
      "B": "1,5 – Air",
      "C": "2, 5 – Oxygen",
      "D": "3, 5 – Nitric oxide"
    },
    "correct_answer": "A",
    "explanation": "cuboid with four faces that is attached to the anesthesia machines is called the pin index valve block. One of these faces bears the gas outlet and the pin index safety system. The index pins for some gasses are: Oxygen - 2,5 Air - 1,5 Cyclopropane - 3,6 Incorrect options: Option B: 1,5 is the Index pin for air. Option C: 2, 5 is the Index pin for oxygen Option D: 3, 5 is the index pin for nitrous oxide.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  },
  {
    "q_no": 9,
    "question": "Colour of nitrous oxide cylinder is?",
    "options": {
      "A": "Blue",
      "B": "Blue body with white shoulder",
      "C": "White",
      "D": "Black"
    },
    "correct_answer": "A",
    "explanation": "purposes. The color of a nitrous oxide cylinder is blue. This color helps to differentiate it from other gas cylinders. Incorrect options: Option B : Blue body with white shoulder - This option describes a different color pattern that is not commonly associated with nitrous oxide cylinders. Option C : White - This option is incorrect as white is not the typical color for nitrous oxide cylinders. Option D : Black - This option is also incorrect as black is not the typical color for nitrous oxide cylinders. Reference: .",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthesia Machine-Previous Year Questions"
  }
]