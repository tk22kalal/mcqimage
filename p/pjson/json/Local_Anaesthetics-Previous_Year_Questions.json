[
  {
    "q_no": 1,
    "question": "Which of the following is true regarding the image provided?",
    "options": {
      "A": "EMLA contains ropivacaine and ligocaine",
      "B": "EMLA can lead to methemoglobinemia",
      "C": "EMLA contains 5% lignocaine",
      "D": "EMLA acts within 15 mins"
    },
    "correct_answer": "B",
    "explanation": "composed of 2.5% lidocaine and 2.5% prilocaine. It can lead to methemoglobinemia. Incorrect Options: Option A - EMLA contains ropivacaine and lidocaine: EMLA contains lidocaine and prilocaine, not ropivacaine. Option C - EMLA contains 5% lignocaine: EMLA contains lidocaine (2.5%) and prilocaine (2.5%). Option D - EMLA acts within 15 mins: EMLA typically takes about 1.5 to 2 hours to achieve full effect, not just 15 minutes.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Local_Anaesthetics-Previous_Year_Questions_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 2,
    "question": "Which of the following topical local anesthetics is commonly used in cataract surgery?",
    "options": {
      "A": "Proparacaine 0.5%",
      "B": "Bupivacaine 0.5%",
      "C": "Halothane",
      "D": "Nitrous Oxide"
    },
    "correct_answer": "A",
    "explanation": "topical local anesthetic for cataract surgery due to its effectiveness in providing adequate anesthesia with minimal systemic effects. It is preferred for its rapid onset and relatively short duration of action, which is well-suited for the brief nature of cataract procedures. Incorrect Options: Bupivacaine (Option B): Bupivacaine is more commonly used for spinal, epidural, and peripheral nerve blocks. Halothane and Nitrous (Oxide Option C and D) are inhalational anesthetic agents used for general anesthesia, not topical local anesthesia. Reference: https://pubmed.ncbi.nlm.nih.gov/31983237/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 3,
    "question": "Which of the following is the mechanism of action of Local anesthetics?",
    "options": {
      "A": "Blocks Na + channels",
      "B": "Stimulate Ca + Channels",
      "C": "Block Cl - Channels",
      "D": "Stimulate K + channels"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Blocks Na + channels Explanation: Local anesthetics work by blocking sodium channels in nerve membranes, preventing the propagation of nerve impulses, which results in local anesthesia. MOA: Blocks inactivation gates of Na+ channels → Disrupts depolarisation → No action potential generated → No pain sensation. Incorrect Options: Stimulate Ca + Channels (Option A): Calcium channels are involved in neurotransmitter release at synapses, but local anesthetics do not stimulate Ca² I channels. They primarily block sodium channels. Block Cl - Channels (Option B): Chloride channels play a role in the regulation of cell volume and maintaining membrane potential, but local anesthetics do not block chloride channels. Stimulate K + channels (Option C): Potassium channels are involved in the repolarization phase of the action potential, but local anesthetics do not directly stimulate these channels. Their primary effect is on sodium channels to block nerve conduction. Reference: Miller’s Anaesthesia, 9th Edition, Pages 875,883.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 4,
    "question": "Which neuromuscular blocking agent undergoes Hofmann elimination?",
    "options": {
      "A": "Pancuronium",
      "B": "Rocuronium",
      "C": "Vecuronium",
      "D": "Atracurium"
    },
    "correct_answer": "D",
    "explanation": "hydrolysis, a process known as Hofmann elimination. Incorrect Options: Option A - Pancuronium: Pancuronium is primarily eliminated by the liver, and it undergoes renal excretion. It doesn't undergo Hofmann elimination. Option B - Rocuronium: Similar to Pancuronium, Rocuronium is mainly metabolized by the liver and excreted through the kidneys. It doesn't undergo Hofmann elimination. Option C - Vecuronium: Vecuronium is also metabolized by the liver and excreted renally. It doesn't undergo Hofmann elimination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 5,
    "question": "Which of the following local anesthetics causes hypertension?",
    "options": {
      "A": "Cocaine",
      "B": "Lignocaine",
      "C": "Bupivacaine Prilocaine",
      "D": "Prilocaine"
    },
    "correct_answer": "A",
    "explanation": "norepinephrine at adrenergic nerve terminals, leading to increased sympathetic activity, vasoconstriction, and elevated blood pressure. Cocaine is unique among local anesthetics due to its sympathomimetic effects, which can lead to hypertension and tachycardia. Lignocaine (Lidocaine) (Option B) : It primarily acts as a sodium channel blocker and does not cause significant effects on blood pressure unless given in large doses or if it contains epinephrine. Bupivacaine (Option C) : Known for its cardiotoxicity at higher doses, but it does not typically cause hypertension. Prilocaine (Option D) : Generally safe for local use, with minimal systemic effects on blood pressure. Reference: Miller’s Anaesthesia, Edition 9, Pg 269, 271, 272, 273",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 6,
    "question": "What is the nerve blocked in the following local anaesthesia technique?",
    "options": {
      "A": "Nasociliary nerve",
      "B": "Anterior ethmoidal nerve",
      "C": "Sphenopalatine nerve",
      "D": "Greater palatine nerve"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Nasociliary nerve Explanation: For the local anesthesia technique depicted in the image, the correct nerve being targeted is the nasociliary nerve. The nasociliary nerve is a branch of the ophthalmic division (V1) of the trigeminal nerve (cranial nerve V). It provides sensory innervation to the skin of the nose, including the nasal septum and the anterior part of the nasal cavity. It further branches into the anterior ethmoidal nerve, which supplies the anterior part of the nasal cavity and the nasal septum. In procedures such as rhinoseptoplasty, the nasociliary nerve block is effective in anesthetizing the nasal septum and the anterior nasal cavity. Face blocks Most of the facial region is supplied by the Trigeminal nerve and its branches. Anatomy: Cranial nerve V arises from the brainstem and forms the Gasserian (sensory) ganglion in Meckel’s cave . The three nerve divisions (ophthalmic, maxillary, mandibular) exit the skull separately. Nerve Block Anatomy Anesthesia Distribution Technique Supraorbital & Supratrochlear (Ophthalmic Nerve) Supraorbital nerve exits the supraorbital foramen on the superior surface of the orbital rim. Supratrochlear exits medially at the orbital rim . Anesthetizes the entire forehead up to the scalp's vertex. Inject anesthetic subcutaneously above the eyebrow, from midline to the lateral orbit. Infraorbital (Maxillary Nerve) Exits infraorbital foramen below the optic rim near the first maxillary premolar. Provides sensation loss to lower eyelid, medial cheek, side of nose, upper lip. Retract mucosa, insert needle above the first premolar, and inject 3-5 ml between cheek and gingiva. Mental (Mandibular Nerve) Mental nerve exits the mental foramen, a branch of the inferior alveolar nerve. Anesthetizes lower lip, labial mucosa, and gingiva near incisors and canines. Retract lip, insert needle near first/second premolars , and inject 3-5 ml in the mucosal fold Inferior Alveola r (Mandibular Nerve) Arises from mandibular division of trigeminal (V3); landmarks: Mandibular sulcus, coronoid notch, pterygomandibular raphe. Anesthetizes all lower teeth, gums, anterior labial and lingual areas. Insert needle into pterygomandibular raphe , tap bone, withdraw slightly, and inject 2-3 ml. Complications Risks include intravascular or subarachnoid injection, Horner syndrome, and motor block of jaw muscles. Maxillary nerve blocks carry a higher risk of hemorrhage. Facial nerve may be unintentionally blocked during mandibular nerve blocks.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Local_Anaesthetics-Previous_Year_Questions_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 7,
    "question": "What is the mechanism of action of local anesthetics?",
    "options": {
      "A": "Block sodium channels",
      "B": "Block potassium channels",
      "C": "Block calcium channels",
      "D": "Block chloride channels"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Block sodium channels Explanation: Local anesthetics function by inhibiting the conduction of nerve impulses, thereby preventing the sensation of pain. They achieve this primarily by blocking voltage-gated sodium channels on nerve cell membranes. Mechanism of action & absorption: Site: acts on nodes of ranvier Blocks transmission of pain impulse from nociceptor to spinal cord. Acts on intracellular side of Na channels at inactivation gate blocking the channel. LA doesn’t affect RMP of nerves. Blocks inactivation gates of Na+ channels → Disrupts depolarisation → No action potential generated → No pain sensation. Highest systemic absorption (routes of administration): IV route >Tracheal > Intercostal > Brachial plexus > Epidural. Form for onset of LA action (to reach target nerve) - Unionized form. Active form at site of block of Na channels- Ionized form. Higher doses will act for longer duration and lower doses for a relatively shorter duration. Duration of onset for different local anesthetics (infiltration anesthesia): Short Duration Procaine Chloroprocaine Moderate Duration Lidocaine Prilocaine Long Duration Bupivacaine Ropivacaine Shortest acting- Procaine Longest acting- Dibucaine Fastest onset- Chloroprocaine (low potency so high concentration used) > Lignocaine (pka is near physiological pH) Reference: Miller’s Anaesthesia 9th Edition pages 875,883.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 8,
    "question": "During resuscitation, a patient received a 20% intralipid injection. What could have been the most probable diagnosis?",
    "options": {
      "A": "Local anaesthesia toxicity",
      "B": "Asphyxia due to drowning",
      "C": "Electrocution",
      "D": "Pulseless electrical activity"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Local anaesthesia toxicity Explanation: The administration of a 20% intralipid injection is a recognized treatment for local anesthetic systemic toxicity (LAST). LAST can occur when local anesthetics, such as bupivacaine, are inadvertently injected into the bloodstream during regional anesthesia procedures. This can lead to severe cardiovascular and central nervous system complications. Local Anesthetic Systemic Toxicity (LAST): Clinical Features CNS effects: Early and less severe. First symptom: circumoral paraesthesia First sign: nystagmus At low plasma concentration: mild sensory disturbances. Increased concentration: CNS excitation, seizure activity. Higher concentration: CNS depression, coma, respiratory depression, arrest. Cardiac effects: Usually late but severe form of toxicity, may lead to death. Hypotension, dysrhythmias, myocardial depression. Potent agents (bupivacaine, ropivacaine, levobupivacaine) linked to cardiovascular collapse, heart block. Safety profile Bupivacaine has more risk to cause LAST than Lidocaine Most potent highly lipid soluble drugs are more likely to cause Prevention Risk recognition and dose reduction. Careful aspiration before injection. Incremental administration (3-5 mL) with continuous heart rate monitoring. Use ultrasonographic guidance to confirm anesthetic deposit. Use a vasoactive agent like epinephrine to reduce systemic absorption and serve as an intravascular indicator. Treatment Recognize LAST (Local Anesthetic Systemic Toxicity) early and call for help. Airway management: Secure airway, ventilate with 100% oxygen. Administer 20% Lipid Emulsion: Bolus: 12 mL/kg over 2-3 min. Infusion: at 0.25 mL/kg/min-0.5ml/kg/min for 15-20 mins Maximum initial dose: 12 ml/kg Administration of antiepileptics: for seizure control, benzodiazepines such as Lorazepam is preferred. Cardiopulmonary resuscitation: if necessary, monitor the patient at least for initial 2-6 hours following resuscitation. Asphyxia due to drowning (Option B): Drowning leads to hypoxia and respiratory failure, which are managed through airway management and respiratory support, not lipid emulsion therapy. Electrocution(Option C): can cause cardiac arrhythmias and burns. Treatment focuses on resuscitation, wound care, and monitoring for arrhythmias, not lipid emulsion therapy. Pulseless electrical activity (Option D): This condition involves a non-perfusing rhythm and requires immediate resuscitation efforts, including CPR and addressing the underlying cause. Reference: Barash Clinical Anesthesia 9th edition pages 1706-1721",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 9,
    "question": "A young male patient was given a regional block with 0.25% bupivacaine for a minor surgical procedure. Shortly after the injection, the patient suddenly became unresponsive, and the pulse was not recordable. Which of the following would be the best course of management for this patient?",
    "options": {
      "A": "CPR with 20% intralipid",
      "B": "CPR with sodium bicarbonate",
      "C": "CPR with dobutamine",
      "D": "CPR with calcium"
    },
    "correct_answer": "A",
    "explanation": "long-acting local anesthetic known for its potential cardiotoxicity, especially when inadvertently injected intravascularly. This can lead to life-threatening arrhythmias, cardiovascular collapse, and cardiac arrest. 20% intralipid therapy : Lipid emulsion therapy is the treatment of choice for local anesthetic systemic toxicity (LAST). It acts by sequestering the lipophilic local anesthetic molecules (\"lipid sink\" effect), reducing their availability to cardiac and nervous tissues, and restoring cardiac function. In cases of bupivacaine-induced cardiac arrest, immediate CPR and administration of 20% intralipid therapy are essential to reverse toxicity and improve patient outcomes. Incorrect Options: CPR with sodium bicarbonate (Option B) : While sodium bicarbonate may help correct acidosis, it is not specific for treating bupivacaine toxicity. CPR with dobutamine (Option C) : Dobutamine is an inotropic agent used for cardiogenic shock but is not effective in reversing LAST. CPR with calcium (Option D) : Calcium is helpful in certain cardiac arrhythmias but does not address the underlying cause of LAST. Reference: Miller’s Anaesthesia, Edition 8, Pg 1047, 1048",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  },
  {
    "q_no": 10,
    "question": "Which is the anesthesia of choice in a daycare dental surgery?",
    "options": {
      "A": "General anesthesia",
      "B": "Spinal anesthesia",
      "C": "Epidural anesthesia",
      "D": "Infiltration anesthesia"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Infiltration anesthesia Explanation: Infiltration anesthesia is typically the anesthesia of choice for daycare dental surgeries. This type of local anesthesia involves the injection of anesthetic directly into the tissue around the area where the procedure will take place. It numbs only the specific area of the mouth, making it ideal for dental procedures that do not require deep sedation or general anesthesia. The patient remains awake and alert, making it suitable for daycare procedures, allowing for quick recovery. Incorrect Options: General anesthesia (option A): While general anesthesia can be used in some dental surgeries, it is not typically required for routine daycare procedures, which are often short and localized. General anesthesia carries more risks and requires longer recovery time, making it less ideal for minor dental work. Spinal anesthesia (option B) is usually reserved for surgeries involving the lower half of the body, such as abdominal or lower limb surgeries. It is not commonly used for dental procedures, which are localized to the mouth. Epidural anesthesia (option C) is also typically used for surgeries involving the lower body (such as cesarean sections or lower extremity surgeries) and is not necessary for dental procedures. Like spinal anesthesia, it involves more extensive procedures and recovery time. Reference: Morgan and Mikhail’s Clinical Anaesthesia, 5th Edition, Page 1093-1095",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Local Anaesthetics-Previous Year Questions"
  }
]