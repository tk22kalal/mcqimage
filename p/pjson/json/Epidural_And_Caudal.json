[
  {
    "q_no": 1,
    "question": "A 25-year-old primigravida is scheduled for a caesarean section. After discussing the risks, she chooses epidural anaesthesia. Which sign is not seen in correct placement of the epidural needle in the epidural space?",
    "options": {
      "A": "CSF drops following guidewire removal",
      "B": "Loss of resistance",
      "C": "Aspiration of solution in the needle hub.",
      "D": "Absence of knee-jerk"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) CSF drops following guidewire removal Explanation: Cerebrospinal fluid (CSF) drops following guidewire removal are observed in spinal anaesthesia, not epidural. Signs for identification of epidural space: Loss of Resistance As the tip of the needle enters the epidural space, there is a sudden loss of resistance. (Option B) Hanging drop test The hub of the needle should be filled with solution, allowing a drop to hang from its external opening, which is sucked in due to high negative pressure in the epidural space). (Option C) Duran sign If the catheter is placed in the epidural space then there is no resistance for the drug to pass (drug passes easily) Westphal sign Absence of PULSATING MOVEMENTS of csf in the catheter confirms correct needle placement in the epidural space. Structures pierced to reach epidural space: Absence of knee-jerk (Option D): Not a primary confirmation, but deep sensory/motor block can occur after successful epidural anaesthesia and could abolish reflexes like the patellar (knee-jerk) reflex depending on drug spread.",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Epidural_And_Caudal_Q1_exp.png",
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 2,
    "question": "A 68-year-old male undergoing elective orthopaedic surgery under spinal anaesthesia suddenly becomes unresponsive. The anesthesiologist suspects total spinal anaesthesia. Which of the following set of statements is true? Sensory loss typically follows the caudal spread Profound motor weakness due to cephalad spread Respiratory depression Severe hypotension and bradycardia due to sympathetic blockade.",
    "options": {
      "A": "1,2,3",
      "B": "2,3,4",
      "C": "1,3,4",
      "D": "1,2,3,4"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) 2,3,4 Explanation: Total spinal block is a condition in which local anaesthetic spreads to cranial levels, leading to profound motor and sensory block, respiratory compromise, and significant hypotension. Total Spinal Block Cause If the patient is kept in the Trendelenburg position for a longer duration, the cervical and intracranial segments are blocked through CSF during the spinal block. It also happens due to accidental intrathecal injection during caudal and epidural blocks. Symptoms Severe hypotension, Bradycardia, Respiratory distress (due to phrenic nerve involvement) Sensory loss and profound motor weakness due to Cepahald spread of local anaesthetic. Loss of consciousness Management Oxygen supplementation IV Fluids Intubation and mechanical ventilation, if needed Phenylephrine for Hypotension Atropine for Bradycardia Adrenaline in case of Cardiac arrest Reference: Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Page 1848",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 3,
    "question": "A 71-year-old man with COPD, atrial fibrillation, and osteoporosis is admitted for revision hip surgery. The surgical team chooses continuous spinal anaesthesia (CSA) to manage pain and reduce respiratory risks, considering his desire to stay awake. Which of the following is most commonly associated with CSA?",
    "options": {
      "A": "Conus medullaris syndrome",
      "B": "Lumbar spinal stenosis",
      "C": "Syringomyelia",
      "D": "Cauda equina syndrome"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Cauda equina syndrome Explanation: Cauda Equina Syndrome occurs when the cauda equina, a bundle of spinal nerves at the lower end of the spinal cord, is compressed. Continuous Spinal Anesthesia (CSA) can potentially lead to this condition if a complication, such as a hematoma or local anaesthetic spread, affects the nerve roots. Continuous Spinal Anesthesia (CSA) Advantages Disadvantages Better hemodynamic stability (because of predictable titration of the block) Controls arterial blood pressure (in patients with severe aortic stenosis or pregnant women with complex cardiac disease). It can be used in cases of morbid obesity (as previous spinal surgery may hinder epidural spread) Preferred in a few cases of laparotomies (where general anaesthesia may be a risk). Postdural puncture headache (PDPH) Cauda equina syndrome: Spinal cord nerve root compression leading to: Difficulty with micturition Loss of anal sphincter tone or faecal incontinence Saddle anaesthesia Gait disturbance Pain, numbness or weakness affecting one or both legs. Conus medullaris syndrome (Option A) affects the conus medullaris at the end of the spinal cord and is less commonly associated with CSA. It is characterised by lower limb weakness, increased knee reflex, decreased ankle reflex, and extensor plantar reflex. Lumbar spinal stenosis (Option B) occurs with a congenitally narrowed lumbar spinal canal, exacerbated by the degenerative changes that commonly occur with age, characterised by exercise-induced weakness and paraesthesia in the legs, but is not directly associated with CSA. Syringomyelia (Option C) is a condition characterised by the formation of a cyst (syrinx) within the spinal cord. It leads to pain and numbness in the neck, shoulders, arm, or back and is not specifically associated with CSA.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 4,
    "question": "A 43-year-old man with scoliosis is scheduled for inguinal hernia mesh repair. During the pre-anaesthetic assessment, spinal anaesthesia was chosen. What would be the most appropriate approach for inducing anaesthesia in this patient?",
    "options": {
      "A": "Midline approach",
      "B": "Paramedian approach",
      "C": "Caudal approach",
      "D": "Taylor’s approach"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Taylor’s approach Explanation: Taylor’s approach, also called a modified Paramedian approach , is done between L5 to S1 space. It is used in patients with trauma who cannot tolerate sitting position or in people with deformed spines. The needle is inserted 1 cm medial and 1 cm inferior to the posterior superior iliac spine, angled medially and cephalad at 45 to 55 degrees. Technique Midline approach Paramedian approach Caudal approach Used in Spinal & Epidural block (Option A) Spinal & Epidural block (Option B) Spinal & Epidural block (mostly in paediatric age groups) (Option C) Site of puncture L2-L3 L3-L4 L4-L5 Similar to midline block S1 - S2 Method Inserting the needle in the midline. Inserting the needle 1-2 cm lateral to the midline. Inserting the needle 45 degrees to the sacrum`",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Epidural_And_Caudal_Q4_exp.jpg",
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 5,
    "question": "A 35-year-old man is set to undergo a hemorrhoidectomy, and the anaesthetist intends to utilise a saddle block for anaesthesia. Which of the following is the main benefit of employing a saddle block in this procedure?",
    "options": {
      "A": "Provides deep sedation",
      "B": "Longer duration of action",
      "C": "Complete motor blockade.",
      "D": "Rapid recovery of motion"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Rapid recovery of motor function. Explanation: Saddle block is a type of spinal anaesthesia achieved by keeping the patient in a sitting position for 3 to 5 minutes after the injection. This allows for the blockade of only the lower lumbar and sacral nerves. This gives benefits in obstetric, urological, anorectal procedures, and perioperative pain management: Allows the patient to be awake through the procedure (Option A) Reduced systemic side effects Rapid onset and recovery (Option B) Less post-op nausea Minimal motor block (Option C) Complications like urinary retention can be prevented by changing the patient to a jack-knife position after maintaining the initial sitting posture for only one minute. This has a low incidence of hypotension as it does not induce excessive sympathetic blockade compared to spinal block.",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Epidural_And_Caudal_Q5_exp.png",
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 6,
    "question": "A 2-year-old child weighing 10 kg is scheduled for a procedure that requires caudal anaesthesia. The anaesthetist plans to use a 0.1% lidocaine solution, with the recommended dose set at 0.5 mL/kg. What total volume of lidocaine should be administered?",
    "options": {
      "A": "3 mL",
      "B": "4 mL",
      "C": "7 mL",
      "D": "5 mL"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) 5 mL Explanation: The Armitage formula is employed to determine the correct dose of local anaesthetic for caudal anaesthesia, taking into account the patient's weight and the desired concentration. This formula reduces the risk of complications while ensuring effective pain relief during procedures. Volume = Weight (kg) × Effective dose (mL/kg) = 10 kg × 0.5 mL/kg = 5 mL Armitage formula Dermatomes to be blocked Required volume of anaesthesia All sacral dermatomes 0.5 mL/Kg All sacral and Lumbar dermatomes II 1 mL/Kg Block till mid-thoracic 1.25 mL/Kg Reference: Miller’s Anesthesia, 9th edition, Page 2385",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 7,
    "question": "A 3-year-old boy is scheduled for circumcision and is being assessed by an anaesthetist during the pre-anaesthesia checkup. What would be the most preferred type of anaesthesia for this procedure?",
    "options": {
      "A": "Spinal anaesthesia",
      "B": "General anaesthesia",
      "C": "Local anaesthesia",
      "D": "Caudal anaesthesia"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Caudal anaesthesia Explanation: Caudal epidural anaesthesia is a common practice in paediatric age groups . It involves the insertion of a needle or catheter through the sacrococcygeal ligament, which covers the sacral hiatus formed by the un-fused laminae of S4 and S5. It is frequently employed for procedures located below the diaphragm , such as urogenital, rectal, inguinal, and lower extremity surgeries. In adults , it is employed for anorectal procedures , as it provides dense sacral sensory blockade with minimal upward spread . Spinal anaesthesia (Option A) involves injecting anaesthetic into the cerebrospinal fluid but is generally not preferred for young children due to risks of hypotension and prolonged motor blockade. General anaesthesia (Option B) induces unconsciousness and provides complete analgesia, but it carries risks such as airway complications and is often more than necessary for simple procedures like circumcision. Local anaesthesia (Option C) consists of infiltrating anaesthetic agents at the surgical site to achieve localised analgesia. While effective for minor procedures, it may not provide adequate pain relief in paediatric patients who can be uncooperative during surgery.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 8,
    "question": "A 37-year-old male is undergoing inguinal hernia repair with spinal anaesthesia. During the procedure, the patient experiences cardiac arrest. Which anaesthetic drug is likely responsible for this?",
    "options": {
      "A": "Ropivacaine",
      "B": "Lidocaine",
      "C": "Chloroprocaine",
      "D": "Bupivacaine"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Bupivacaine Explanation: Bupivacaine is a long-acting local anaesthetic known for its potency and potential for cardiotoxicity. It can lead to severe cardiac complications, including cardiac arrest, especially when used in high doses or inadvertently injected into a blood vessel. CPR and I mmediate infusion of 20% Intralipid (ACLS Protocol) along with incremental doses of epinephrine has been effective in reversing bupivacaine-induced cardiac toxicity It is crucial to ensure that the CSF is free of blood during barbotage (aspirating CSF into a syringe) before administering spinal anaesthesia. In Obstetric use, very dilute concentrations of Bupivacaine are often combined with fentanyl for labour analgesia and postoperative pain management. Ropivacaine (Option A) is also a long-acting local anaesthetic that has a lower risk of cardiovascular toxicity and severe central nervous system effects compared to bupivacaine. Both can cause transient neurologic symptoms and injection site reactions, but ropivacaine is generally safer for obstetric and outpatient procedures. Lidocaine (Option B) is a widely used local anaesthetic with a rapid onset and moderate duration. While it can lead to cardiovascular effects at high doses, it is generally well-tolerated and not commonly associated with cardiac arrest in typical clinical use. Chloroprocaine (Option C) is an ultra-short-acting anaesthetic with a low risk of systemic toxicity. Its rapid metabolism and lower potency significantly decrease the likelihood of severe cardiovascular complications, including cardiac arrest. Previous formulations of chloroprocaine containing preservatives caused cauda equina syndrome when inadvertently injected in large volumes intrathecally. Reference: Miller’s Anesthesia, 9th edition, Pages 1689, 1690 Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 1830,1831,1840,1841, 1621.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 9,
    "question": "A 48-year-old male is undergoing an open inguinal hernia repair. The anesthesiologist decides to use epidural anaesthesia instead of spinal anaesthesia for better postoperative pain management. What is an additional advantage of epidural anaesthesia over spinal in this patient?",
    "options": {
      "A": "Complete sensory and motor block",
      "B": "Less volume of anaesthesia is required",
      "C": "Immediate onset of anaesthesia",
      "D": "Longer duration of anaesthesia"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Longer duration of anaesthesia Explanation: Epidural anaesthesia is a better option for the given condition, as it provides selective, segmental blockade of sympathetic fibres, preserves some sympathetic function, helps maintain vascular tone, and reduces the risk of hypotension. It also offers a longer duration of analgesia due to the larger volume of anaesthetic used and allows for continuous infusion. Criteria Epidural anaesthesia Spinal anaesthesia Site of puncture Thoracic or lumbar region Lumbar region Needle used Tuohy’s needle (thick bore needle) Sprotte’s needle or Witacre needle (Pencil point tip) Space where anaesthesia is administered Epidural space Sub-arachnoid space The volume of drugs needed more Less (Option B) The needle position is confirmed by Hanging drop test Dural sign Westphal sign Needle drops of CSF, on removing the guide wire Barbotage Time on onset Gradual Faster (Option C) Duration of anaesthesia Longer duration due to catheter insertion Shorter duration Post-Op pain relief Fast Slow Technique of anaesthesia administration Comparatively difficult Simple PDPH (Post-dural Puncture Headache) Rare Common Complications (Hypotension, Bradycardia, Respiratory distress) Rare Common Quality of block Patchy or incomplete Dense (Complete block) (Option A)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 10,
    "question": "A 67-year-old female with a history of osteoarthritis, significantly affecting her quality of life, is scheduled for knee replacement surgery. After exploring her options, she decides to opt for epidural anaesthesia. All of the following are the disadvantages of epidural anaesthesia, except?",
    "options": {
      "A": "High risk of post-dural headache",
      "B": "Late onset of anaesthesia",
      "C": "Patchy level of blockade",
      "D": "Difficult technique"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) High risk of post-dural headache Explanation: Epidural anaesthesia involves a challenging technique, may produce a patchy level of the blockade, has a delayed onset of action, and presents a very low risk of post-dural headache. Advantages and disadvantages of epidural anaesthesia: Advantages Disadvantages It can be used for long-duration surgeries (catheter) Low risk of Post dural headache (PDH) (Option A) The level of anaesthesia can be altered (drug volume) Hemodynamic stability Difficult technique (Option D) Patchy (inadequate) level of blockade (due to the presence of fat) (Option C) Accidental dural puncture (severe PDH) Bupivacaine toxicity: Cardiac arrhythmias Lignocaine toxicity: Seizures Not used for emergency surgeries (due to the late onset of anaesthesia) (Option B) Reference: Miller’s Anesthesia, 9th edition, Pages 2628, 2629. Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 1832, 1833.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 11,
    "question": "A 75-year-old male with osteoarthritis is undergoing hip replacement surgery. After obtaining proper consent and following necessary precautions, the catheter was successfully inserted. What is the most likely factor that could hinder the administration of epidural anaesthesia in this patient?",
    "options": {
      "A": "Increase in epidural venous pressure",
      "B": "Decrease in epidural venous pressure",
      "C": "Narrowing of epidural space",
      "D": "Widening of epidural space"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Narrowing of epidural space Explanation: Age-related alterations, such as intervertebral disc degeneration and osteophyte formation, can narrow the epidural space , making it more challenging to place the catheter properly. Factors affecting epidural anaesthesia: Drug factor The larger volume of drugs leads to a higher level of blockade. Typically, 1 to 2 mL of the solution is administered per segment for blockade. Patient factor Old age: Narrowing of epidural space (higher level of blockade with the same amount of drug) (Option C) Pregnancy: Increase in epidural venous pressure (decrease in volume of drug required). (Option A ruled out) Procedure factor The level of injection affects the spread as: Site of injection Spread Upper cervical Caudal Midthoracic Cephalad & caudal (both equally) Low thoracic Cephalad (primarily) Effect of additives: Addition of epinephrine prolongs the duration of the following anaesthetics: Chloroprocaine Lidocaine Mepivacaine Bupivacaine Ropivacaine Etidocaine Levobupivacaine Reference: Miller’s Anesthesia, 9th edition, Page 1432. Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Page 1839.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 12,
    "question": "A 30-year-old primigravida presents to the hospital with progressively intense contractions over the past few hours. After discussing her pain management options, she chooses epidural anaesthesia for labour. What is the dermatome level associated with the first stage of labour?",
    "options": {
      "A": "S2 to S4",
      "B": "T10 to L1",
      "C": "L1 to S4",
      "D": "T10 to S1"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) T10 to L1 Explanation The dermatome for the first stage of labour spans from T10 to L1. Epidural Anesthesia in Labor: Site L2-L3 and L4-L5. Purpose Provides a sensory block while maintaining intact motor function, allowing the mother to participate actively in labour. Dermatome level 1st Stage of labour: T10 to L1 (Option B) 2nd Stage of Labor: S2 to S4 (Option A ruled out) Benefits Decreased maternal catecholamines Effective pain relief Increased patient satisfaction Ability to quickly achieve surgical anaesthesia (emergency caesarean delivery). Dose Bupivacaine:0.0625% to 0.125% Ropivacaine: 0.1% to 0.2% Onset and Duration The onset of action typically occurs within 10-20 minutes, and depending on the concentration and volume used, the effects can last for several hours. Monitoring Continuous maternal and foetal monitoring is essential during the administration of epidural anaesthesia. Reference: Miller’s Anesthesia, 9th edition, Page 2382. Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 1617-1619.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 13,
    "question": "A 37-year-old man is on the surgical table for inguinal hernia repair. At what level of the spinal cord is spinal anaesthesia administered to achieve the preferred level of the block?",
    "options": {
      "A": "L1 - L2",
      "B": "L5 - S1",
      "C": "S1 - S2",
      "D": "L3 - L4"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) L3 - L4 Explanation: Spinal anaesthesia is ideally administered below the termination of the spinal cord, known as the conus medullaris, which typically ends at the L1 - L2 vertebral level in adults. Therefore, the preferred spaces for administering spinal anaesthesia in adults are between L2 and L3, L3 and L4, or L4 and L5. The L3 - L4 interspace is commonly chosen due to its accessibility and the presence of cerebrospinal fluid (CSF). In infants, the preferred space for spinal anaesthesia is between L4 and L5, as their conus medullaris is situated lower in the vertebral column. The L4 - L5 space is easily identified by the intercristal line (Tuffier’s line), an imaginary line drawn between the highest points of the iliac crests, which typically corresponds to the L4 spinous process. Positioning for Spinal Anesthesia Spinal anaesthesia can be administered in two positions based on the patient's condition: Lateral decubitus position : Allows easier access to the lumbar interspaces and is often more comfortable. Sitting position: Facilitates the spread of the anaesthetic and is used when lateral positioning is not suitable. Spinal Anesthesia\" data-author=\"\" data-hash=\"381\" data-license=\"\" data-source=\"\" data-tags=\"December2024\" src=\"https://image.prepladder.com/notes/p52SHDpVEFhPA9lkNMzp1734923581.png\" /> Reference: Miller’s Anesthesia, 9th edition, Page 1429 Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pages 1821, 1819.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 14,
    "question": "A 52-year-old male is scheduled for a prostatectomy under regional anaesthesia. The anesthesiologist decides to perform epidural anaesthesia for postoperative pain control. Which of the following needles is typically used for administering epidural anaesthesia? A. B. C. D.",
    "options": {},
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Explanation: The needle depicted in the image is a Tuohy needle (Option D), which is preferred for epidural anaesthesia. This involves delivering local anaesthetic into the epidural space, typically with the insertion of a catheter to extend the duration of pain relief. Epidural needles Tuohy Epidural Needle: A thick-bore needle is used in epidural anesthesia (to minimise damage to the dura and facilitate the insertion of the epidural catheter). On reaching the epidural space, the guidewire is removed, and the catheter is then placed. The needle has alternating dark and light bands at 1 cm intervals to aid in depth measurement during insertion. Specifications: Gauge: 18G Size: 9 to10 cm (3.5 inches long) Crawford needle Straight needles without a curved tip Greater incidence of dural puncture It is the image of the Quincke Needle (Dura cutting) used in spinal anaesthesia. (Option A): It is the image of Sprotte Needle (conical, pencil-point tip; Dura splitting) is used in spinal anaesthesia. (Option B): It is the image of Whitacre Needle with a conical, pencil-point tip (Dura splitting) used mainly in spinal anaesthesia. (Option C):",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 15,
    "question": "A 65-year-old male with a history of aortic stenosis, hypertension, and recent cerebral venous thrombosis on anticoagulant therapy is scheduled for lower limb surgery. The anesthesiology team is evaluating the use of spinal anaesthesia. Which of the following is not a contraindication for spinal anaesthesia in this patient?",
    "options": {
      "A": "Aortic stenosis",
      "B": "Cerebral venous thrombosis",
      "C": "Hypertension",
      "D": "Vertebral osteomyelitis"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Hypertension Explanation: Hypertension is not a contraindication for spinal anaesthesia. Spinal anaesthesia can be safely used in patients with well-controlled hypertension. It is essential to monitor blood pressure closely during and after the procedure, as spinal anaesthesia can cause hypotension due to sympathetic blockade. Contraindications of Spinal Anesthesia Absolute Contraindications Patient refusal Localized sepsis Allergy to planned medications Patient's inability to remain still Raised intracranial pressure (ICP) Relative Contraindications Myelopathy or Peripheral Neuropathy Spinal Stenosis Previous spine surgery Neural Tube Defects Inherited Coagulopathy System infections Cardiac valvular stenosis Multiple sclerosis Anticoagulant medication Aortic stenosis ( Option A) decreases the heart’s ability to maintain adequate blood flow. The sudden drop in blood pressure from spinal anaesthesia could lead to dangerously low coronary perfusion and cardiac ischemia. Cerebral venous thrombosis (Option B), combined with anticoagulant therapy, is a contraindication for spinal anaesthesia due to the risk of elevated intracranial pressure and bleeding complications. Vertebral osteomyelitis (Option C): Introducing a needle into an infected area carries a high risk of spreading the infection to the spinal canal, potentially leading to meningitis or epidural abscess. Reference: Miller’s Anesthesia, 9th edition, Pages 1420,1421",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 16,
    "question": "A 65-year-old male scheduled for foot and ankle surgery under spinal anaesthesia is unable to raise his leg or move his knee but can move his feet. To ensure adequate sensory block, at which dermatomal level should the spinal anaesthesia be achieved, and what is his motor blockade score according to the Modified Bromage Scale?",
    "options": {
      "A": "L2-L3, Score: 2",
      "B": "L4-L5, Score: 1",
      "C": "L2-L3, Score: 3",
      "D": "L4-L5, Score: 2"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) L2-L3, Score: 2 Explanation: Adequate sensory block for foot and ankle surgery typically requires a dermatomal level of L2-L3. A Bromage scale score of 2 indicates partial motor block, where the patient is unable to raise an extended leg or move a knee but can move feet. Dermatomal Level Required for Common Surgical Procedures Type of Surgery Dermatomal Level Upper abdominal surgery T4 Caesarean delivery Transurethral resection of prostate T10 Hip surgery Foot and ankle surgery L2 Block Monitoring Motor block - Modified Bromage Scale Sensory block 0: No motor block 1: Inability to raise extended leg; able to move knees and feet 2: Inability to raise extended leg and move knee; able to move feet 3: Complete block of motor limb Cold sensation Pinprick Light touch",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 17,
    "question": "A 40-year-old male undergoing hernia repair under spinal anaesthesia is being assessed by the anesthesiologist for factors influencing the level of anaesthesia. Which of the following factors is least likely to affect the level of spinal anaesthesia?",
    "options": {
      "A": "Baricity of the local anaesthetic",
      "B": "Volume of cerebrospinal fluid",
      "C": "Age of the patient",
      "D": "Type of spinal needle"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Type of spinal needle. Explanation: The type of needle used for the spinal injection does not have a significant impact on the level of anesthesia achieved but it may affect the risk of complications, such as post-dural puncture headache. Factors Affecting Level of Spinal Anesthesia Factors Effect Drug factors Dose Higher the dose, the higher the level of anaesthesia Baricity (Option A) Hypobaric drug floats in CSF, leading to a higher level of anaesthesia Hyperbaric drug settles down, resulting in a l ower level of anaesthesia. Patient factors CSF volume (Option B) Higher cerebrospinal fluid (CSF) volume dilutes the anaesthetic , reducing its spread and resulting in a lower level of spinal anaesthesia. Age (Option C) Advanced age is associated with ↓ CSF volume , leading to a higher level of spinal anaesthesia. Pregnancy Pregnancy increases intra-abdominal pressure , leading to a higher level of spinal anaesthesia due to enhanced cephalad spread of anaesthetic. Procedural factors Patient position In the sitting position, hyperbaric drugs settle lower in the spinal column, resulting in a lower level of anaesthesia. In the Trendelenburg position, hyperbaric drugs move cephalad (toward the neck), leading to a higher level of anaesthesia. Epidural Injection Post-Spinal Anesthesia It increases the level of anaesthesia by compressing the subarachnoid space and enhancing drug spread. Reference: Miller’s Anesthesia, 9th edition, Pages 1421,1423-1425",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 18,
    "question": "A 30-year-old female undergoes spinal anaesthesia for a caesarean section. Twenty hours later, she develops a severe occipital headache that worsens when standing up and improves on lying down. Which of the following is the most definitive treatment for her condition?",
    "options": {
      "A": "Oral caffeine",
      "B": "Supine positioning",
      "C": "Epidural blood patch",
      "D": "Intravenous fluids"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Epidural blood patch Explanation: The patient's symptoms are indicative of a post-dural puncture headache (PDPH ), which occurs due to a cerebrospinal fluid (CSF) leak following a puncture of the dura mater during procedures like spinal anaesthesia or epidural catheter placement. The onset is usually after 12-72 hours following the procedure and the pain is bilateral, frontal, retro orbital, or occipital and extends into the neck The most definitive treatment for PDPH is an epidural blood patch . Management of post-dural puncture headache (PDPH): Conservative management: A supine position (Option B) can help reduce the headache by decreasing the pressure gradient and allowing the cerebrospinal fluid (CSF) to stabilize. Hydration ( (Option C) : Ensuring adequate fluid intake can help replenish lost CSF and alleviate symptoms. Oral caffeine (Option A) (500mg) can constrict blood vessels and increase CSF production, providing symptomatic relief. Analgesics such as acetaminophen or non-steroidal anti-inflammatory drugs (NSAIDs) like ibuprofen may help manage pain associated with PDPH. Definitive Management: An epidural blood patch is ideally performed 24 hours after the dural puncture. It involves injecting 15-20 mL of autologous blood into the epidural space to create a clot that seals the dural puncture, providing relief from the headache. If the first blood patch does not provide sufficient relief, a second epidural blood patch can be administered 24 to 48 hours later. Prevention: by using a smaller gauge needle (Pencil Point needles) for spinal procedures and minimizing the number of punctures. Ultrasound guidance for lumbar puncture.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 19,
    "question": "A 45-year-old woman undergoes a caesarean section under spinal anaesthesia. During her recovery, she is monitored for potential complications associated with the anaesthesia. Which of the following is not related to spinal anaesthesia?",
    "options": {
      "A": "Transient Neurologic Symptoms",
      "B": "Post-Dural Puncture Headache",
      "C": "Respiratory Depression",
      "D": "Malignant Hyperthermia"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Malignant Hyperthermia Explanation: Malignant Hyperthermia is more likely associated with general anaesthesia, not spinal anaesthesia. It is primarily triggered by volatile anaesthetics (like halothane, isoflurane, and sevoflurane) and the depolarising muscle relaxant (succinylcholine). It presents as tachypnea, tachycardia, muscle rigidity, hyperthermia, elevated blood pressure, and raised end-tidal CO2 levels. Transient Neurological Symptoms (Option A) typically occur after spinal anaesthesia, presenting as pain in the back radiating to the legs without any neurological deficits. Post-dural puncture headache (Option B) presents as a severe headache that occurs due to a CSF leak through the puncture in the dura mater following spinal anaesthesia. Respiratory Depression (Option C) occurs following a higher level of spinal anaesthesia or in patients with preexisting respiratory disease. Post-Op complications of Spinal Anesthesia Neurological Nerve injury Epidural hematoma Transient Neurologic Symptoms Postdural puncture headache Arachnoiditis Meningitis Cardiovascular Hypotension Bradycardia Cardiac arrest Other complications Urinary retention (Most common) Respiratory depression Backache Nausea & vomiting Reference: Miller’s Anesthesia, 9th edition, Pages 1440-1444",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 20,
    "question": "A 58-year-old man undergoing urological surgery under spinal anaesthesia develops hypotension that does not improve with fluid resuscitation. Which of the following should be administered to manage his hypotension?",
    "options": {
      "A": "Metoprolol",
      "B": "Atropine",
      "C": "Pethidine",
      "D": "Ephedrine"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Ephedrine Explanation: Hypotension is the most commonest intraoperative complication of spinal anaesthesia due to, It can also happen due to adrenal gland blockage. Preloading with IV fluids , typically crystalloids , before spinal anaesthesia can help prevent Hypotension. If this occurs mid-surgery, the patient can initially be resuscitated with fluids; if the condition does not improve, it can be managed by Vasopressors like Phenylephrine (the drug of choice in Pregnancy) or Ephedrine. Ephedrine acts by increasing both cardiac output and systemic vascular resistance. Other intraoperative complications of Spinal anaesthesia are Bradycardia can be managed by Atropine (Option B) and shivering with Pethidine (Option C) . Respiratory distress can happen primarily due to total spinal anaesthesia (block of cervical and intracranial segment due to prolonged Trendelenburg position) leading to phrenic nerve paralysis or high spinal anaesthesia in which the block is achieved above the desired level. This should be managed by laryngoscopy and intubation . Apnea can happen more likely due to prolonged hypotension or medullary hypoperfusion than phrenic nerve paralysis. Cardiac arrest is a potential possibility preceded by hypotension and bradycardia, which can be avoided by appropriate treatment of such complications and immediate management by Adrenaline . Metoprolol (Option A) : Administering beta-blockers would worsen the hypotension , as it would further decrease cardiac contractility and slow the heart rate, which is contraindicated in hypotensive states caused by spinal anaesthesia. Reference: Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Page 1848",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Epidural_And_Caudal_Q20_exp.png",
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 21,
    "question": "A 63-year-old man with benign prostatic hyperplasia (BPH) is scheduled for prostate surgery. During the pre-anaesthesia evaluation, spinal anaesthesia is selected. To ensure adequate anaesthesia for this procedure, what is the required level of the sensory block?",
    "options": {
      "A": "Block till L1",
      "B": "Block till L2",
      "C": "Block till T4",
      "D": "Block till T10"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Block till T10 Explanation: Spinal anaesthesia is generally preferred for surgeries involving areas below the umbilicus and for procedures lasting between 2 to 3 hours. For prostate surgery, a spinal block is administered up to the T10 level; however, the required level can vary for different procedures. Type of surgery Preferred dermatome for spinal block Prostate Surgery Block till T10 Lower segment caesarean section (LSCS) Block till T4 or T6 (Option C) Diabetic foot L1 or L2 (Option A and B) Assessing the level of block: Failure to return the patient to the supine position quickly may cause the anaesthesia to ascend beyond the intended level, leading to high spinal anaesthesia. If the anaesthesia reaches the cervical or intracranial segments, it can cause total spinal anaesthesia , increasing the risk of hypotension, bradycardia, and respiratory distress. Dermatome level Landmark Area T4 Nipples T6 Sternum T8 Area between Xiphoid and Umbilicus T10 Umbilicus T12 Pubic symphysis",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 22,
    "question": "A 32-year-old woman is on the surgical table for a lower segment caesarean section (LSCS). During the administration of spinal anaesthesia, the anaesthetist suddenly feels a \"snap.\" Which structure is most likely indicated by this?",
    "options": {
      "A": "Arachnoid mater",
      "B": "Infraspinatus Ligament",
      "C": "Supraspinous Ligament",
      "D": "Ligamentum Flavum"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Ligamentum Flavum Explanation: Ligamentum flavum is the toughest ligament and is easily identifiable during a lumbar puncture for spinal anaesthesia, as it presents as a sudden loss of resistance or a snap. Order of structures pierced during lumbar puncture:",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Epidural_And_Caudal_Q22_exp.png",
    "chapter_heading": "Epidural And Caudal"
  },
  {
    "q_no": 23,
    "question": "A 27-year-old male diagnosed with testicular torsion is scheduled for emergency surgery. During the pre-anesthesia assessment, the type of anaesthesia was decided. Which of the following about the needle (in the image below) used for administering the necessary anaesthesia is incorrect?",
    "options": {
      "A": "It creates a smaller puncture",
      "B": "Less chances of Post dural puncture headache",
      "C": "Used commonly in spinal anaesthesia",
      "D": "It is a dura-cutting needle"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) It is a dura-cutting needle Explanation: The image depicts a Whitacre needle, a dura-separating needle (not a dura-cutting needle) commonly used in spinal anaesthesia. (Option C ruled out) It has a conical, pencil-point tip with a small orifice, which is useful in reducing the incidence of Post dural puncture headache (PDPH) Types of needles used in Spinal anaesthesia: Dura Separating Needle Dura Cutting needle Sprotte’s needle and Whitacre's needle Quincke’s needle The pencil point tip creates a smaller puncture. (Option A ruled out) A sharp tip makes a larger puncture Reduced chances of PDPH (Option B ruled out) Highly prone to",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Epidural_And_Caudal_Q23_q.png",
    "explanation_image": null,
    "chapter_heading": "Epidural And Caudal"
  }
]