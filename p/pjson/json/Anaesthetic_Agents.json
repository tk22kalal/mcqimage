[
  {
    "q_no": 1,
    "question": "A patient is in long-term sedation with propofol due to a neurological condition. The patient develops rhabdomyolysis, hyperkalemia, and lactic acidosis. Which of the following steps would not be useful in managing this scenario?",
    "options": {
      "A": "Hemodialysis",
      "B": "Sodium bicarbonate infusion",
      "C": "Lowering the dose of propofol",
      "D": "Fluid management and monitoring"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Lowering the dose of propofol Explanation: The clinical scenario points to the diagnosis of propofol infusion syndrome, which is treated with immediate cessation of propofol infusion and not just by lowering the dose. Propofol Infusion Syndrome (PRIS) A rare but serious condition associated with prolonged use of propofol for sedation, particularly in critically ill patients. Symptoms: Lipemia Metabolic acidosis Myopathy Cardiac dysfunction due to impairment of cardiovascular contractility Lactic acidosis Rhabdomyolysis Hyperkalemia Hepatomegaly Acute renal failure Eventually, mortality in most cases Risk Factors: Long-term sedation (especially in pediatric and neurocritical care patients). High doses of propofol. Use of propofol in patients with significant metabolic stress or poor organ function and critical illnesses Increased serum catecholamines Steroid therapy Obesity Young age (significantly below three years) Depleted carbohydrate stores in the body Increased serum lipids. Pathophysiology: The mechanism is not fully understood but may involve mitochondrial dysfunction, leading to impaired fatty acid oxidation and ATP synthesis. Management: Immediate cessation of propofol infusion. Supportive care, including fluid management and monitoring of metabolic status. (Option D) Addressing electrolyte imbalances and other complications as they arise. Sodium bicarbonate infusion, hemodialysis, and hemofiltration for metabolic and lactic acidosis. (Options A & B) Oxygenation and circulatory support. Prevention: Limit the duration of propofol use in high-risk populations. Consider alternative sedation strategies for prolonged use. Complications Contraindications Cardiovascular Hypotension Bradycardia Impaired baroreflex response Hypersensitivity to propofol or its components Severe cardiac dysfunction Significant hypotension Allergy to egg lecithin (in some cases) Severe hepatic impairment Severe allergies to soy products Inability to maintain a sterile technique Respiratory Apnea Depressed hypoxic ventilatory drive Neurological Excitatory phenomena (e.g., twitching) Propofol Infusion Syndrome (PRIS)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 2,
    "question": "Match the following anesthetic drug with its systemic effect Drug Effect 1. Thiopental a. No effect on HR, I MAP 2. Dexmedetomidine b. I HR, I MAP 3. Propofol c. I HR, I ICP 4. Ketamine d. I HR, I ICP",
    "options": {
      "A": "1-c, 2-b, 3-a, 4-d",
      "B": "1-b, 2-a, 3-d, 4-c",
      "C": "1-a, 2-d, 3-c, 4-b",
      "D": "1-d, 2-a, 3-b, 4-c"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) 1-c, 2-b, 3-a, 4-d Explanation: Thiopental: I HR, I ICP Dexmedetomidine: I HR, I MAP Propofol: No effect on HR, I MAP Ketamine: I HR, I ICP Agent Cardiovascular Respiratory Cerebral HR MAP Vent B'dil CBF CMRO I ICP 1. Barbiturates Thiopental ↑↑ ↓↓ ↓↓↓ ↓ ↓↓↓ ↓↓↓ ↓↓↓ Methohexital ↑↑ ↓↓ ↓↓↓ 0 ↓↓↓ ↓↓↓ ↓↓↓ 2. Benzodiazepines Diazepam 0/ ↑ ↓ ↓↓ 0 ↓↓ ↓↓ ↓↓ Lorazepam 0/ ↑ ↓ ↓↓ 0 ↓↓ ↓↓ ↓↓ Midazolam ↑ ↓↓ ↓↓ 0 ↓↓ ↓↓ ↓↓ 3. Ketamine (Phencyclidine derivative) ↑↑ ↑↑ ↓ ↑↑↑ ↑↑ ↑ ↑↑ 4. Etomidate (Imidazole derivative) 0 ↓ ↓ 0 ↓↓↓ ↓↓↓ ↓↓↓ 5. Propofol (Alkylphenol derivative) 0 ↓↓ ↓↓↓ 0 ↓↓↓ ↓↓↓ ↓↓↓ 6. Dexmedetomidine ↓ ↓ 0 ? ↓↓ ↓↓ ↓↓ Key: B’dil: Bronchodilation CBF: Cerebral blood flow CMRO I : Cerebral oxygen consumption (cerebral metabolic rate of oxygen) HR: Heart rate ICP: Intracranial pressure MAP: Mean arterial pressure Vent: Ventilatory drive Changes: 0 = no effect ↑ = increase ↓ = decrease ? = unknown effect Reference: Morgan's and Mikhail's Anaesthesiology, 7th Edition, Table 9-4",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 3,
    "question": "A 24-year-old male with no significant medical history is scheduled for a minor surgical procedure. The anesthesiologist administers remimazolam for sedation. What is the primary advantage of remimazolam over midazolam in this setting?",
    "options": {
      "A": "More rapid and consistent recovery profile.",
      "B": "Reduced risk of respiratory depression.",
      "C": "Stronger anxiolytic properties.",
      "D": "Longer duration of action."
    },
    "correct_answer": "A",
    "explanation": "Correct answer: A) More rapid and consistent recovery profile. Explanation: Remimazolam has a significant advantage over midazolam due to its rapid and consistent recovery profile . It is an ultra-short-acting benzodiazepine that is metabolized quickly by tissue esterases , resulting in faster clearance from the body. This leads to quicker recovery times. While both remimazolam and midazolam enhance GABA-A receptor activity, Remimazolam's shorter duration of action makes it more predictable in terms of recovery, reducing the chance of prolonged sedation. Effects of benzodiazepines on various systems System Effects of Benzodiazepines CNS Primary Effects : Hypnotic, sedative, anxiolytic, amnesic, anticonvulsant, and muscle-relaxant properties. GABA Modulation : Enhances GABA neurotransmitter effects, leading to inhibition and neuroprotection. Receptor Binding : High-affinity binding to GABA-A receptors, with effects mediated by subunits ( α 1 for sedation, α 2 for anxiolysis). Increases the threshold for seizures Midazolam has a fast onset and shorter duration , while lorazepam has a slower onset but prolonged effects. Respiratory System Causes dose-dependent respiratory depression by reducing muscular tone and flattening the CO2 response curve. Synergistic Effect: Increases respiratory depression when combined with opioids. CVS Modest reduction in arterial blood pressure due to decreased systemic vascular resistance Stable hemodynamics are maintained through homeostatic reflexes. Uses: Premedication: Midazolam : Common for sedation, anxiolysis, and amnesia with minimal respiratory effects in adults. Diazepam : Adults: 5-10 mg (oral/IV) Used for sedation and anxiolysis. Dosage depends on patient factors like age and surgery type. Lorazepam : Adults: 2-4 mg (oral) Primarily for prolonged anxiolysis (e.g., cardiac surgery). Administered 2 hours before surgery. Sedation for Procedures: Midazolam : Rapid onset (2-3 minutes) with titration. Used in minor surgeries and diagnostic procedures. Slower recovery than propofol but preserves respiratory function. Remimazolam : Provides quicker and more consistent recovery than midazolam, especially in endoscopic procedures. Induction and Maintenance of Anesthesia: Midazolam : Adults: 0.1-0.3 mg/kg (IV) Induction within 30-60 seconds. Often combined with opioids for enhanced effects, lower doses required in elderly patients. PONV Prophylaxis: Midazolam : Adults: 0.075 mg/kg (IV) Pediatrics: 0.05 mg/kg (IV) Effective in reducing postoperative nausea and vomiting (PONV), especially when combined with dexamethasone. Side Effects: Respiratory depression , particularly with lorazepam and diazepam. Possible venous irritation (lorazepam, diazepam). Prolonged sedation and amnesia. Flumazenil can reverse residual effects . Reduced risk of respiratory depression (Option B) : Both remimazolam and midazolam have a similar risk of respiratory depression due to",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 4,
    "question": "A 75-year-old male with a history of chronic liver disease presents with severe anxiety and insomnia. The patient has been prescribed benzodiazepines in the past, but his physician is concerned about potential drug accumulation and adverse effects due to impaired liver function. Which of the following benzodiazepines is the most appropriate choice for this patient?",
    "options": {
      "A": "Diazepam",
      "B": "Clonazepam",
      "C": "Lorazepam",
      "D": "Flurazepam"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Lorazepam Explanation: Lorazepam is metabolized directly through glucuronidation (Phase 2) without producing active metabolites, making it a safer option in patients with liver impairment. MOA: Benzodiazepines act by enhancing GABA-mediated inhibition through binding to the GABA-A receptor-Cl I channe l complex. Its site of action lies between α and γ subunits . They increase GABA binding and the frequency of Cl I channel opening , facilitating inhibition without directly mimicking GABA. Different subunits ( α 1, α 2, etc.) of the GABA-A receptor modulate different BZD effects. Effects mediated via α 1 (sedation, amnesia, anticonvulsant) and α 2 (anxiolysis, muscle relaxation) subunits Classification of benzodiazepine Hypnotic Antianxiety Anticonvulsant Muscle relaxant Diazepam Flurazepam Nitrazepam Alprazolam Lorazepam Temazepam Triazolam Diazepam Chlordiazepoxide Oxazepam Lorazepam Alprazolam Clonazepam Clonazepam Clobazam Diazepam Lorazepam Diazepam Metabolism: Class A drugs Here, drugs are metabolized both in phase 1 (by CYP3A4 enzymes in the liver ), and their active metabolites undergo Phase 2 (Glucuronidation) reaction, which is then excreted in the urine. Examples: All benzodiazepines except 4 class B drugs (Lorazepam, Oxazepam, Temazepam, Estazolam). Class B drugs Metabolized by phase 2 or direct glucuronidation . Therefore, no active metabolite, so it is safer to use in elderly and liver failure patients. Examples: Lorazepam Oxazepam Temazepam Estazolam Diazepam (Option A) and Clonazepam (Option B) are metabolized by Phase 1 hepatic enzymes (CYP3A4), producing active metabolites that could accumulate in patients with liver disease. Flurazepam (Option D) also undergoes Phase 1 metabolism and has long-acting active metabolites.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 5,
    "question": "A 60-year-old female with Parkinson’s disease is undergoing total knee replacement surgery. The anesthesiologist is considering giving droperidol as part of the anesthesia plan to prevent PONV. The patient is currently on levodopa-carbidopa therapy and has well-controlled symptoms. What should the anesthesiologist consider before administering droperidol?",
    "options": {
      "A": "It is contraindicated in patients with Parkinson's disease as it may exacerbate motor symptoms.",
      "B": "It will not interfere with Parkinson’s medications and can be safely administered.",
      "C": "It should only be given in higher doses to prevent complications in Parkinson's patients.",
      "D": "It is a first-line antiemetic in Parkinson’s disease and should be used without caution."
    },
    "correct_answer": "A",
    "explanation": "motor symptoms. Correct answer: A) It is contraindicated in patients with Parkinson's disease as it may exacerbate motor symptoms. Explanation: Droperidol is contraindicated in Parkinson’s disease because it blocks dopamine receptors , worsening motor symptoms and counteracting levodopa-carbidopa therapy. Alternatives like ondansetron are safer. Droperidol Mechanism of Action Acts on dopamine , norepinephrine , and serotonin receptors in the CNS. Inhibits GABA receptors and affects neurotransmission. Antiemetic Effect Blocks GABA receptors in the chemoreceptor trigger zone. Pharmacokinetics Metabolized in the liver . Two-compartment plasma decay model. CNS Effects Causes cerebral vasoconstriction (40% reduction in blood flow). Minimal impact on cerebral metabolic rate. Respiratory Effects Minimal respiratory impact Slight reduction in the respiratory rate at certain doses. Cardiovascular Effects QT prolongation , risk of torsades de pointes (dose-dependent). Causes v asodilation and decreased blood pressure due to α -adrenergic blockade. Perioperative Use Primarily used as an antiemetic (10-20 µ g/kg, 0.6-1.25 mg for a 70 kg individual). It has equal antiemetic efficacy with similar side effects, but more cost-effective than ondansetron Combination with serotonin antagonists enhances efficacy. Other Uses Effective in treating pruritus from opioids. Epidural use reduces nausea but increases sedation (not approved for this route). It will not interfere with Parkinson’s medications and can be safely administered (Option B) : Droperidol can interfere with dopaminergic medications, worsening Parkinson's symptoms. It should only be given in higher doses to prevent complications in Parkinson's patients (Option C) : Higher doses would increase the risk of exacerbating symptoms rather than preventing complications. It is a first-line antiemetic in Parkinson’s disease and should be used without caution (Option D) : Droperidol is not a first-line antiemetic for Parkinson’s patients due to its potential to worsen motor symptoms; safer alternatives exist. Reference: Miller's Anesthesia, 9th Edition, Pg no. 675, 676",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 6,
    "question": "A 40-year-old male with hypertension undergoes fiberoptic intubation. After receiving a loading dose of dexmedetomidine for sedation, his heart rate drops to 45 bpm, and his blood pressure increases slightly. What explains these changes?",
    "options": {
      "A": "Initial increase in BP followed by reflex bradycardia",
      "B": "Direct SA node depression causing bradycardia",
      "C": "Decrease in BP and HR due to alpha-1 agonism",
      "D": "Bradycardia from beta-blocker-like activity"
    },
    "correct_answer": "A",
    "explanation": "Correct answer: A) Initial increase in BP followed by reflex bradycardia Explanation: Dexmedetomidine is an α 2-adrenergic agonist that causes a transient increase in blood pressure due to vasoconstriction , followed by reflex bradycardia. This explains the hemodynamic changes seen in the patient. The bradycardia is not due to a direct depressant effect on the heart and the drug does not have beta-blocker-like activity. Dexmedetomidine is an α 2-adrenergic agonist , similar to clonidine , primarily used for sedation, anxiolysis, and analgesia. It is often combined with other agents to produce anesthesia and is used to prolong regional blocks when combined with local anesthetics. Dexmedetomidine Uses Procedural sedation (e.g., awake craniotomies, fiberoptic intubation) ICU sedation (e.g., ventilated patients recovering from cardiac surgery) Supplement to general anesthesia (to reduce intraoperative opioid needs or emergence delirium, especially in children) Treatment for alcohol withdrawal and cocaine intoxication side effects. Pharmacokinetics Absorption: Approved for IV injection; Initial loading dose: 1 mcg/kg over 5-10 minutes; Maintenance infusion: 0.2-1.4 mcg/kg/h. For premedication, nasal (1-2 mcg/kg) or oral (2.5-4 mcg/kg) routes are used in children. Distribution: Rapid redistribution (minutes); elimination half-life <3 hours. Biotransformation : Metabolized in the liver via CYP450 system and glucuronidation ; to be used cautiously in patients with severe liver disease. Excretion : Metabolites are primarily excreted in the urine. Cardiovascular May cause transient increase in blood pressure and reflex bradycardia . Intraoperative use results in dose-dependent reduction of mean arterial pressure and heart rate. Can cause hypertension, hypotension, or bradycardia based on dose. Avoid rapid bolus to minimize side effects. Respiratory No respiratory depression; ideal for sedation during mechanical ventilation weaning or awake tracheal intubations. CNS Dose-dependent sedation; opioid-sparing; reduces the need for general anesthetics; preferred for awake craniotomies. Drug Interactions Dexmedetomidine may cause exaggerated bradycardia in patients on beta-blockers. It has additive effects with sedative-hypnotic agents. Direct SA node depression causing bradycardia (Option B) :The bradycardia is not a direct effect on the SA node but a reflex response to vasoconstriction and increased blood pressure. Decrease in BP and HR due to alpha-1 agonism (Option C) : Dexmedetomidine is an α 2-agonist, not α 1, and initially increases blood pressure, followed by reflex bradycardia. Bradycardia from beta-blocker-like activity (Option D) : Dexmedetomidine does not act on beta receptors but reduces sympathetic outflow through α 2-receptor activation, leading to bradycardia.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 7,
    "question": "During induction of anesthesia, a patient receiving etomidate shows an increase in blood pressure and heart rate. How does etomidate primarily achieve cardiovascular stability? α 2-adrenoceptor activation",
    "options": {
      "A": "By activating the sympathetic nervous system",
      "B": "By affecting the baroreceptor function",
      "C": "Through",
      "D": "By enhancing myocardial oxygen demand"
    },
    "correct_answer": "C",
    "explanation": "α 2-adrenoceptor activation Correct answer: C) Through α 2-adrenoceptor activation Explanation: Etomidate activates α 2-adrenoceptors , which increases blood pressure and contributes to cardiovascular stability by preventing excessive sympathetic stimulation . Effects of Etomidate on the Cardiovascular System Hemodynamic Stability : Etomidate maintains hemodynamic stability by not affecting the sympathetic nervous system or baroreceptor function. (Option A & B) Blood Pressure Effects : Activation of α 2-adrenoceptors leads to increased blood pressure, contributing to cardiovascular stability during anesthesia induction. Comparison with Other Anesthetics : Minimal cardiovascular effects distinguish etomidate from other rapid-onset anesthetics, making it suitable for patients with heart conditions. Patient Suitability : Effective for patients with valvular or ischemic heart disease and those with poor cardiac function during non cardiac surgeries. Hemodynamic Responses : Etomidate may lead to more hypertension and tachycardia compared to propofol during induction. Oxygen Supply and Demand : Maintains a stable myocardial oxygen supply-to-demand ratio . (Option D) Analgesic Considerations : Lacks analgesic properties; should be combined with opioids to manage hemodynamic changes during laryngoscopy and intubation. Advantages in Hemorrhagic Shock : In cases of hemorrhagic shock, etomidate's pharmacodynamics and pharmacokinetics remain largely unchanged, making it advantageous for induction. Reference: Miller's Anesthesia, 9th Edition, Pg no. 668",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 8,
    "question": "A 47-year-old male patient with a history of adrenal carcinoma and hypercortisolemia is scheduled for a surgical procedure. The anesthesiology team is evaluating induction agents that suppress adrenal function. Which of the following agents can be used in this patient?",
    "options": {
      "A": "Propofol",
      "B": "Ketamine",
      "C": "Etomidate",
      "D": "Thiopental"
    },
    "correct_answer": "C",
    "explanation": "Correct answer: C) Etomidate Explanation: Etomidate inhibits 11 β -hydroxylase in the adrenal cortex, which is essential for cortisol synthesis. Therefore, it effectively decreases cortisol levels , making it suitable for patients with hypercortisolemia. Etomidate Mechanisms of Action Depresses the reticular activating system. Mimics GABA's inhibitory effects by binding to GABA A receptors , particularly the R(+) isomer. Structure-Activity Relationships Contains a carboxylated imidazole The imidazole ring provides water solubility in acidic solutions and lipid solubility at physiological pH. Pharmacokinetics Absorption : Only available for IV use , primarily for induction of anesthesia. Distribution: Rapid onset due to high lipid solubility; redistribution lowers plasma concentration post-awakening. Biotransformation: Rapidly hydrolyzed by hepatic microsomal enzymes to an inactive metabolite . Excretion : Hydrolysis products are excreted in urine. CNS Effects Induces hypnosis via GABA A receptor modulation (0.3 mg/kg). Reduces cerebral blood flow and cerebral metabolic rate of oxygen without affecting MAP. Decreases intracranial pressure (ICP) by 50% in patients with increased ICP. Respiratory Effects Minimal impact on ventilation; does not release histamine. May cause brief hyperventilation and mild apnea, with slight PaCO2 increase. Cardiovascular Effects Minimal impact on sympathetic tone and myocardial function. It may cause mild arterial blood pressure decline without significant changes in cardiac output or contractility. Endocrine Effects Inhibits 11 β -hydroxylase , reducing cortisol and mineralocorticoid production, leading to adrenal suppression. Clinical Uses Induction dose : 0.2 to 0.6 mg/kg IV. Suitable for patients with cardiovascular issues and Increased ICP Effective in treating endogenous hypercortisolemia . Side Effects Associated with postoperative nausea and vomiting (PONV), Pain on injection, Myoclonic movements , and Hiccups. Pre-medication with lidocaine can reduce pain ; myoclonus can be lowered with midazolam or magnesium. Novel Derivatives Methoxycarbonyl etomidate (MOC) : Rapidly metabolized, minimal adrenal suppression, similar hypnotic potency. Carboetomidate: Reduces adrenal suppression potency, maintains hypnotic effects, minimal hemodynamic changes. Methoxycarbonyl-carboetomidate: Combines benefits of etomidate without adrenal suppression, longer action duration. CPMM and DMMM: Newer derivatives showing higher potency and rapid recovery post-infusion, promising in animal studies. Propofol (Option A) , Ketamine (Option B) , and Thiopental (Option C) do not have specific effects on adrenal hormone synthesis and are not known to inhibit",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 9,
    "question": "A 60-year-old female patient with a history of chronic migraines and increased intracranial pressure due to a recent stroke is scheduled for a minor procedure requiring anesthesia. Which anesthetic agent should be avoided in this patient?",
    "options": {
      "A": "Thiopentone",
      "B": "Midazolam",
      "C": "Ketamine",
      "D": "Sevoflurane"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Ketamine Explanation: Ketamine causes increased cerebral blood flow , which can lead to elevated intracranial pressure . This is especially problematic in patients with conditions such as stroke, where ICP management is crucial to prevent further neurological damage. Systemic effects, uses and C/I of Ketamine System Effects CNS It is associated with increased cerebral oxygen consumption , blood flow , and intracranial pressure. It causes functional disorganization by selectively depressing neuronal activity in the cortex and thalamus while stimulating the limbic system, leading to disrupted pain perception and emotional processing. Emergence reactions , including vivid dreams, hallucinations, and illusion, occurs due to depression of auditory and visual relay nuclei, It provides analgesia , amnesia , and unconsciousness , making it a \"complete\" anesthetic. CVS Increases arterial blood pressure , heart rate , and cardiac output, particularly after rapid bolus injections. Stimulates the sympathetic nervous system and inhibits norepinephrine reuptake, increasing pulmonary artery pressure and myocardial workload. Direct myocardial depression can occur with sympathetic blockade or catecholamine depletion. Respiratory Racemic ketamine is a strong bronchodilator , useful in asthmatic patients . Upper airway reflexes remain intact. Excessive salivation can be managed with anticholinergics (e.g., glycopyrrolate). Muscle It increases muscle tone Uses: Induction & Maintenance : Effective for unstable cardiovascular patients (e.g., hypovolemia, trauma, sepsis). Combines with propofol or midazolam to reduce side effects (tachycardia, hypertension) and stabilize hemodynamics. Useful in cardiac conditions ( congenital heart disease(Right to Left shunt) , septic shock , restrictive pericarditis). IV induction agent of choice in bronchial asthma It has prothyroid property: IV induction agent of choice myxedema coma patients Preventive Analgesia : Small doses (20-60 mg) reduce postoperative pain and opioid consumption. Used for chronic pain (e.g., cancer pain, neuropathic pain, fibromyalgia) Procedures & Emergency Use: Common in emergency departments and short painful procedures . Contraindications: Increased ICP (Head injury, neuro surgery) Epilepsy Ischemic heart disease, vascular aneurysms Open eye injuries, and Schizophrenia. Thiopentone (Option A) : It is the IV induction agent of choice in increased ICP. Midazolam (Option B) : A benzodiazepine that provides sedation and amnesia without significantly affecting ICP. Sevoflurane (Option D) : An inhalational anesthetic that is typically well-tolerated and does not have a direct effect on increasing ICP, making it a safer option in this scenario. Reference: Miller's Anesthesia, 9th Edition, Pg no. 664-666",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 10,
    "question": "Which of the following statements about ketamine is not true in the context of its pharmacological properties and clinical use? anesthesia.",
    "options": {
      "A": "It primarily acts as an antagonist at N-methyl-D-aspartate (NMDA) receptors, inducing dissociative",
      "B": "The S(+) isomer is less potent as an analgesic than the R(-) isomer.",
      "C": "It has high lipid solubility, allowing for rapid brain uptake.",
      "D": "It is metabolized in the liver, and its elimination half-life is approximately 2 hours ."
    },
    "correct_answer": "B",
    "explanation": "Correct answer: B) The S(+) isomer is less potent as an analgesic compared to the R(-) isomer. Action Inhibits N-methyl-D-aspartate receptor (NMDA) receptors (Option A) , affecting the CNS. Induces dissociative anesthesia , making patients appear conscious but unable to process sensory input. Influences endogenous analgesic pathways. It is an analog of phencyclidine. It is a racemic mixture of R(-) ketamine and S(+) ketamine . Molecular weight: 238 kD High lipid solubility (5 to 10 times that of thiopental) (Option C) and low protein binding (12%). S(+) isomer (Ketanest) is 3 to 4 times more potent as an analgesic with fewer psychomimetic effects. S(+) ketamine causes cognitive impairment and reduced reaction time despite its analgesic properties. S(+) isomer has higher NMDA affinity and potency. Pharmacokinetics Absorption: Primarily given intravenously or intramuscularly; peak levels in 10-15 minutes. Distribution: Highly lipid-soluble; rapid brain uptake with a 10-15 minute distribution half-life. Biotransformation: Metabolized in the liver to active metabolites; tolerance develops with repeated use. (Option D) Excretion: Renally excreted ; elimination half-life of about 2 hours. Reference: Miller's Anesthesia, 9th Edition, Pg no. 661, 662",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 11,
    "question": "A 12-year-old child is scheduled for surgery and has a history of asthma. Which preoperative medication should be considered to reduce airway secretions and minimize the risk of bronchospasm?",
    "options": {
      "A": "Midazolam",
      "B": "Glycopyrrolate",
      "C": "Ondansetron",
      "D": "Fentanyl"
    },
    "correct_answer": "B",
    "explanation": "Correct answer: B) Glycopyrrolate Explanation: Glycopyrrolate is an anticholinergic medication that reduces airway secretions and minimizes bronchospasm by blocking acetylcholine at muscarinic receptors . It is especially important for asthmatic patients at risk of increased secretions and bronchoconstriction. Class of Medication Common Drugs Use Anxiolytics Midazolam , (Option A) Lorazepam , Diazepam, Ketamine (pediatrics) Preoperative anxiety reduction Midazolam is preferred for adults due to short half-life and potency. Avoid premedication in pediatric patients < 6 months. Antiemetics Ondansetron, (Option C), Dexamethasone, Metoclopramide , Droperidol, Transdermal Scopolamine Prevention of postoperative nausea and vomiting (PONV) Aspiration Prophylaxis H2-Receptor Blockers (Ranitidine), Proton Pump Inhibitors (PPIs) Reduce risk of pulmonary aspiration Effective in reducing gastric acidity and volume. Recommended for patients with conditions like GERD, obesity, or non-fasted status Antibiotics Infection prevention at surgical sites Anticholinergic Glycopyrrolate To reduce secretions Analgesics Fentanyl (Option D) , NSAIDs (Celecoxib) Pain management, opioid dependency Fentanyl is preferred for rapid clearance and potency. - NSAIDs may be given preoperatively to reduce pain. Reference: Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pg no. 516, 555 Basic Anesthesia Review Edited by Alaa Abd-Elsayed pg no. 235, 236, 237",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 12,
    "question": "A 40-year-old man is given propofol for anesthesia. Which of the following statements regarding the effects of propofol is false?",
    "options": {
      "A": "Inhibits ventilatory drive by depressing hypercarbic and hypoxic responses",
      "B": "Causes profound respiratory depression leading to apnea",
      "C": "It provides antipruritic and antiemetic effects",
      "D": "Increases the cerebral perfusion rate and cerebral blood volume"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Increases the cerebral perfusion rate and cerebral blood volume Explanation: Propofol is an anesthetic agent that causes a reduction in cerebral blood volume, thus reducing the cerebral perfusion rate . Cardiovascular Effects: Hypotension : decreases arterial blood pressure by reducing systemic vascular resistance, preload, and cardiac contractility. Reflex Bradycardia: may occur due to decreased cardiac filling (Bezold–Jarisch reflex). Impaired Baroreflex: markedly impairs normal response to hypotension. Myocardial Oxygen Supply/Demand Mismatch: increases coronary sinus lactate production in some patients. Respiratory Effects: Respiratory Depression: Profound depression, often causing apnea after induction doses. (Option B) Inhibition of Ventilatory Drive: Depresses hypoxic and hypercarbic responses, necessitating qualified personnel for administration. (Option A) Upper Airway Reflex Depression: Exceeds that of thiopental, facilitating procedures like intubation without neuromuscular blockade. Cerebral Effects: Decreased Cerebral Blood Flow: reduces cerebral blood volume and intracranial pressure. Critical CPP Reduction : Can cause a critical reduction in cerebral perfusion pressure (<50 mm Hg) in patients with elevated intracranial pressure. Cerebral Protection: comparable to thiopental during experimental focal ischemia. Antipruritic and antiemetic properties: Provides unique benefits for outpatient anesthesia. (Option C) Anticonvulsant Effects: Can terminate status epilepticus; safe for epileptic patients. Decreased intraocular pressure: Beneficial in ocular surgeries. Other effects: Excitatory Phenomena: May cause muscle twitching, spontaneous movement, or hiccupping during induction. Low Addiction Potential: Uncommon for physical dependence or addiction, but inappropriate use has led to fatalities.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 13,
    "question": "A 4-year-old patient in the ICU requires sedation while on mechanical ventilation. The medical team considers using Propofol. Which of the following is a key pharmacokinetic feature of Propofol that supports its use in this scenario?",
    "options": {
      "A": "Long onset of action.",
      "B": "Minimal hangover effects after recovery.",
      "C": "High risk of prolonged sedation.",
      "D": "Primarily excreted via feces."
    },
    "correct_answer": "B",
    "explanation": "Correct answer: B) Minimal hangover effects after recovery. Explanation: Propofol is known for its rapid onset and quick recovery , with minimal residual sedation effects after administration. This characteristic is particularly beneficial for patients in the ICU, facilitating timely assessment and care. Propofol Appearance: Clear, white emulsion, available as a 1% aqueous preparation (10 mg/mL) for IV administration. Composition of Propofol Chemical structure: phenol ring with two isopropyl groups . Solubility: not water-soluble; available as a 1% aqueous oil-in-water emulsion. Emulsion ingredients: contains soybean oil, glycerol, and egg lecithin. Storage requirements: this should be administered within 6 hours of opening due to the risk of bacterial contamination, and a strict sterile technique is required 0.005% disodium edetate or 0.025% sodium metabisulfite helps slow bacterial growth. Pharmacokinetics of Propofol Administration Route: only available for intravenous use. Onset of Action: rapid onset (Option A) ; effects typically observed for 2–8 minutes after administration. Distribution: short initial distribution half-life leads to quick awakening . (Option C) Recovery: faster recovery compared to other anesthetics, minimal \"hangover\" effects . Biotransformation: high clearance exceeding hepatic blood flow (possible extrahepatic metabolism); metabolism occurs in the liver, resulting in inactive metabolites. Excretion : Primarily eliminated via urine; unaffected by end-stage kidney disease . (Option D) Fospropofol Appearance: water-soluble prodrug of propofol. It is metabolized to propofol, phosphate, and formaldehyde in vivo. Studies showed that it produced more complete amnesia and better conscious sedation (for endoscopy). Pharmacokinetics: Slower onset and recovery than propofol; not favoured over propofol for anesthesia. Composition: similar to propofol but formulated as a prodrug for intravenous administration. Clinical Uses Induction of Anesthesia : Suitable for patients aged 3 years and older ; can be used in younger children with IV access. Maintenance of Anesthesia : For patients over 2 months old. Sedation : During monitored anesthesia for various procedures. For intubated, mechanically ventilated ICU patients. Off-Label Uses Management of refractory status epilepticus in both children and adults. Treatment of refractory postoperative nausea and vomiting.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 14,
    "question": "A patient is sedated using methohexital for surgery. What is false about methohexital?",
    "options": {
      "A": "It belongs to the barbiturates group of drugs",
      "B": "Acts by binding to GABA (A) receptors",
      "C": "Can be used to briefly control grand-mal seizures",
      "D": "Produces muscle relaxation and analgesia"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Produces muscle relaxation and analgesia Explanation: Methohexital, which is a barbiturate, does not cause muscle relaxation and does not affect pain perception . It also causes involuntary skeletal muscle contractions. Methohexital Type : A short-acting barbiturate used for induction of anesthesia. (Option A) Use : commonly administered for procedural sedation and electroconvulsive therapy (ECT). Mechanism of Action GABA(A) Receptor (Option B) : Binds to GABA(A) receptors, enhancing GABA’s effects by increasing the duration of chloride-specific ion channel opening. CNS Effects : Depresses the reticular activating system, leading to decreased consciousness. Pharmacokinetics Absorption : typically administered intravenously; can also be given rectally in children. Distribution : rapidly crosses the blood-brain barrier due to high lipid solubility; effects seen within 30 seconds. Redistribution : duration of action is primarily determined by redistribution rather than metabolism; typically, plasma levels drop to 10% of peak within 20-30 minutes. Biotransformation : primarily metabolized by the liver to inactive, water-soluble metabolites; clears faster than thiopental. Excretion : excreted mainly in feces; renal excretion is limited. Clinical Effects CNS depression : induces sedation to unconsciousness based on dosage; can briefly control grand mal seizures (50-100 mg IV). (Option C) Taste sensation : some patients report a garlic or onion-like taste during induction. No pain impairment : does not impair pain perception. Does not cause muscle relaxation but may cause involuntary muscle contractions . Effects on Organ Systems Cardiovascular : can cause hypotension and tachycardia; effects vary based on administration rate and patient condition. Respiratory : may depress respiratory function; apnea can occur following induction. Cerebral : reduces cerebral blood flow and intracranial pressure; decreases oxygen consumption. Renal: renal blood flow and GFR are reduced. Hepatic: hepatic blood flow is reduced Drug Interactions CNS Depressants : effects potentiated by ethanol, opioids, and antihistamines. Protein Binding : drugs that occupy protein-binding sites can displace methohexital, increasing free drug levels. Considerations Dosing : requires careful dosing, particularly in older patients or those with compromised cardiovascular status. Adverse Reactions : sulfonamides reduce the effect of barbiturates, ethanol, opioids, antihistamines and other CNS depressants increase the sedative effect of barbiturates. Reference: Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pg: 320-326.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 15,
    "question": "A 45-year-old male is undergoing an elective surgical procedure Thiopental sodium is administered for induction. Shortly after the injection, the anesthesiologist notices that the patient’s arm is becoming pale and cold, indicating possible intra-arterial injection of the anesthetic.What is the appropriate sequence of steps to manage this situation? block.",
    "options": {
      "A": "Administer 5 ml of 2% procaine or lignocaine into the affected artery, then consider a brachial plexus",
      "B": "Perform an early arteriotomy, then start full heparinization.",
      "C": "Administer 5 ml of 2% procaine or lignocaine, then provide deep anesthesia.",
      "D": "Start full heparinization immediately, then assess for the need for an arteriotomy."
    },
    "correct_answer": "A",
    "explanation": "consider a brachial plexus block. Correct Answer: A) Administer 5 ml of 2% procaine or lignocaine into the affected artery, then consider a brachial plexus block. Explanation: This option starts with the immediate administration of a local anesthetic to address the intra-arterial injection, which is crucial to prevent tissue damage. Considering a brachial plexus block afterward may provide additional pain control. Complications of thiopental sodium: Intra arterial injection: Induces severe inflammatory and necrotic reaction, threatening limb survival. Treatment: Inject 5 ml of 2% procaine or lignocaine into the affected artery , ideally through the existing needle . General Anesthesia: To decrease sympathetic tone in the arm. Avoid deep anesthesia that could lower blood pressure and cardiac output (Option C) Brachial plexus block or stellate ganglion block is considered an alternative. Anticoagulation: Full heparinization is recommended if surgery is not performed. Surgical Treatment: Early arteriotomy may be considered. Prevention: Use a more dilute solution of thiopental sodium (e.g., 2.5% concentration) to reduce the risk of complications. Laryngospasm: Occur if respiratory secretions or other irritants are present or during light anesthesia intubation. Prevention: Atropine premedication and succinylcholine administration after thiopentone can help prevent it. Postoperative Restlessness: Postoperative pain can cause restlessness. Therefore, adequate analgesia should be provided. Contraindications of Thiopental Sodium: Respiratory Obstruction or Inadequate Airway: Worsen respiratory depression. Severe Cardiovascular Instability or Shock Status Asthmaticus Porphyria: Precipitate or worsen acute intermittent porphyria or other forms of the disorder. Lack of Proper Equipment: Without proper IV instrumentation and airway management equipment (e.g., artificial ventilation), thiopental sodium should not be administered. The immediate need is to manage the local tissue effects first before considering surgical intervention (Option B). Starting heparinization is not the first step; the immediate priority is to address the local complication before considering systemic treatment options (Option D). Reference: Miller’s Anesthesia, 9th edition, Pg: 653 KD Tripathi Essentials of Medical Pharmacology, 8th edition, Pg: 409 Goodman & Gilman’s Pharmacology, 14th edition, Pg: 476 https://pdf.sciencedirectassets.com/318044/1-s",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 16,
    "question": "A 65-year-old patient undergoing neurosurgery is administered thiopental sodium as an induction agent. Which of the following statements regarding its effects is true?",
    "options": {
      "A": "It increases cerebral blood flow and oxygen consumption.",
      "B": "It causes peripheral vasodilation and increased heart rate.",
      "C": "It enhances respiratory rate and tidal volume during awakening.",
      "D": "It enhances hepatic blood flow and reduces the metabolism of other drugs."
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) It causes peripheral vasodilation and increased heart rate. Explanation: Effect on Cardiovascular System: Causes peripheral vasodilation , leading to the pooling of blood in the venous system, which reduces cardiac output. Increases heart rate due to a baroreceptor-mediated sympathetic reflex compensating for reduced cardiac output and blood pressure. Contraindication: Coronary artery disease patients: Increase in heart rate induced by thiopental increases myocardial oxygen consumption, which can be harmful. Patients at risk of ventricular dysrhythmias or with prolonged QT intervals. Hypovolemic patients: It reduces cardiac output and arterial blood pressure. Effect on Central Nervous System: Used for narcoanalysis. Induction of anesthesia in neurosurgery. Cerebral Vasoconstriction: Barbiturates constrict cerebral vasculature, reducing cerebral blood flow (CBF), cerebral blood volume, and intracranial pressure (ICP). ICP decreases more than arterial blood pressure, often leading to increased cerebral perfusion pressure (CPP). Reduction in Cerebral Oxygen Consumption: Reduce cerebral oxygen consumption by up to 50% without causing harm due to the parallel decrease in CBF. (Option A) Potential Neuroprotection: Protect the brain from focal ischemia (e.g., cerebral embolism). Dose-Dependent CNS Depression: Range from mild sedation to unconsciousness, depending on the dose. Sensory Effects: Some patients experience a taste sensation (e.g., garlic, onions, or pizza) during thiopental induction. Pain Perception: Not impaired Muscle Effects: Do not cause muscle relaxation and may induce involuntary skeletal muscle contractions. Anticonvulsant Effects: Small doses of thiopental (50-100 mg IV) can rapidly control grand mal seizures briefly. Effects on Respiratory System: Causes respiratory depression. Double Apnea Pattern: An initial brief apnea upon administration, followed by a few breaths with adequate tidal volume, and then a more prolonged apnea (about 25 seconds). During awakening, both tidal volume and respiratory rate are reduced. (Option C) Do not fully suppress airway reflexes during laryngoscopy and intubation, making airway instrumentation potentially problematic: In asthmatic patients, airway manipulation can induce bronchospasm. Laryngospasm may occur in lightly anesthetized patients. Effect on Kidney: Reduce renal blood flow and GFR in proportion to a fall in BP. Effect on Liver: Cause a reduction in hepatic blood flow. Chronic exposure induces hepatic enzymes, leading to an increased rate of drug metabolism. (Option D) Precipitate acute intermittent porphyria or variegate porphyria in susceptible individuals.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 17,
    "question": "A 65-year-old patient is scheduled for elective surgery requiring general anesthesia. The anesthesiologist decides to use thiopental sodium as an induction agent. Which of the following statements is true about thiopental sodium?",
    "options": {
      "A": "It has a long duration of action due to extensive renal metabolism.",
      "B": "Its rapid onset is primarily due to its high potency and redistribution.",
      "C": "It appears as a white milky liquid.",
      "D": "Its elimination half-life is approximately 1 hour."
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Its rapid onset is primarily due to its high potency and redistribution. allowing for quick redistribution from the bloodstream to the brain. Thiopentone Sodium: Use: Intravenous induction agent. Prepared concentration: 2.5% solution Form : Yellowish-white crystalline powder or pale greenish hygroscopic powder (Option C) Odor: Garlic-like odor. Formulation : Thiopental sodium for injection is a sterile mixture of thiopental sodium and anhydrous sodium carbonate (buffer). Should not be reconstituted with lactated Ringer’s solution or mixed with acidic solutions, as this reduces alkalinity and may cause precipitation of the drug as free acid. pH: 11 Melting Point : The free acid (thiopental) melts at 158–160°C. Solubility : Water : Soluble in 1.5 parts of water at 20°C. Alcohol : Partially soluble. Insoluble : Practically insoluble in ether, benzene, and petroleum ether. Pharmacokinetics: Higher potency. Rapid onset and short duration of action. Dose: 3-6 mg/kg Duration of onset: 15-20 seconds Duration of action: 6-10 minutes Elimination T1/2: 12 hours (Option D) Exhibits first-order kinetics. Unique property: Duration of induction dose is determined by redistribution. Metabolism and excretion site: Liver (Option A) Reference: Miller’s Anesthesia, 9th edition, Pg: 648,649 Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pg: 165-169 KD Tripathi Essentials of Medical Pharmacology, 8th edition, Pg: 408 https://www.sciencedirect.com/science/article/abs/pii/S0099542808604013 https://www.sciencedirect.com/topics/pharmacology-toxicology-and-pharmaceutical-science/sodium-thiopental",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 18,
    "question": "Which of the following statements is correct regarding intravenous anesthetic drugs?",
    "options": {
      "A": "Barbiturates primarily block NMDA receptors to induce anesthesia.",
      "B": "Barbiturates can be safely mixed with lactated Ringer’s solution.",
      "C": "Thiopental is mixed with anhydrous sodium carbonate.",
      "D": "Ketamine primarily acts on GABA-A inhibitory receptors."
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C)Thiopental is mixed with anhydrous sodium carbonate. Explanation: Barbiturates ( thiopental , methohexital, pentobarbital) are formulated as sodium salts, mixed with 6% by weight anhydrous sodium carbonate (increases alkalinity and therefore increases shelf life) Reconstituted with water, 5% glucose, or normal saline to produce: 2.5% solution of thiopental 2% solution of thiamylal 1% solution of methohexita l Barbiturates should not be reconstituted with lactated Ringer’s solution or mixed with acidic solutions, as this reduces alkalinity and may cause precipitation of the drug as free acid. (Option B) Classification of Intravenous Anesthetics: Feature Propofol Thiopentone Ketamine Etomidate Benzodiazepine Color Emulsion, milky white Sodium salts Clear aqueous solution Clear solution Midazolam-clear aqueous solution Concentration 1%, 2% soln. Medium, long chain triglycerides Yellow amorphous powder 500mg, 1g 1%, 2%, 10% solution 2mg/ml in 35% propylene glycol Lipid solubility Only in emulsion form Highly soluble Very Lipid soluble Acidic PH lipid soluble Lipid soluble midazolam Water solubility Insoluble Readily soluble Soluble Poorly water soluble Water soluble pH 4.5-6.4 10.5 3.5-5.5 6.9 3.5 Pka 11 7.6 7.5 4.2 6.1 Chirality Non chiral Racemic Racemic Single isomer R+ Barbiturates primarily block NMDA receptors to induce anesthesia (Option A): While NMDA receptor antagonism can play a role in some anesthetics (like ketamine), barbiturates mainly enhance GABA-A receptor activity. Ketamine primarily acts on GABA-A inhibitory receptors (Option D): Ketamine primarily acts as an NMDA receptor antagonist, not GABA-A inhibitors. Reference: Miller’s Anesthesia, 9th edition, Pg: 648,649 Morgan and Mikhail’s Clinical Anesthesiology, 7th edition, Pg: 165-179",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 19,
    "question": "A 38-year-old male is being taken up for emergency surgery following a trauma. The anesthesiologist decides to give medications as prophylaxis for aspiration. Which of the following drugs is not used as a prophylactic agent?",
    "options": {
      "A": "Bicitra",
      "B": "Metoclopramide",
      "C": "H2-antagonists",
      "D": "Rocuronium"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Rocuronium Explanation: Rocuronium is an intermediate-acting nondepolarizing neuromuscular blocking drug that acts as a muscle relaxant that helps in faster and more efficient intubation. Any patient taken up for an emergency surgery or trauma is considered to have a “full stomach”. If the patient has consumed food and it is a case of elective surgery, it must be postponed. But if it cannot be delayed, regional or local anesthesia is preferred. When these methods are impractical, the airway must be secured and precautions are taken to prevent aspiration as explained below. Risk Factors for Aspiration: Full stomach Symptomatic gastroesophageal reflux disease (GERD) Hiatal hernia Presence of a nasogastric tube Morbid obesity Diabetic gastroparesis Pregnancy Aspiration Prophylaxis: Goal: Decrease gastric volume and increase gastric fluid pH. Commonly used agents: Nonparticulate antacids (e.g., Bicitra) (Option A) Promotility drugs (e.g., metoclopramide) (Option B) H2-receptor antagonists (Option C) Can be used alone or in combination. Anesthetic Management and Rapid Sequence Induction (RSI) Preoxygenation Always pre-oxygenate patients before induction. Patients with lung disease require 3 to 5 minutes of preoxygenation. Preparation Have a variety of laryngoscope blades, video laryngoscopes, intubation bougies, and endotracheal tubes ready and immediately available. Cricoid Pressure (Sellick Maneuver) An assistant applies firm pressure over the cricoid cartilage before induction to compress the esophagus and reduce the risk of aspiration. Excessive pressure during active regurgitation can cause esophageal rupture; the effectiveness of this maneuver remains uncertain. Induction Agent Administration Administer a bolus dose of propofol ; modify the dose if cardiovascular instability is present. Alternative rapid-acting agents include etomidate, ketamine, and methohexital. Neuromuscular Blockade Administer succinylcholine (1.5 mg/kg) or rocuronium (0.9–1.2 mg/kg) immediately after the induction dose, even if the patient is still conscious Ventilation Do not use bag-mask ventilation to avoid inflating the stomach and increasing aspiration risk. After loss of muscle response, rapidly intubate the patient while maintaining cricoid pressure until the cuff is inflated and the tube position is confirmed. Gentle ventilation may be allowed if cricoid pressure is maintained. Difficult Intubation If intubation is difficult, continue cricoid pressure and gently ventilate with oxygen until another attempt can be made. If unsuccessful, allow spontaneous ventilation and consider awake intubation. Sugammadex can be used to reverse rocuronium-induced muscle relaxation. Postoperative Management Keep the patient intubated until airway reflexes and consciousness return. Indications for Tracheal Intubation : Full stomach or increased risk for aspiration of gastric secretions or blood. Critically ill patients.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  },
  {
    "q_no": 20,
    "question": "A 35-year-old woman undergoes a laparoscopic hysterectomy under general anesthesia. After 5 minutes of preoxygenation with 100% oxygen, anesthesia is induced and maintained. What is the main purpose of preoxygenation in this case?",
    "options": {
      "A": "To increase CO2 retention",
      "B": "To ensure the patient's lungs are fully saturated with oxygen before induction",
      "C": "To reduce anesthesia depth requirement",
      "D": "To reduce respiratory rate during anesthesia"
    },
    "correct_answer": "B",
    "explanation": "Correct answer: B) To ensure the patient's lungs are fully saturated with oxygen before induction induction, which increases lung and blood oxygen levels. This process creates an oxygen reserve that is crucial during the apnea period that follows induction and intubation, helping to prevent hypoxemia (low blood oxygen levels) during this critical time. Phases of general anesthesia Phase Procedure Details Preoxygenation Administer 100% O2 for 3 to 5 minutes Can be done using a bag & mask or normal oxygen mask. Induction Induction to render the patient unconscious IV induction is used in 99% of patients. Inhalation induction is commonly used in children (M/C agent: Sevoflurane ). Muscle relaxation Short-acting muscle relaxants (e.g., Scoline) should be used before intubation. Long-acting muscle relaxants are administered after intubation. Intubation Intubation is performed after muscle relaxation Maintenance Maintain unconsciousness Use of inhalation agents to keep the patient unconscious. Maintain muscle relaxation Use of long-acting muscle relaxants to maintain muscle relaxation Reversal Phase Restore consciousness and contract muscles Stop inhalational agents to make the patient conscious. Reversal agents (e.g., Neostigmine, Sugammadex, Pyridostigmine, Edrophonium) are used against muscle relaxants. Calabadion 2 with 82 times affinity of sugammadex Reverse muscle relaxation L-cysteine for gantacurium reversal. Glycopyrrolate or Atropine is combined with reversal agents to prevent salivation and bradycardia. Extubation Perform extubation after confirming signs of adequate reversal Signs of adequate reversal Sustained head lift >5 seconds Moving all limbs. Obeying commands. TOF ratio > 0.9 (overall best sign). Increasing CO2 retention is not the goal of preoxygenation (Option A). In fact, it may help to improve gas exchange. Preoxygenation does not affect the depth of anesthesia required (Option C) . It focuses on increasing oxygen reserves. Preoxygenation does not directly influence the respiratory rate during anesthesia (Option D). Reference: https://www.ucl.ac.uk/anaesthesia/sites/anaesthesia/files/IntroductionToAnaesthesia.pdf https://japractice.co.uk/2017/07/pre-oxygenation-why-and-how/12582",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Anaesthetic Agents"
  }
]