[
  {
    "q_no": 1,
    "question": "A 30-year-old male presents to the clinic with trauma to his lower jaw. He needs stitches on his lower lip near the incisors. Which nerve block will provide adequate anesthesia for suturing the lower lip and nearby gingiva?",
    "options": {
      "A": "Infraorbital nerve block",
      "B": "Mental nerve block",
      "C": "Inferior alveolar nerve block",
      "D": "Supraorbital nerve block"
    },
    "correct_answer": "B",
    "explanation": "Correct answer: B) Mental nerve block Explanation: The mental nerve provides sensation to the lower lip, labial mucosa, and gingiva near the incisors and canines , making it the correct choice for anesthesia in this case. Face blocks Most of the facial region is supplied by the Trigeminal nerve and its branches. Anatomy: Cranial nerve V arises from the brainstem and forms the Gasserian (sensory) ganglion in Meckel’s cave . The three nerve divisions (ophthalmic, maxillary, mandibular) exit the skull separately. Nerve Block Anatomy Anesthesia Distribution Technique Supraorbital & Supratrochlear (Ophthalmic Nerve) (Option D) Supraorbital nerve exits the supraorbital foramen on the superior surface of the orbital rim. Supratrochlear exits medially at the orbital rim . Anesthetizes the entire forehead up to the scalp's vertex. Inject anesthetic subcutaneously above the eyebrow, from midline to the lateral orbit. Infraorbital (Maxillary Nerve) (Option A) Exits infraorbital foramen below the optic rim near the first maxillary premolar. Provides sensation loss to lower eyelid, medial cheek, side of nose, upper lip. Retract mucosa, insert needle above the first premolar, and inject 3-5 ml between cheek and gingiva. Mental (Mandibular Nerve) (Option B) Mental nerve exits the mental foramen, a branch of the inferior alveolar nerve. Anesthetizes lower lip, labial mucosa, and gingiva near incisors and canines. Retract lip, insert needle near first/second premolars , and inject 3-5 ml in the mucosal fold Inferior Alveola r (Mandibular Nerve) (Option C) Arises from mandibular division of trigeminal (V3); landmarks: Mandibular sulcus, coronoid notch, pterygomandibular raphe. Anesthetizes all lower teeth, gums, anterior labial and lingual areas. Insert needle into pterygomandibular raphe , tap bone, withdraw slightly, and inject 2-3 ml. Complications Risks include intravascular or subarachnoid injection, Horner syndrome, and motor block of jaw muscles. Maxillary nerve blocks carry a higher risk of hemorrhage. Facial nerve may be unintentionally blocked during mandibular nerve blocks.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 2,
    "question": "In preparing for a superficial cervical plexus block, where should the anesthesiologist insert the needle?",
    "options": {
      "A": "Along the anterior border of the sternocleidomastoid",
      "B": "Along the posterior border of the sternocleidomastoid, halfway between the mastoid and clavicle",
      "C": "At the midpoint of the clavicle",
      "D": "Lateral to the trapezius muscle"
    },
    "correct_answer": "B",
    "explanation": "mastoid and clavicle Correct answer: B) Along the posterior border of the sternocleidomastoid, halfway between the mastoid and clavicle. Explanation: The correct insertion point for a superficial cervical plexus block is along the posterior border of the sternocleidomastoid muscle, halfway between the mastoid process and the clavicle . This approach ensures effective sensory nerve blockade while minimizing complications. Neck block Anatomy The cervical plexus arises from the anterior rami of C1–C4 , located lateral to the vertebral transverse processes. It has four sensory branches (lesser occipital, greater auricular, transverse cervical, supraclavicular) and three motor branches (phrenic, ansa cervicalis, and posterior neck muscles). Indications Used for U/L neck surgeries (e.g., carotid endarterectomy) Supplement for clavicle/shoulder anesthesia. Types Superficial Block Targets cutaneous branches, providing sensory anesthesia to the neck, jaw, and shoulder. A needle is inserted along the posterior border of the sternocleidomastoid , halfway between the mastoid and clavicle. Deep Block Targets nerve roots at the vertebral foramina for deeper neck anesthesia. Ultrasound-guided, targeting the nerve roots (C2–C4) with 5 mL of anesthetic at each level. Risks Both types can cause hemidiaphragmatic paralysis . The deep block poses additional risks, including accidental vertebral artery or spinal canal injection. Along the Anterior Border of the Sternocleidomastoid (Option A) : This location is inappropriate as it does not effectively target the cervical plexus branches and may increase the risk of vascular injury. At the Midpoint of the Clavicle (Option C) : This area is too inferior and does not align with the cervical plexus branches, making it ineffective for the intended anesthesia. Lateral to the Trapezius Muscle (Option D) : This location is irrelevant for the cervical plexus block and may lead to inadequate anesthesia.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 3,
    "question": "During the procedure as given in the image, the anesthesiologist uses a 25-gauge needle to inject the local anesthetic. If the needle inadvertently penetrates too deeply and damages nearby structures, which of the following complications might arise?",
    "options": {
      "A": "Carotid artery puncture",
      "B": "Hemorrhage from the internal jugular vein",
      "C": "Mandibular nerve blockade leading to loss of mastication",
      "D": "Damage to the facial nerve causing unilateral weakness"
    },
    "correct_answer": "D",
    "explanation": "Correct answer: D) Damage to the facial nerve causing unilateral weakness Explanation: The procedure shown in the image is auriculotemporal nerve block , facial nerve runs superficially in the parotid gland and innervates the muscles of facial expression. If the needle penetrates too deeply, it may damage the facial nerve which leads to U/L LMN facial paralysis/weakness. Scalp blocks Occipital nerve block Greater Occipital Nerve: Arises from the dorsal primary rami of the C2 and C3 spinal nerves. Blocked approximately 3 cm lateral to the occipital prominence at the level of the superior nuchal line . The nerve is located medial to the occipital artery. Lesser Occipital Nerve: Originates from the ventral rami of the same spinal roots. Blocked 2 to 3 cm more laterally along the nuchal ridge. Zygomaticotemporal Nerve Block Insert the needle at outer edge of supraorbital margin at a 90° angle until bone contact is made, then deposit the LA for deep injection. Redirect the needle laterally to Zygomatic Arch and deposit LA along this trajectory. Auriculotemporal Nerve Block Given at 1 to 1.5 cm anterior to the ear at the tragus, above the temporomandibular joint. Palpate the superficial temporal artery to avoid intra-arterial injection. Keep the injection superficial to prevent facial nerve block. Carotid Artery Puncture (Option A) : Less likely as the procedure is performed anterior to the ear, away from the carotid artery.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Miscellaneous-Nerve_Blocks_Q3_q.png",
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 4,
    "question": "A 35-year-old male presents with a laceration to his pinna after a sports injury. He expresses significant pain and anxiety about the repair procedure. The physician decides to perform a nerve block to ensure adequate analgesia during the repair. Which of the following is the preferred nerve block for pinna repair?",
    "options": {
      "A": "Auriculotemporal nerve block",
      "B": "Greater auricular nerve block",
      "C": "Trigeminal nerve block",
      "D": "Facial nerve block"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Greater auricular nerve block Explanation: Greater auricular nerve block is preferred for pinna repair because it provides effective analgesia to the ear and surrounding areas, reducing the need for perioperative opioids. Greater Auricular Nerve Block: Greater auricular nerve is a sensory nerve branch of the superficial cervical plexus (C3). Course at the level of the cricoid cartilage and follows the posterior border of the clavicular head of the sternocleidomastoid muscle. Auricular Nerve Block\" data-author=\"A. Thallaj, P. Marhofer, B. Moriggl, B. M. Delvi, S. C. Kettner, M. Almajed\" data-hash=\"420\" data-license=\"NA\" data-source= \"https://associationofanaesthetists-publications.onlinelibrary.wiley.com/doi/full/10.1111/j.1365-2044.2010.06443. x\" data-tags=\"December2024\" height=\"240\" src=\"https://image.prepladder.com/notes/CRnQawYMCtvHhRABeQhL1734949891.png\" width=\"500\" /> Supplies sensory innervation to: Inferior part of the ear. Skin over the mastoid process. Angle of the mandible. Segments of the external ear: Tail of the helix, antitragus, lobule of the auricle, with variable supply to the spine of the helix, tragus, and concha. Clinical Use: Provides analgesia for procedures: Otoplasty Tympanomastoidectomy Reduces the need for perioperative opioid use. Technique: Location for Block: At the level of the cricoid cartilage (C6). Local anesthetic: Injected superficially along the belly of the muscle, approximately 5-6 cm below the ear. Auricular Nerve Block location\" data-author=\".Ritchie MK, Wilson CA, Grose BW, Ranganathan P, Howell SM, Ellison MB \" data-hash=\"421\" data-license=\"CC BY NC 3.0\" data-source=\"https://openi.nlm.nih.gov/detailedresult?img=PMC4943106_cp-2016-2-856-g002&req=4\" data-tags=\"December2024\" height=\"340\" src=\"https://image.prepladder.com/notes/prRrfgQZgaMvjnkqrE6l1734950090.png\" width=\"500\" /> Complications: Intravascular Injection due to proximity to carotid artery and jugular veins. Deep needle placement may result in: Phrenic nerve block. Cervical plexus block. Horner's syndrome. Auriculotemporal nerve block (Option A) i s not preferred for pinna repair because it primarily targets the temporomandibular joint (TMJ) and surrounding structures. Trigeminal nerve block (Option C) is not indicated for pinna repair because it specifically targets the treatment of trigeminal neuralgia rather than providing analgesia for ear injuries. Facial nerve block (Option D) is not preferred for pinna repair because it primarily targets analgesia for facial procedures.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 5,
    "question": "A 40-year-old female is scheduled for endoscopic surgery involving the middle turbinate and frontal recess due to chronic sinusitis. Which of the following nerve blocks is preferred for providing analgesia during this surgery?",
    "options": {
      "A": "Maxillary nerve block",
      "B": "Anterior ethmoidal block",
      "C": "Infraorbital nerve block",
      "D": "Sphenopalatine ganglion block"
    },
    "correct_answer": "B",
    "explanation": "Correct answer: Anterior ethmoidal block Explanation: Anterior ethmoidal block is specifically indicated for providing analgesia during surgeries involving the middle turbinate and frontal recess. Anterior Ethmoidal Nerve Block: Anterior ethmoidal nerve is a branch of the ophthalmic nerve . It has internal and external nasal branches that innervates: Anterior part of the septum. Lateral wall of the nasal cavity. Nasal bone. Skin to the tip of the nose. Ethmoidal Nerve Block\" data-author=\"Ali Kavyani Ali Manafi\" data-hash=\"422\" data-license=\"CC BY 4.0\" data-source=\"https://www.researchgate.net/figure/Anterior-ethmoidal-nerve-from-Fran k-H-Netter-Atlas-of-human-anatomy-6-th-edition_fig2_324510514\" data-tags=\"December2024\" height=\"500\" src=\"https://image.prepladder.com/notes/hDAlYvOIlXViEclW6Z5B1734950581.png\" width=\"500\" /> Located medially from the halfway point between the posterior palpebral fold and the eyebrow, at a depth of 1.5 cm. Technique Injection Site: Lateral nasal wall, anterior to the root of the middle turbinate. Needle insertion 9 mm superior to the superior border of the medial canthal tendon to prevent injury to the lacrimal sac. Ethmoidal Nerve Block site\" data-author=\"NA\" data-hash=\"423\" data-license=\"NA\" data-source=\"NA\" data-tags=\"December2024\" height=\"500\" src=\"https://image.prepladder.com/notes/MsmGiUBDBuvH0ftDHPNo1734951056.png\" width=\"500\" /> Local anesthetic: Approximately 0.5 ml of 1% lidocaine or 0.5% ropivacaine with adrenaline. Administration: Injected submucosally. ethmoidal block, Endoscopic view\" data-author=\"Nagalingeswaran Ahilasamy,1 Veerasigamani Narendrakumar,2 Rajendran Dinesh Kumar,corresponding author3 and N Sai Sarath3\" data-hash=\"424\" data-license=\"NA\" data-source=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9741691/\" data-tags=\"December2024\" height=\"485\" src=\"https://image.prepladder.com/notes/UnXTLjECd0e8GIvgZDye1734951272.png\" width=\"500\" /> Indication: Used for surgeries involving the middle turbinate and frontal recess. Reduces postoperative agitation during emergence in nasal surgeries with nasal packs. Maxillary nerve block (Option A) provides anesthesia primarily to the hemi-maxilla and is suited for dental procedures, not nasal cavity interventions. Infraorbital nerve block (Option C) primarily anesthetizes the anterior part of the maxilla, making it suitable for dental and cosmetic procedures but not effectively targeting the nasal cavity or surrounding structures. Sphenopalatine ganglion block (Option D) is used in the treatment of acute migraine headaches, acute cluster headaches, and facial neuralgias, rather than providing analgesia for nasal structures.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 6,
    "question": "Match the following: 1. Supraclavicular block A. Blocks the superior and middle trunk of the brachial plexus. 2. Interscalene block B. Block terminal nerves. 3. Infraclavicular block C. Blocks distal trunk-proximal division of the brachial plexus. 4. Axillary block D. Blocks at the level of cords of the brachial plexus.",
    "options": {
      "A": "1A,2D,3C,4B",
      "B": "1C,2A,3D,4B",
      "C": "1C,2A,3B,4D",
      "D": "1B,2C,3A,4D"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) 1C,2A,3D,4B Explanation: Brachial Blocks Supraclavicular block Blocks distal trunk-proximal division of the brachial plexus. For surgeries distal to the mid-humerus. Interscalene block Blocks the superior and middle trunk of the brachial plexus. For shoulder and proximal humerus surgeries. Contraindicated in patients with respiratory insufficiency due to the high risk of ipsilateral phrenic nerve block and diaphragmatic hemiparesis. Interscalene block covers most of the brachial plexus, sparing the ulnar (C8-T1) nerve. Infraclavicular block Blocks at the level of cords of the brachial plexus. For surgeries distal to the mid-humerus. Axillary block Block terminal nerves. For surgeries distal to the mid-humerus. Axillary, musculocutaneous and medial brachial cutaneous nerve branches of brachial plexus are usually spared from blockade. No risk blockade of the phrenic nerve, nor have the potential to cause pneumothorax.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 7,
    "question": "A 60-year-old patient is scheduled for forearm surgery. The anesthesiologist seeks to provide an effective brachial plexus block approach with the least risk of pneumothorax and uses the block as shown below. Identify the type of brachial plexus block approach depicted in the image?",
    "options": {
      "A": "Interscalene block",
      "B": "Infraclavicular block",
      "C": "Supraclavicular block",
      "D": "Axillary block"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Axillary block Explanation: The anesthesiologist chooses the axillary block as it primarily targets the terminal nerves and has a lower risk of serious complications compared to other approaches. This method provides greater safety, especially when using ultrasound techniques to guide the placement. Approaches of Brachial Plexus Block: 1) Interscalene Blocks: (Option A) Anatomical Target: Blocks the superior and middle trunks of the brachial plexus (C5-C7). Indication: Shoulder surgery Upper arm surgery Complications: Phrenic nerve block Horner syndrome Recurrent laryngeal nerve block Vertebral artery injection Spinal/Epidural injection Pneumothorax 2) Supraclavicular Block: (Option C) Anatomical Target: Blocks distal trunk-proximal division of the brachial plexus. Indications: Operations on the elbow, forearm, and hand. Complications: Pneumothorax (prevalence is 0.5% to 6%) Phrenic nerve block (40%-60% of cases) Horner's syndrome Neuropathy Recurrent laryngeal nerve palsy Subclavian artery puncture 3) Infraclavicular Block: (Option B) Anatomical Target: Blocks at the level of cords of brachial plexus. Indication: Surgeries at or distal to the elbow Complications: Lower risk of Pneumothorax: Compared to supraclavicular blocks. Vascular puncture 4) Axillary",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Miscellaneous-Nerve_Blocks_Q7_q.png",
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 8,
    "question": "A 45-year-old woman suffers from severe chronic pain in the upper extremities that has not been relieved with pain medications. She doesn't want to keep taking medications and wants a permanent solution. A stellate ganglion block is advised as the treatment modality. Which of the following is false about this method?",
    "options": {
      "A": "The procedure carries a risk of pneumothorax",
      "B": "Used for the treatment of PTSD and severe menopausal vasomotor symptoms",
      "C": "A successful procedure is noted by the onset of Horner’s syndrome",
      "D": "C7 vertebra is preferred over C6 vertebra as the injection site"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) C7 vertebra is preferred over C6 vertebra as the injection site Explanation: In a stellate ganglion block, the C6 vertebra is the more preferred location than the C7 because, at the former location, there is a reduced possibility of injuring the vertebral artery than at the latter. Cervicothoracic (Stellate) Block Blocks the upper thoracic and all cervical ganglia. Indications: Pain management for head, neck, arm, and upper chest. Complex regional pain syndrome (chronic pain, sensory, motor and trophic issues of the affected extremity or region usually after a trauma or surgery). Used for: (Option B) Posttraumatic stress disorder (PTSD) Severe menopausal vasomotor symptoms Vasospastic disorders of the upper extremity Refractory ventricular tachycardia Herpes zoster ophthalmicus Ventricular tachyarrhythmia resulting from congenital long-QT syndrome (a left stellate block is recommended) Severe ipsilateral circulatory disorders of the upper extremity. Location: Stellate ganglion is located at the level of C6 transverse proces s (Chassaignac tubercle) or C7 (3-5 cm above the clavicle) Signs of Successful Block: Increased skin temperature in the ipsilateral arm. Onset of Horner syndrome (Option C) : ipsilateral ptosis, miosis, enophthalmos, loss of ciliospinal reflex, and anhydrosis of the neck and face. Guttmann’s sign: Nasal stuffiness after block due to vasodilatation. Muller’s sign: vasodilation near the tympanic membrane. Complications: Intravascular and subarachnoid injection Hematoma Pneumothorax (higher incidence with posterior approach) (Option A) Epidural anesthesia Brachial plexus block Hoarseness from recurrent laryngeal nerve blockade",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 9,
    "question": "Which of the following statements is true regarding nerve blocks done at the elbow and wrist?",
    "options": {
      "A": "The median nerve is accessed lateral to the brachial artery",
      "B": "The ulnar artery is seen at the medial side of the ulnar nerve in the wrist",
      "C": "Radial nerve is approached from a posterior aspect of the elbow",
      "D": "Ulnar nerve can be blocked at the antecubital fossa"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Radial nerve is approached from a posterior aspect of the elbow Explanation: The radial nerve is approached from a posterior aspect of the elbow to achieve nerve block. Distal conduction blocks: It is indicated to complement partially failed brachial blocks. A very small amount of 0.05 ml/kg local anesthetic up to 1-2mL is enough for complete nerve blockade. Caution should be taken at the wrist as the nerves and tendons appear similar. Nerve Location Ultrasound Visualization Blocking Techniques Median Nerve Antecubital fossa: medial to the brachial artery (Option A) Mid-forearm: medial to radial artery Between palmaris longus & flexor carpi radialis Difficult to distinguish from tendons at the wrist Block at antecubital fossa (vs Option D) , mid-forearm, or wrist Caution is required at the wrist due to tendon similarity Ulnar Nerve Above elbow: several cm proximal At wrist: near medial side of ulnar artery (Option B) Small hyperechoic triangle near ulnar artery Prefer tracking proximally to separate from the artery Avoid cubital tunnel (Option D) Block above or below the elbow Radial Nerve Posterior to the humerus, lateral side of the elbow Visible below the brachial muscle near the humerus Can block at the posterior aspect of the elbow ulnar nerve at elbow level\" data-author=\"Courtney Aird,Kerry Thoirs, Sandhya Maranna, Nicola Massy-Westropp\" data-hash=\"435\" data-license=\"NA\" data-source=\"https://journals.sagepub.com/doi/10.1177/8756479319870467?icid=int.sj-full-text.similar-articles.5\" data-tags=\"December2024\" height=\"353\" src=\"https://image.prepladder.com/notes/x6zC4IAgXz1WFg3gpqWJ1734957085.png\" width=\"440\" />",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 10,
    "question": "A patient is being evaluated and prepared to undergo a mastectomy. Which regional nerve block would be the best choice?",
    "options": {
      "A": "Rectus sheath block",
      "B": "Paravertebral block",
      "C": "Transversus abdominis plane block",
      "D": "Intercostal block"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Paravertebral block Explanation: The paravertebral block is preferred in surgeries like mastectomy and nephrectomy that need a great amount of analgesia. Block Type Indications Technique and Nerves Targeted Complications Intercostal Block (Option D) Thoracic/upper abdominal surgery, rib fractures Individual injections at each intercostal nerve (T1-T11) at the inferior edge of the rib, with aspiration before injection. Pneumothorax, intravascular injection, toxicity, bleeding, infection Paravertebral Block Thoracic/abdominal wall surgeries Mastectomy Open nephrectomy (unilateral) Cholecystectomy Injections at T levels near transverse processes Targets thoracic spinal nerves (T2-T12) using ultrasound or landmark techniques Pneumothorax, hypotension, retroperitoneal injury, hematoma, infection Erector Spinae Plane Block Thoracoabdominal surgery, rib fractures Chest wall neuropathic pain Local anesthetic is deposited deep into erector spinae muscles, usually at a midline or lateral approach. Targets dorsal rami of thoracic spinal nerves Pneumothorax, local anesthetic toxicity, bleeding, infection Pectoralis I/II Block Chest wall surgery Injection between the pectoralis major and minor (Pecs I) and targeting intercostobrachial and intercostal nerves (3-6) for Pecs II. Rare, but may include pneumothorax, bleeding, infection Serratus Anterior Plane Block Unilateral chest wall anesthesia Injection between serratus anterior and latissimus dorsi Targets lateral cutaneous branches of intercostal nerves (T2-T6) Risk of pneumothorax, bleeding, infection Transversus Abdominis Plane Block (Option C) Lower abdominal wall surgery Injection between internal oblique and transversus abdominis muscles Targets subcostal (T12), ilioinguinal (L1), and iliohypogastric (L1) nerves Peritoneal violation, bowel perforation, bleeding, infection Rectus Sheath Block (Option A) Superficial abdominal procedures Local anesthetic injected deep into the rectus abdominis muscle Targets anterior cutaneous branches of intercostal nerves (T7-T12) Limited visceral analgesia, bleeding, infection Quadratus Lumborum Blocks Lower thoracic/ lumbar anesthesia Techniques vary: lateral (QL1), posterior (QL2), or transmuscular. Local anesthetic at quadratus lumborum Potential lumbar plexus involvement Varies by technique; potential for visceral injury, bleeding, infection",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 11,
    "question": "A 34-year-old male patient presents with dyspnea and pleuritic chest pain. A chest X-ray confirms bilateral pleural effusion. The physician decides to perform a thoracentesis to drain the fluid. Which of the following nerve blocks is preferred to provide analgesia during the thoracentesis procedure?",
    "options": {
      "A": "Suprascapular nerve block",
      "B": "Intercostal nerve block",
      "C": "Interscalene block",
      "D": "Thoracic sympathetic block"
    },
    "correct_answer": "B",
    "explanation": "Correct answer:B) Intercostal nerve block Explanation: Intercostal nerve block targets the intercostal nerves, which supply sensation to the chest wall, making it ideal for procedures involving the pleura or thoracic cavity. Intercostal Nerve Block: Intercostal nerves arise from the dorsal and ventral rami of the thoracic spinal nerves. Run along the underside of the corresponding rib, positioned in a neurovascular bundle with the artery and vein. Indications: Provides analgesia following thoracic and upper abdominal surgery. Relieves pain associated with: Rib fractures Herpes zoster Cancer Procedure: Requires individual injections for each intercostal nerve innervating the dermatomes to be anesthetized. Ultrasound guidance allows for multiple levels to be reached from a single skin entry point. A small-gauge needle is inserted at the inferior edge of the rib. Aspiration to check for blood or air, then 3 to 5 mL of local anesthetic is injected at each desired level. Contraindication: Allergy to local anesthetics, prior nerve injury or damage, inability of the patient to consent to the procedure, active infection over the site of injection, anticoagulation, or coagulopathy. Complications: Has highest complication rates among peripheral nerve blocks due to proximity to the: Intercostal artery and vein: Risk of intravascular injection Pleura: Risk of pneumothorax intercostal nerve block\" data-author=\"NA\" data-hash=\"438\" data-license=\"NA\" data-source=\"NA\" data-tags=\"December2024\" height=\"383\" src=\"https://image.prepladder.com/notes/VkIhlSFbobJLgKdvlQYW1734958604.png\" width=\"450\" /> Suprascapular nerve block (Option A) primarily targets shoulder-related pain rather than providing the necessary analgesia for procedures involving the thoracic wall and pleura, which the intercostal nerve block addresses more directly. Interscalene block (Option C) is not suitable for thoracentesis because it primarily targets the upper extremity, providing analgesia for shoulder and arm surgeries rather than addressing the chest wall and pleura directly. Thoracic sympathetic block (Option D) is not ideal for thoracentesis as it typically offers only temporary relief and is more suited for neuropathic pain management rather than procedural analgesia.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 12,
    "question": "A 45-year-old male is scheduled for an elective inguinal hernia repair. The anesthesiologist decides to perform a Transversus Abdominis Plane (TAP) block to provide effective analgesia during and after the procedure. Which of the following nerves is not blocked by the TAP block?",
    "options": {
      "A": "Subcostal nerve",
      "B": "Ilioinguinal nerve",
      "C": "Genitofemoral nerve",
      "D": "Iliohypogastric nerve"
    },
    "correct_answer": "C",
    "explanation": "Correct answer: C) Genitofemoral nerve Explanation: Transversus abdominis plane block (TAP) does not target the genitofemoral nerve , which supplies the genital area and upper thigh. Transversus Abdominis Plane Block (TAP): Nerves Targeted: Subcostal nerve (T12) (Option A) Ilioinguinal nerve (L1) (Option B) Iliohypogastric nerve (L1) (Option D) Nerve Course: These nerves travel between the internal oblique and transversus abdominis muscles. Area of Anesthesia: Provides anesthesia to the ipsilateral lower abdomen, below the umbilicus. Indication: Used for surgical anesthesia during minor, superficial procedures on the lower abdominal wall. Provides postoperative analgesia for procedures below the umbilicus. For inguinal hernia surgeries, intravenous or local supplementation may be needed for anesthesia during peritoneal traction. Anatomic Location for Block: The desired location for the block is between the transversus abdominis and internal oblique muscles. Transversus Abdominis Plane Block\" data-author=\"NA\" data-hash=\"439\" data-license=\"NA\" data-source=\"NA\" data-tags=\"December2024\" height=\"600\" src=\"https://image.prepladder.com/notes/9EnjK62yIaoHrilqxQSA1734958770.png\" width=\"659\" /> Procedure: Patient Positioning: Ideally, the patient is positioned in lateral decubitus. Under Ultrasound Guidance: External oblique, internal oblique, and transversus abdominis muscles are identified just superior to the anterior superior iliac spine (ASIS). Needle Placement: Needle is inserted between the fascial layers of the internal oblique and transversus abdominis muscles. Local anesthetic is injected into the transversus abdominis plane. Transversus Abdominis Plane Block 1\" data-author=\"Vishal Uppal Sushil Francis Sancheti Hari Kalagara\" data-hash=\"440\" data-license=\"CC BY 4.0\" data-source=\"https://www.researchgate.net/figure/Posterior-transversus-abdominis-pla ne-TAP-block-The-left-image-shows-the-ultrasound_fig2_336816293\" data-tags=\"December2024\" height=\"278\" src=\"https://image.prepladder.com/notes/AwhirsxLR4RffDb9HBGq1734958925.png\" width=\"717\" /> Transversus Abdominis Plane Block 2\" data-author=\"Nagata, Jun & Watanabe, Jun & Sawatsubashi, Yusuke & Akiyama, Masaki & Arase, Koichi & Minagawa, Noritaka & Torigoe, Takayuki & Hamada, Kotaro & Nakayama, Yoshifumi & Hirata, Keiji.\" data-hash=\"441\" data-license=\"CC BY-NC ND\" data-source=\"https://www.researchg ate.net/figure/Transversus-abdominis-plane-block-A-Laparoscopic-view-showing-the-tip-of-a-needle_fig2_31583 3431\" data-tags=\"December2024\" height=\"329\"",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 13,
    "question": "A 60-year-old patient with pancreatic cancer is in severe pain and hence is advised for celiac plexus block. Which of the following complications be rarely seen in this procedure?",
    "options": {
      "A": "Postural hypotension",
      "B": "Back pain",
      "C": "Systemic local toxicity",
      "D": "Sexual dysfunction"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Systemic local toxicity Explanation: Systemic local toxicity is not seen as a complication of celiac plexus block as it is seen as a complication in intercostal nerve block that is done for postoperative analgesia and as an alternative to epidural and paravertebral blocks . Coeliac plexus block Indication Patients with abdominal visceral pain, like in cancers. Anatomy The celiac ganglia can vary in number from one to five and differ in form and position. Typically, they are grouped around the body of the L1 vertebra , located posterior to the vena cava on the right side, just lateral to the aorta on the left, and behind the pancreas. Approaches Posterior and Trans-Crural Approach Anterior Approach Endoscopic Ultrasound-Guided Celiac Plexus Block Complications Postural hypotension (Option A) Accidental intravascular injection (risk of severe systemic reaction) Pneumothorax Retroperitoneal hemorrhage Injury to kidneys or pancreas Sexual dysfunction (Option D) Rarely, paraplegia (due to lumbar artery of Adamkiewicz injury) Increased gastrointestinal motility and diarrhea (due to unopposed parasympathetic activity) Back pain (Option B)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 14,
    "question": "A 65-year-old patient is scheduled for a knee arthroscopy. The anesthesiologist plans to use regional anesthesia for postoperative analgesia. Which block should the anesthesiologist consider for effective postoperative pain relief in this procedure?",
    "options": {
      "A": "Popliteal nerve block",
      "B": "Femoral nerve block",
      "C": "Obturator nerve block",
      "D": "Lateral femoral cutaneous nerve block"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Femoral nerve block Explanation: Femoral nerve block is highly effective for postoperative analgesia in knee arthroscopy, as it provides pain relief for procedures involving the hip, thigh, knee, and ankle, even though it is insufficient for surgical anesthesia on its own. Femoral Nerve Block: Femoral nerve innervates the main hip flexors and knee extensors and provides sensory innervation of the hip and thigh. Use in Surgery: Femoral nerve block alone is insufficient for surgical anesthesia but highly effective for postoperative analgesia. (Option B) Commonly used for procedures involving the hip, thigh, knee, and ankle (via saphenous nerve). Anatomical Landmark: Lies lateral to the femoral artery and deep to the fascia iliaca. Low complication rate. Block causes quadriceps muscle weakness, leading to knee buckling when weight-bearing is attempted. Therefore, patients must be informed that weight-bearing on the affected leg is not possible until the block is resolved. Lateral Femoral Cutaneous Nerve Block: (Option D) Lateral femoral cutaneous nerve (L2–L3) provides sensory innervation to the lateral thigh. Anatomical Location: Inferior and medial to the anterior superior iliac spine (ASIS) Use: Can be used as a supplement to a femoral nerve block or as an isolated block for anesthesia of the lateral thigh. Excellent for providing analgesia to a split-thickness skin graft donor site. Obturator Nerve Block: (Option C) Obturator nerve provides sensory branches to the hip and knee joints, variable sensation to the medial thigh and motor innervation to the adductors of the hip. Anatomical Location: 2 cm lateral and distal to the pubic tubercle. Use: Required for complete knee anesthesia, often combined with femoral and sciatic nerve blocks. Used to prevent adductor muscle spasms during transurethral bladder resection when muscle relaxants are not employed. Popliteal nerve block (Option A) : While popliteal nerve blocks provide excellent coverage for foot and ankle surgery and spare much of the hamstring muscles, they do not adequately target the knee joint itself, making them less effective for analgesia during knee arthroscopy compared to the femoral nerve block.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 15,
    "question": "A 70-year-old patient is scheduled for hip replacement surgery. Which nerve block should the anesthesiologist select to provide effective anesthesia for this procedure?",
    "options": {
      "A": "Lumbar plexus block",
      "B": "Sacral plexus block",
      "C": "Sciatic nerve block",
      "D": "Ilioinguinal nerve block"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Lumbar plexus block Explanation: Lumbar plexus block is effective for providing analgesia in procedures involving the hip. Lumbar Plexus Block: Lumbar plexus is formed by the ventral rami of L1 to L4, with occasional contribution from T12. Located between the psoas muscle and the quadratus lumborum muscle. 4 nerves of the lumbar plexus: Femoral nerve Lateral femoral cutaneous nerve Obturator nerve Genitofemoral nerve Lumbar plexus nerves supply motor and sensory innervation to the anterior thigh, hip joint and sensory innervation to the medial leg. Posterior Lumbar Plexus (Psoas Compartment) Block: Useful for surgeries involving areas innervated by the femoral, lateral femoral cutaneous, and obturator nerves. Includes procedures on the hip, knee, and anterior thigh. Complete anesthesia of the knee can be achieved when combined with a proximal sciatic nerve block. Has one of the highest complication rates among peripheral nerve blocks. Complications: Retroperitoneal hematoma Intravascular local anesthetic injection with toxicity Intrathecal or epidural injections Renal capsular puncture Sacral Plexus Block: Nerves of the Sacral Plexus: Sciatic Nerve : Supplies motor and sensory innervation to the posterior thigh, and most of the leg and foot. (Option B & C) Indications for Sciatic Nerve Block: Recommended for foot and leg surgeries Often combined with a saphenous nerve block to cover the medial aspect of the leg. Posterior Femoral Cutaneous Nerve: Provides sensory innervation to the posterior thigh. Ilioinguinal nerve block (Option D): Ilioinguinal nerve primarily provides sensory innervation to the proximal, medial thigh and is used for analgesia following inguinal hernia repair and for lower abdominal procedures, making it unsuitable for hip surgery, which requires more extensive anesthesia coverage.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  },
  {
    "q_no": 16,
    "question": "A 50-year-old woman is scheduled for foot surgery to remove a neuroma. The anesthesiologist performs an ankle block and aims to provide sensation to the dorsum of the foot, excluding the first interdigital cleft. Which nerve should be blocked?",
    "options": {
      "A": "Sural nerve",
      "B": "Tibial nerve",
      "C": "Deep peroneal nerve",
      "D": "Superficial peroneal nerve"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Superficial peroneal nerve Explanation: Superficial peroneal nerve innervates the dorsum of the foot, excluding the first interdigital cleft. This makes it ideal for covering the desired sensory area during the procedure. Ankle Block: Relatively simple and offers adequate anesthesia for foot surgeries. Nerves Blocked: 4 of the 5 individual nerves blocked are terminal branches of the sciatic nerve. Tibial nerve Superficial peroneal nerve Deep peroneal nerve Sural nerve: Formed from both tibial and common peroneal contributions. Saphenous nerve: Major sensory branch of the femoral nerve. Procedure: A complete ankle block requires five injections to target all the nerves involved. Nerve Blocked Site of Block Effect Tibial nerve (Option B) Behind the posterior tibial artery at the level of the medial malleolus. Anesthetizes the heel, plantar portion of toes, and sole. Sural nerve (Option A) Lateral to the Achilles tendon and is directed towards the lateral malleolus. Anesthetizes the lateral foot and lateral aspect of the proximal sole. Deep peroneal nerve (Option C) Groove between extensor hallucis longus and extensor digitorum longus tendon, lateral to dorsalis pedis artery. Anesthetizes the skin between the first and second toes and the short toe extensors. Superficial peroneal nerve (Option D) Targeted by extending the injection laterally towards lateral malleolus from the deep peroneal block site. Anesthetizes dorsum of the foot (excluding the first interdigital cleft). Saphenous nerve Redirecting the needle medially towards the medial malleolus from the same insertion point. Anesthetizes the medial foot. anesthesia produced by ankle block\" data-author=\"NA\" data-hash=\"693\" data-license=\"NA\" data-source=\"NA\" data-tags=\"January2025\" height=\"602\" src=\"https://image.prepladder.com/notes/I1m3YnRpU71UUybEVcpc1736513246.png\" width=\"570\" /> Limitations: An ankle block does not provide analgesia for below-the-knee tourniquet pain or allow for perineural catheter insertion. Disadvantages: Multiple injections may cause discomfort. Persistent paresthesias occur but are usually self-limited. Presence of edema or induration may complicate landmark identification.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Nerve Blocks"
  }
]