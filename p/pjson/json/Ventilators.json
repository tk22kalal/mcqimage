[
  {
    "q_no": 1,
    "question": "A male patient presents for an elective total knee replacement. During the preoperative assessment, the anesthesiologist performs a thorough evaluation and finds: Mallampati Score: Class III Thyromental Distance: 6 cm Sterno-mental distance 13 cm with head in maximum extension Neck circumference of 16 inch Which of the following features in a patient would prompt you to anticipate a difficult intubation?",
    "options": {
      "A": "Mallampati Score: Class III",
      "B": "Thyromental Distance: 6cm",
      "C": "Sterno-mental distance 13cm with head in maximum extension",
      "D": "Neck circumference of 16 inch"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Mallampati Score: Class III Explanation : The Mallampati score III suggests a potentially challenging airway, as visibility is reduced. Mallampati Airway Classification Predictors of difficult airway: Specific tests for assessment Mallampati score (III and IV) Thyromental distance less than 6 cm (Option B) Sterno-mental distance less than 12.5 cm with head in maximum extension (Option C) Increased neck circumference of more than 17 inches in men or more than 16 inches in women (Option D) Cormack and Lehane (laryngoscopic view)- Grade III and IV Upper lip bite test: Inability to protrude the mandible or lower teeth in front of the upper teeth Finger breadth for TMJ mobility- <3 fingers. Risk factors of difficult airway: Obstructive sleep apnoea History of snoring Obesity Facial and neck deformities from previous surgery Previous head and neck radiation Head and neck trauma Congenital abnormalities of the head and neck Rheumatoid arthritis Down syndrome Scleroderma Cervical spine disease",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 2,
    "question": "A 54-year-old woman is scheduled for an elective hysterectomy. During the preoperative assessment, the anesthesiologist evaluates her airway using Lemons’ Law, which suggests that certain anatomical features are key predictors of difficult intubation. Which of the following features in a patient would prompt you to anticipate a difficult intubation?",
    "options": {
      "A": "Mallampati Classification: Class II",
      "B": "Thyroid to mouth distance - 2 finger breadth",
      "C": "BMI of 20",
      "D": "Range of neck movement is good"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Thyroid to mouth distance - 2 finger breadth Explanation: Thyroid to mouth distance of 2 finger breadths is one of the key predictors of a difficult airway according to Lemon’s Law. The Lemon's Law Evaluation Criteria Points L = Look externally Facial trauma 1 Large incisors 1 Beard or moustache 1 Large tongue 1 E = Evaluate the 3-3-2 rule Incisor distance - -3 finger breadths 1 Hyoid mental distance - 3 finger breadths 1 Thyroid-to-mouth distance - 2 finger breadths 1 M = Mallampati (Mallampati score >3) 1 O = Obstruction (presence of any condition such as epiglottitis, peritonsillar abscess, trauma) 1 N = Neck mobility (limited neck mobility) 1 Total 10 Lemon’s law helps to assess the risk of a difficult airway Total score: 10 points Higher the lemon score- Higher the risk for airway management Mallampati Classification: Class II (Option A): A Mallampati score of more than III is a predictor of a difficult airway. BMI of 20 (Option C): A BMI of 20 means the person is not obese so, it's not a risk factor. Range of neck movement is good (Option D) Range of neck movement suggests the absence of limited neck mobility. Reference: https://www.jwatch.org/em200502160000001/2005/02/16/airway-assessment-using-lemon-score-predicts",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 3,
    "question": "According to DAS guidelines, how will you manage a patient who is undergoing an elective cholecystectomy, if the below shown device fails to ventilate the patient?",
    "options": {
      "A": "Bag and mask ventilation with 2-person technique",
      "B": "Continue the surgery with LMA",
      "C": "Invasive airway management",
      "D": "None of the above"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Bag and mask ventilation with 2-person technique Explanation: The image is a Laryngeal Mask Airway (LMA) - a supraglottic airway device (SAD). Bag and mask ventilation with a 2-person technique is performed if SAD fails to ventilate Continue the surgery with LMA practiced when normal intubation failed with a laryngoscope (Option B) Invasive airway management is performed when the Bag and mask ventilation is unsuccessful (Option C)",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Ventilators_Q3_q.png",
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 4,
    "question": "Which of the following is NOT an indication for invasive mechanical ventilation?",
    "options": {
      "A": "Respiratory arrest",
      "B": "Severe hypoxemia unresponsive to oxygen therapy",
      "C": "Inability to protect the airway",
      "D": "Cardiogenic pulmonary oedema"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Cardiogenic pulmonary oedema Explanation: Cardiogenic pulmonary oedema is not typically an indication for invasive mechanical ventilation. Instead, it is often managed with non-invasive ventilation (NIV) or medical therapy alone. Indications of invasive and non-invasive ventilators Invasive Ventilation Non-Invasive Ventilation - Respiratory arrest (Option A) - Severe hypoxemia unresponsive to oxygen therapy (Option B) - Inability to protect airway (Option C) - Severe acidosis with hypercapnia - Decreased level of consciousness - Hemodynamic instability with respiratory compromise - Failure of non-invasive ventilation - Copious secretions - Mild to moderate COPD exacerbations - Cardiogenic pulmonary edema - Immunocompromised patients with acute respiratory failure - Postoperative respiratory failure - Weaning from invasive ventilation - Mild to moderate hypoxemic respiratory failure - Palliative care in DNI patients Reference: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7108446/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 5,
    "question": "A 65-year-old male patient is undergoing general anesthesia for an open cholecystectomy. The anesthesiologist decides to use Continuous Mandatory Ventilation (CMV). Which of the following is NOT a characteristic of CMV?",
    "options": {
      "A": "It typically requires deeper sedation than spontaneous breathing modes",
      "B": "It's useful for patients with severe respiratory failure",
      "C": "It allows for patient-triggered breaths between mandatory breaths",
      "D": "It may lead to respiratory muscle atrophy with prolonged use"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) It allows for patient-triggered breaths between mandatory breaths Explanation: Continuous Mandatory Ventilation (CMV) is a mode of mechanical ventilation where the ventilator delivers a set number of breaths per minute, regardless of the patient's own respiratory efforts. It does not allow for patient-triggered breaths between the mandatory breaths, which is a key feature that distinguishes it from other modes like Assist-Control ventilation. Continuous Mandatory Ventilation (CMV) Mechanism - Delivers a set number of breaths per minute - Ventilator controls both rate and tidal volume - Patient's respiratory efforts are not considered Sedation/Paralysis - Often requires deeper sedation (Option A) - Common drugs: Propofol, Midazolam, Fentanyl - May require neuromuscular blockade (e.g., Rocuronium) Uses - Severe respiratory failure (Option B) - ARDS - Post-operative ventilation - Neuromuscular disorders Drawbacks - Potential for respiratory muscle atrophy (Option D) - Increased risk of barotrauma - Patient-ventilator asynchrony - Increased sedation requirements Reference: Principles And Practice of Mechanical Ventilation, Martin Tobin, 3rd Edition, Pg. 51",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 6,
    "question": "A 60-year-old patient with acute respiratory distress syndrome (ARDS) is being mechanically ventilated. The physician is considering switching from volume-controlled assist control ventilation (VC-ACV) to pressure-controlled assist control ventilation (PC-ACV). Which of the following statements is true regarding these two modes?",
    "options": {
      "A": "PC-ACV always delivers a higher tidal volume than VC-ACV",
      "B": "VC-ACV ensures lower peak inspiratory pressure than PC-ACV",
      "C": "PC-ACV provides a decelerating flow pattern which may improve gas distribution",
      "D": "VC-ACV is more likely to cause barotrauma than PC-ACV"
    },
    "correct_answer": "C",
    "explanation": "distribution Correct Answer: C) PC-ACV provides a decelerating flow pattern which may improve gas distribution Explanation: Pressure-controlled assist control ventilation (PC-ACV) typically delivers a decelerating flow pattern , which may improve gas distribution in the lungs , especially in patients with heterogeneous lung disease like ARDS. Assist control ventilation- Pressure and volume control mode Feature Volume-Controlled ACV (VC-ACV) Pressure-Controlled ACV (PC-ACV) Set parameter Tidal volume Inspiratory pressure Flow pattern Usually constant (square wave) Decelerating Tidal volume Fixed (may vary slightly due to compliance changes) Variable (depends on lung mechanics) Peak airway pressure Variable Fixed Response to changes in lung mechanics Pressure increases if compliance decreases Volume decreases if compliance decreases Gas distribution May be less uniform May be more uniform due to decelerating flow Risk of barotrauma May be higher if not properly limited May be lower due to pressure limitation Risk of volutrauma May be lower due to fixed tidal volume May be higher if not properly monitored PC-ACV does not always deliver a higher tidal volume than VC-ACV. The delivered volume in PC-ACV depends on lung mechanics and can vary ( Option A) VC-ACV can lead to higher peak inspiratory pressures, especially when lung compliance decreases, whereas PC-ACV limits peak pressure ( Option B) The risk of barotrauma is not necessarily higher with VC-ACV. Both modes can cause barotrauma if not properly managed ( Option D)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 7,
    "question": "A 55-year-old patient with acute respiratory failure is being weaned from mechanical ventilation using Synchronized Intermittent Mandatory Ventilation (SIMV). Which of the following statements about SIMV is correct?",
    "options": {
      "A": "SIMV always delivers a fixed number of breaths per minute",
      "B": "SIMV prevents spontaneous breathing between mandatory breaths",
      "C": "SIMV is considered the most efficient technique for ventilator weaning",
      "D": "SIMV allows for both mandatory and spontaneous breaths"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) SIMV allows for both mandatory and spontaneous breaths Explanation: Synchronized Intermittent Mandatory Ventilation (SIMV) is a mode of mechanical ventilation that allows for both mandatory (set by the ventilator) and spontaneous (initiated by the patient) breaths . Synchronized Intermittent Mandatory Ventilation (SIMV) Feature Description Breath Types Mandatory (set) and spontaneous (patient-initiated) Synchronization Attempts to synchronize mandatory breaths with patient effort Mandatory Breaths Set number with fixed tidal volume or pressure Spontaneous Breaths Allowed between mandatory breaths, volume determined by patient effort Pressure Support Can be added to enhance spontaneous breath volumes Primary use To allow weaning of ventilatory support SIMV does not always deliver a fixed number of breaths per minute. While it has set mandatory breaths, patients can take additional spontaneous breaths ( Option A) SIMV does not prevent spontaneous breathing between mandatory breaths. In fact, it allows for spontaneous breaths ( Option B) SIMV is not considered the most efficient technique for ventilator weaning. Studies have shown it to be less efficient than pressure support ventilation or T-piece trials ( Option C) Reference: https://www.ncbi.nlm.nih.gov/books/NBK549846/#:~:text=Synchronized%20intermittent%20mandatory %20ventilation%20(SIMV,same%20time%20allowing%20spontaneous%20breaths.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 8,
    "question": "A 68-year-old patient with ARD is being mechanically ventilated. The medical team is considering the application of PEEP to improve the patient's oxygenation. Which of the following statements about PEEP is true regarding its use in this patient?",
    "options": {
      "A": "PEEP is contraindicated in patients with tension pneumothorax.",
      "B": "PEEP decreases FRC and lung compliance.",
      "C": "PEEP is indicated in Hypovolemic shock and asthma patients.",
      "D": "Auto-PEEP is the pressure set on the ventilator to maintain airway patency."
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) PEEP is contraindicated in patients with tension pneumothorax. Explanation: Applying PEEP in patients with tension pneumothorax can exacerbate the condition by increasing intrathoracic pressure and not allowing adequate ventilation. Positive End-Expiratory Pressure (PEEP) PEEP is the positive pressure that remains in the alveoli at the end of exhalation, exceeding atmospheric pressure in mechanically ventilated patients. It can be set on the ventilator ( extrinsic PEEP ) or may occur as a complication ( auto-PEEP ). (Option D) Benefits of PEEP: Reduces alveolar trauma. Enhances oxygenation by recruiting closed alveoli, increasing gas exchange surface area. Increases functional residual capacity, improving oxygenation between breaths. (Option B) Improves ventilation/perfusion (V/Q) matching. Increases lung compliance. (Option B) PEEP Indications Contraindications Acute Respiratory Distress Syndrome (ARDS): Increases FRC and improves oxygenation. Chronic Obstructive Pulmonary Disease (COPD): Reduces work of breathing by splinting airways open. Pulmonary Edema: Improves lung compliance and oxygenation, especially in cardiogenic pulmonary edema. Auto-PEEP: Mitigates effects of intrinsic PEEP in patients with expiratory airflow limitation. Tension Pneumothorax: Can exacerbate intrathoracic pressure. Hypovolemic Shock: May decrease venous return and worsen hypotension. (Option C) High Intracranial Pressure: Increased intrathoracic pressure can impair cerebral perfusion. Bronchopleural Fistula: May hinder healing due to increased airway pressures. Acute Bronchospasm (Asthma): Can lead to hyperinflation and increased gas trapping. (Option C) Reference: Positive End-Expiratory Pressure - StatPearls - NCBI Bookshelf (nih.gov) Positive end-expiratory pressure (PEEP) (medilib.ir) PEEP indications precautions and contraindications.pdf (derangedphysiology.com)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 9,
    "question": "A 50-year-old patient with a history of emphysema presents with a large pneumothorax and is unable to maintain adequate oxygenation on conventional mechanical ventilation. The medical team decides to initiate high-frequency oscillation ventilation (HFOV) as part of the management strategy. What is the typical respiratory rate range for HFOV?",
    "options": {
      "A": "60 to 100 breaths/min",
      "B": "100 to 150 breaths/min",
      "C": "300 to 900 breaths/min",
      "D": "180 to 300 breaths/min"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) 300 to 900 breaths/min Explanation: The typical respiratory rate for high-frequency oscillation ventilation (HFOV) in adults is between 300 to 900 breaths per minute, which allows for effective gas exchange and oxygenation. Modes used in Emergency: High-frequency ventilation Indications of HFV: Adults It is mainly used in severe ARDS to prevent ventilator-induced lung injury. Large air leak syndromes with the inability to keep lungs open like bronchopleural fistula, pneumothorax, pulmonary interstitial emphysema. Failure of conventional mechanical ventilation. Refractory hypoxemia as a rescue therapy. Neonates Persistent pulmonary hypertension. ARDS. Pulmonary interstitial emphysema. Meconium aspiration. Pulmonary hypoplasia. 4 types High-frequency jet ventilation ( HFJV ): Rate is 100 to 150/min (Option B) High-frequency oscillation ( HFOV ): Rate is 300 to 900/min High-frequency positive pressure ventilation ( HFPPV ): Delivered using a conventional ventilator where respiratory rates are set at maximum limits. Rarely used. High-frequency percussive ventilation ( HFPV ): Combination of HFV and conventional ventilation (pressure control mode) 60 to 100 breaths/min (Option A) and 180 to 300 breaths/min (Option D) are incorrect as they are too low for HFOV and do not meet the requirements for effective HFOV. Reference: High Frequency Ventilation - StatPearls - NCBI Bookshelf",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 10,
    "question": "A 62-year-old patient with severe COVID-19 pneumonia presents with acute respiratory distress syndrome (ARDS). After a few days of mechanical ventilation, the patient’s arterial blood gas shows a PaO I of 58 mmHg and a P/F ratio of 120. Given the patient's condition, which of the following interventions should the team prioritize to improve oxygenation?",
    "options": {
      "A": "Increase tidal volume to 8 mL/kg of ideal body weight",
      "B": "Implement prone positioning",
      "C": "Apply higher levels of PEEP to recruit collapsed alveoli",
      "D": "Start aggressive fluid resuscitation"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Implement prone positioning Explanation: Prone positioning is beneficial for patients with severe ARDS (P/F ratio ≤ 150) as it has been shown to improve oxygenation and survival outcomes. This intervention aligns with current management strategies for ARDS. Clinical Modes of Management in ARDS: Lung Protective Ventilation (LPV): Tidal volumes : ≤ 6 mL/kg of ideal body weight to prevent alveolar overdistension. PEEP : Use higher levels to avoid alveolar collapse. Plateau pressure : Limit to ≤ 30 cm H I O to minimize barotrauma. Permissive hypercapnia : Allow mild-to-moderate respiratory acidosis to avoid lung injury. FiO I : Minimize while targeting PaO I >55 mmHg or SpO I >88%. Recruitment Strategies: Use of PEEP to recruit collapsed alveoli and improve oxygenation. Prone positioning : Shown to improve survival in severe ARDS (P/F ratio ≤ 150). Advanced Techniques: Neuromuscular blockade : Early use may benefit patients with severe ARDS (P/F ratio <150). ECMO : Considered for severe, refractory ARDS in specialized centers. Rescue Therapies (Limited evidence for survival benefit): High-frequency oscillatory ventilation : No significant outcome improvements. Inhaled vasodilators (iNO, prostaglandins): Transient oxygenation improvement but no long-term benefit. Fluid Management: Conservative fluid management : Improves oxygenation and ventilator-free days. Corticosteroids : Mixed results; may benefit ARDS from bacterial sepsis but not viral pneumonia (except SARS-CoV2). Increase tidal volume to 8 mL/kg of ideal body weight (Option A): Increasing tidal volume above the recommended ≤ 6 mL/kg can lead to alveolar overdistention and further lung injury, which is contrary to lung protective ventilation strategies. Apply higher levels of PEEP to recruit collapsed alveoli (Option C): While using PEEP can help recruit collapsed alveoli, in patients with severe ARDS, this intervention must be balanced carefully. Excessive PEEP can lead to hemodynamic instability or worsen ventilation-perfusion mismatch. Prone positioning is generally prioritized for improving oxygenation in severe cases. Start aggressive fluid resuscitation (Option D): In ARDS management, conservative fluid management is preferred to avoid fluid overload, which can exacerbate pulmonary edema and impair oxygenation. Aggressive fluid resuscitation may lead to increased extravascular lung water and worsen respiratory function. Reference: Barash Clinical Anesthesiology, 9th Edition, Page 4841-4846",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 11,
    "question": "A 68-year-old patient is recovering from pneumonia and has been on mechanical ventilation for the past week. The medical team is preparing to assess the patient for readiness to wean off the ventilator. Which of the following criteria should the medical team confirm before initiating the weaning process?",
    "options": {
      "A": "Vital capacity < 10 mL/kg",
      "B": "Minute ventilation > 10 L/min",
      "C": "Tidal volume (VT) > 5 mL/kg",
      "D": "Rapid shallow breathing index (RSBI) > 100"
    },
    "correct_answer": "C",
    "explanation": "Correct Answer: C) Tidal volume (VT) > 5 mL/kg Explanation: A tidal volume greater than 5 mL/kg supports the decision to initiate weaning, indicating adequate respiratory function. Discontinuing mechanical ventilation involves two phases: Readiness testing and Weaning. Readiness Testing: Assess if the underlying cause for ventilation is controlled or reversed. Manage complicating factors such as bronchospasm, heart failure, infection, malnutrition, increased CO I production, acid-base imbalances, anemia, altered mental status, and sleep deprivation. Weaning is considered when the patient meets the following criteria: pH > 7.25, Adequate oxygenation (FiO I < 0.5, PaO I saturation > 90%), Hemodynamic stability, and no signs of myocardial ischemia. Adequate cough reflex present. Weaning or Liberation: Key measurements for weaning criteria: Inspiratory pressure : < –25 cm H I O Tidal volume (VT) : > 5 mL/kg Vital capacity : > 10 mL/kg (Option A) Minute ventilation : < 10 L/min (Option B) Rapid shallow breathing index (RSBI) : < 100 (with < 105 indicating potential for extubation). (Option D) Weaning methods: SIMV : Gradually decrease mechanical breaths and pressure support to 5–8 cm H I O while maintaining acceptable arterial CO I tension and respiratory rate. PSV : Gradually reduce pressure support to maintain a VT of 4–6 mL/kg and respiratory rate < 30. T-Piece/CPAP : Observe spontaneous breathing; use sequential trials if needed. CPAP (5 cm H I O) may prevent atelectasis during prolonged T-piece trials by maintaining functional residual capacity (FRC). Reference: Morgan's and Mikhail's Anaesthesiology - 7th Edition. Pg. 2539-2543",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 12,
    "question": "A 60-year-old patient on a ventilator for respiratory distress develops pneumonia 48 hours after starting mechanical ventilation. The physician notes fever, leukocytosis, and patchy infiltrates on the chest X-ray. Which statement is true regarding the patient’s condition?",
    "options": {
      "A": "The patient likely has VAP and should be treated with ceftriaxone and azithromycin.",
      "B": "The patient likely has HAP and is appropriately treated with ceftriaxone and azithromycin.",
      "C": "Procalcitonin is not relevant in this case.",
      "D": "Early-onset VAP should be treated with piperacillin and carbapenem."
    },
    "correct_answer": "A",
    "explanation": "azithromycin. Correct Answer: A) The patient likely has VAP and should be treated with ceftriaxone and azithromycin. Explanation: The patient developed pneumonia 48 hours after starting mechanical ventilation, fitting the criteria for VAP. Symptoms such as fever, leukocytosis, and patchy X-ray infiltrates support this diagnosis. The prescribed treatment of ceftriaxone and azithromycin is appropriate for early-onset VAP, effectively targeting common pathogens while adhering to clinical guidelines for managing hospital-acquired infections. Criteria Hospital-Acquired Pneumonia (HAP) Ventilator-Associated Pneumonia (VAP) Timing Develops after 48 hours of admission (Option B) Occurs after 48 hours of intubation Early: First 48 to 72 hours Late: Occurs after 72 hours Pneumonia Features Fever Leukocytosis Patchy infiltration on X-ray Fever Leukocytosis Patchy infiltration on X-ray Treatment Ceftriaxone and Azithromycin Early-Onset: Ceftriaxone plus azithromycin for 8 days (Option D) Late-Onset: Vancomycin or linezolid plus cefepime for 8 days Common Organisms MRSA, Pseudomonas aeruginosa and other aerobic Gram-negative bacilli, such as Klebsiella pneumoniae, Escherichia coli and Acinetobacter. Haemophilus influenzae, Streptococcus pneumoniae, MRSA, and other antibiotic-sensitive oral flora and viruses and fungi Infection Marker Procalcitonin (Option C) Reference: Barash Clinical Anesthesiology. 9th edition. Pg. 4861-4866 (PDF) Hospital-acquired and ventilator-associated pneumonia Hospital-Acquired Pneumonia and Ventilator-Associated Pneumonia Clinical practice guidelines for hospital-acquired pneumonia and ventilator-associated pneumonia in adults",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  },
  {
    "q_no": 13,
    "question": "A 45-year-old patient is scheduled for surgery under general anesthesia. During the airway assessment using Modified Mallampati scoring, the following image shows the patient's oropharyngeal structures during assessment. Which class does this patient fall into?",
    "options": {
      "A": "Class IV",
      "B": "Class I",
      "C": "Class II",
      "D": "Class III"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) Class III Explanation: Class III means that only the soft palate and the base of the uvula are visible. This classification is significant as it predicts a moderate risk of difficult intubation. Modified Mallampati scoring Class 0 Any part of the epiglottis is visible Class I Faucial pillars, uvula, and soft palate are",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Ventilators_Q13_q.png",
    "explanation_image": null,
    "chapter_heading": "Ventilators"
  }
]