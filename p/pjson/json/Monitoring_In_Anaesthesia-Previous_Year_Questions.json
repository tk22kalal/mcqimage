[
  {
    "q_no": 1,
    "question": "A 60-year-old male patient is undergoing laparoscopic cholecystectomy. During the surgery, a sudden decrease in etCO2 to 8 mm Hg was observed. The patient's SpO2 was 90% and peak airway pressure was 18 mm Hg. His blood pressure also dropped to 80/50 mm Hg. Which of the following is the most probable diagnosis?",
    "options": {
      "A": "Pneumothorax",
      "B": "CO 2 embolism",
      "C": "Endobronchial intubation",
      "D": "Bronchospasm"
    },
    "correct_answer": "B",
    "explanation": "is CO2 embolism. The sudden decrease in end-tidal carbon dioxide (etCO2), along with a drop in oxygen saturation (SpO2), low blood pressure, and normal peak airway pressure, is indicative of a gas embolism. In laparoscopic procedures, CO2 is commonly used to insufflate the abdomen, and an unintentional entry of CO2 into the vascular system can lead to a gas embolism. Air Embolism Occurs when air enters accidentally into the vascular system.Commonly iatrogenic via interventional procedures, but also from trauma, diving, childbirth, and other circumstances. Causes Through venous access like IV cannula. Artificial Pneumothorax. Surgeries of neck and axilla. Traumatic opening of major veins sucking air inside. Fallopian tube insufflation. Laparoscopic surgeries. Illegal abortions. Symptoms Respiratory Distress, Hemoptysis, Convulsions, Unconsciousness, Visual and hearing disturbances, Fatigue and numbness, Paralysis, Hemodynamic instability, Coma. Diagnosis Patient history especially relation to recent procedures. Auscultation: Millwheel murmur heard over the precordium is diagnostic. ECG: ST depression and right heart strain due to pulmonary artery obstruction. Capnometry: Decreased end-tidal CO2 levels in intubated patients. Imaging: Chest X-ray, Doppler ultrasonography, transesophageal echocardiography (TEE). Treatment Positioning: Trendelenburg position: Keeps air bubbles away from coronary arteries. Left lateral decubitus position: Helps trap air in the non-dependent segment of the right ventricle, preventing it from entering the pulmonary artery. Hyperbaric oxygen therapy: Useful in both venous and arterial air embolism as it reduces ischemia, bubble size; in arterial embolism it removes nitrogen from bubbles to improve perfusion and oxygenation. Aspiration: Air should be aspirated from the right ventricle with a needle. Open Thoracotomy: Life-saving procedure required to aspirate excess air causing the block. Peak pressure is normal (17–20 mmHg), ruling out conditions like pneumothorax (Option A ruled out) , bronchospasm (Option D ruled out) , or endobronchial intubation (Option C ruled out) , which typically increase airway pressure. Reference: Bailey & Love Edition 28 page no:1014 SRB’s Surgery Edition 6 page no: 188,189 https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3665124/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 2,
    "question": "You are in the operating room and notice the tracing in yellow colour on this device. What does it indicate?",
    "options": {
      "A": "Capnography",
      "B": "Airway pressure",
      "C": "O2 pressure in inhaled air",
      "D": "O2 pressure in exhaled air"
    },
    "correct_answer": "A",
    "explanation": "Correct Answer: A) Capnography Explanation: The yellow tracing on the device indicates capnography, which monitors CO I levels in exhaled air. Capnography and Capnometry difference: Capnography: Measures CO I in the airway Provides breath-to-breath status of ventilation. Detects CO I only. Phase I Dead Space Ventilation • Beginning of exhalation • No CO I present • Air from trachea and pharynx I No gas exchange occurs here I Called dead space ventilation (Option C) Phase II Ascending Phase • CO I from alveoli reaches upper airway ,mixes with dead space air • Causes rapid rise in CO I concentration. (Option B ) Phase III Alveolar Plateau • Majority of exhaled air is CO I -rich • Uniform CO I concentration End-Tidal • Highest CO I concentration is the end-tidal value. • This is the value you see on the monitor • Normal EtCO2 is 35 35-45mmHg • Best reflection of Alveolar CO2 (Option A ) Phase IV Descending Phase • Inhalation begins • CO I level drops to zero as oxygen fills the airway.",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Monitoring_In_Anaesthesia-Previous_Year_Questions_Q2_q.png",
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 3,
    "question": "What is the frequency of tetanic stimulation used in neuromuscular monitoring?",
    "options": {
      "A": "0.2 Hz",
      "B": "2 Hz",
      "C": "20 Hz",
      "D": "50 Hz"
    },
    "correct_answer": "D",
    "explanation": "Correct Answer: D) 50 Hz Explanation: The frequency of tetanic stimulation used in neuromuscular monitoring is typically 50 Hz. This frequency is used to deliver a rapid, sustained series of stimuli that can help evaluate the neuromuscular block . Neuromuscular Monitoring: Heading Details Definition A monitor that assesses the effect of neuromuscular blockers on the neuromuscular junction. What it monitors Onset of blockade Intensity of blockade Reversal from blockade Involves two electrodes attached along the course of the ulnar nerve. Procedure Stimulate the ulnar nerve. Observe the response in the adductor pollicis muscle. Assess contraction to determine the degree of neuromuscular junction blockade. Common site Ulnar nerve Principle Supramaximal electrical stimulus is given to an accessible peripheral nerve (e.g., ulnar nerve), and the response is observed in the corresponding muscle group. Types of Stimulus Given Single twitch Train of four (TOF): Most common; 4 stimuli delivered at 2 Hz Tetanic stimulus: Continuous stimulus at 50 Hz Double burst stimulation Post-Tetanic count Counting of responses to single twitch stimulation after tetanic stimulation at 50 Hz or 100 Hz for 5 seconds. Indicates profound neuromuscular blockade if post-tetanic count is less than 5. Patterns of Nerve Stimulation for the evaluation of the neuromuscular function: Stimulation Pattern Mechanism Interpretation Clinical Implication and Limitation Single-Twitch Stimulation Single electrical stimulus applied at a frequency of 0.1 Hz to 1 Hz. Requires comparison to pre-NMBA administration value. Muscle response to the stimulus reflects neuromuscular block onset; changes in twitch height help assess blockade. Used to evaluate onset of neuromuscular block. Limited utility as a standalone test. Train-of-Four (TOF) Stimulation Four supramaximal stimuli delivered at 0.5-second intervals (2 Hz). Fade between responses indicates degree of block. TOF count assesses onset . TOF ratio measures recovery . Fade suggests nondepolarizing block. Most common pattern for intraoperative monitoring. Cannot measure deep block or phase I block. Double-Burst Stimulation (DBS) Two bursts of 50-Hz stimulation with a 750-ms interval. Fade between the two bursts indicates block. Fade between bursts correlates with TOF ratio. DBS is more sensitive for detecting fade. Better tactile detection of residual block than TOF but cannot reliably assess recovery at higher TOF ratios. Tetanic Stimulation High-frequency stimulation (50-100 Hz for 5 seconds) causing sustained muscle contraction . Fade indicates nondepolarizing block; sustained response suggests normal transmission or depolarizing block. Painful and limited use in practice. May cause lasting muscle antagonism, affecting recovery assessment. Post Tetanic Count (PTC) Stimulation Tetanic stimulation (50 Hz for 5 seconds) followed by single twitches at 1 Hz after 3 seconds. Counts discernible twitches after tetanic stimulation; assesses deep block not detectable by TOF. Used for monitoring deep neuromuscular blockade. Requires 6-minute intervals, limiting continuous use. Reference: Miller’s Anesthesia, ed. 9, page 1357 - 1360. https://www.openanesthesia.org/keywords/monitoring-depth-of-neuromuscular-blockade",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 4,
    "question": "Which of the following methods cannot be used to determine cardiac output?",
    "options": {
      "A": "Thermal dilution technique",
      "B": "Capnography",
      "C": "Esophageal doppler",
      "D": "Echocardiography"
    },
    "correct_answer": "B",
    "explanation": "measures the partial pressure of carbon dioxide (CO I ) in exhaled breath. It is commonly used to assess ventilation and end-tidal CO, levels but does not provide direct information about cardiac output. Cardiac output is volume of blood ejected by the heart into the aorta per minute and it is measured by: Method Principle Measurement Basis Key Considerations Fick Principle Oxygen uptake and arteriovenous difference Oxygen content in blood Accurate in steady states Indicator/Thermal Dilution Method (Option A ruled out) Indicator concentration dilution Injected dye or tracer Requires precise indicator handling Echocardiography (Transthoracic/transesophageal) (Options C & D ruled out) Ultrasound visualization and flow velocity Stroke volume estimation Non-invasive, real-time data Thoracic Electrical Bioimpedance Electrical impedance changes Impedance fluctuations Sensitive to external factors",
    "image": null,
    "explanation_image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Monitoring_In_Anaesthesia-Previous_Year_Questions_Q4_exp.jpg",
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 5,
    "question": "What could be the probable reason for the observed result in the capnograph of a patient who is intubated and undergoing controlled ventilation?",
    "options": {
      "A": "Esophageal intubation",
      "B": "Inspiration with cardiac oscillations",
      "C": "Bronchospasm",
      "D": "Spontaneous respiratory effort"
    },
    "correct_answer": "D",
    "explanation": "respiratory effort occurs when the patient attempts to breathe independently, alongside ventilator-delivered breaths. This typically results from insufficient sedation or inadequate neuromuscular blockade. Curare notch : Spontaneous effort during the plateau phase disrupts CO I exhalation, creating a characteristic curare notch in the capnograph waveform. This indicates patient-initiated breaths superimposed on ventilator-delivered breaths. Incorrect Options: Esophageal intubation (Option A) produces an abnormal capnograph waveform with minimal or no CO I detection. However, it does not explain the curare notch , which is specifically associated with spontaneous respiratory efforts. Inspiration with cardiac oscillations (Option B): Cardiac oscillations near the endotracheal tube during inspiration may cause small, irregular fluctuations in the CO I waveform. However, they do not produce the distinct curare notch observed during the plateau phase. Bronchospasm (Option C) alters the capnograph waveform by prolonging expiration and flattening or reducing CO I levels. However, it does not cause the curare notch, which is specific to spontaneous breathing efforts.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 6,
    "question": "Which among the following is most commonly used to monitor the depth of anaesthesia?",
    "options": {
      "A": "EEG",
      "B": "Provoked lower oesophageal contractility",
      "C": "Entropy",
      "D": "Bispectral index"
    },
    "correct_answer": "D",
    "explanation": "parameters, including EEG activity, to provide a numerical value that correlates with the depth of anesthesia. It is widely used in clinical practice to guide the administration of anesthesia and ensure the patient remains at an appropriate level of unconsciousness. Incorrect Options: Option A - EEG (Electroencephalogram): EEG measures brain electrical activity and can gauge anesthesia depth, but it's not the primary method for monitoring anesthesia depth. Option B - Provoked lower esophageal contractility: Monitoring lower esophageal contractility isn't commonly used to assess anesthesia depth, although it might be relevant in certain situations. Option C - Entropy: Entropy monitoring analyzes brainwave activity to indicate anesthesia depth, but it's less common compared to the Bispectral index (BIS). Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 7,
    "question": "Which of the following is measured by the device shown in the given image?",
    "options": {
      "A": "Oxygen saturation",
      "B": "Oxygen content of the blood",
      "C": "Partial pressure of oxygen",
      "D": "Amount of inspired oxygen"
    },
    "correct_answer": "A",
    "explanation": "used to measure the oxygen saturation level in the blood. It provides a numerical value, typically expressed as a percentage, indicating the percentage of hemoglobin in the blood that is saturated with oxygen. Incorrect Options: Option B - Oxygen content of the blood: The pulse oximeter measures oxygen saturation, not the actual oxygen content in the blood. Option C - Partial pressure of oxygen: The pulse oximeter measures oxygen saturation, not the partial pressure of oxygen (PO2). Option D - Amount of inspired oxygen: The pulse oximeter only measures blood oxygen saturation, not the amount or concentration of inspired oxygen. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": "https://raw.githubusercontent.com/tk22kalal/mcqimage/main/p/pjson/images/Monitoring_In_Anaesthesia-Previous_Year_Questions_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 8,
    "question": "Which of the following nerves is popularly used in clinical anesthesia to monitor neuromuscular blockade?",
    "options": {
      "A": "Ulnar Nerve",
      "B": "Median Nerve",
      "C": "Radial nerve",
      "D": "Mandibular nerve"
    },
    "correct_answer": "A",
    "explanation": "stimulus is given to a peripheral nerve that can be accessed quickly, and the muscle response to the stimulus is noted. One of the easily accessible nerves is the ulnar nerve, so it is preferred for monitoring it. Hence, option A is the correct answer to the question given. Incorrect Options: Option B - Median Nerve: It is not commonly used in clinical anesthesia to monitor neuromuscular blockade. Option C - Radial Nerve: It is not commonly used in clinical anesthesia to monitor neuromuscular blockade. Option D - Mandibular Nerve: It is not commonly used in clinical anesthesia to monitor neuromuscular blockade. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 9,
    "question": "Cardiac output can be determined using the following except?",
    "options": {
      "A": "Thermal dilution technique",
      "B": "Capnography",
      "C": "Esophageal doppler",
      "D": "Echocardiography"
    },
    "correct_answer": "B",
    "explanation": "concentration or partial pressure of carbon dioxide (CO2) in the respiratory gases. While capnography provides valuable information about respiratory status and CO2 elimination, it does not directly measure cardiac output. Therefore, it is not a method for determining cardiac output. Incorrect Options: Option A - Thermal dilution technique: The thermal dilution technique involves the injection of a cold or warm saline solution into a central vein, typically the pulmonary artery or right atrium. By measuring the change in temperature over time at a distant site, such as the pulmonary artery or a peripheral artery, cardiac output can be calculated based on the principles of thermal dilution. This technique is commonly used in pulmonary artery catheterization. Option C - Esophageal Doppler: Esophageal Doppler is a minimally invasive technique that uses an ultrasound probe inserted into the esophagus to measure blood flow velocity in the descending thoracic aorta. By measuring the blood flow velocity, the cross-sectional area of the aorta can be estimated, allowing for the calculation of stroke volume and subsequently cardiac output. Option D - Echocardiography: Echocardiography utilizes ultrasound waves to visualize the heart's structures and assess its function. It provides a non-invasive and comprehensive evaluation of cardiac anatomy and hemodynamics. Cardiac output can be indirectly calculated using echocardiography by measuring the left ventricular outflow tract (LVOT) diameter and velocity-time integral (VTI) of blood flow through the LVOT. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  },
  {
    "q_no": 10,
    "question": "What is the most probable cause of the patient's hypotension and cardiac arrhythmia during modified radical neck dissection (MRND) for laryngeal malignancy, when the internal jugular vein is being ligated, leading to a drop in end-tidal CO 2 (etCO 2 ) from 40 mm Hg to 14 mmHg?",
    "options": {
      "A": "Sympathetic overactivity",
      "B": "Vagal stimulation",
      "C": "Venous air embolism",
      "D": "Carotid body stimulation"
    },
    "correct_answer": "C",
    "explanation": "modified radical neck dissection (MRND), happens when air enters the venous system, often from internal jugular vein manipulation. This air can block blood flow to the heart's right side, leading to reduced cardiac output, systemic hypotension, and cardiac arrhythmias. It can also lower etCO2 levels due to impaired perfusion and ventilation.Transesophageal echocardiography (TEE): The most sensitive and best monitor to detect venous air embolism Incorrect Options: Option A - Sympathetic overactivity: Sympathetic overactivity usually increases blood pressure, heart rate, and respiratory rate, but it's unlikely to cause the sudden drop in etCO2, hypotension, and cardiac arrhythmia observed here.. Option B - Vagal stimulation: Vagal stimulation triggers the parasympathetic nervous system, causing bradycardia and occasionally hypotension, but it's not typically associated with significant etCO2 drops or cardiac arrhythmias. Option D - Carotid body stimulation: Stimulating the carotid body increases sympathetic activity, raising blood pressure and heart rate. However, it's not linked to the sudden etCO2 drop, hypotension, and cardiac arrhythmia described. Reference: Morgan & Mikhail's Clinical Anesthesiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Monitoring In Anaesthesia-Previous Year Questions"
  }
]