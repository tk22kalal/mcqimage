[
  {
    "q_no": 1,
    "question": "A patient undergoing surgery is administered succinylcholine for muscle relaxation. Shortly after administration, he develops hyperthermia, muscle rigidity, tremors, and tachycardia. What is the most appropriate treatment for this condition?",
    "options": {
      "A": "Neostigmine",
      "B": "Dantrolene sodium",
      "C": "Atropine",
      "D": "Midazolam"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Dantrolene sodium Explanation: The clinical manifestations indicate malignant hyperthermia, a rare but life-threatening genetic disorder triggered by certain anesthetic agents, particularly succinylcholine . It is characterized by the rapid onset of hyperthermia, muscle rigidity, tachycardia, and metabolic acidosis following exposure to these triggering agents. The first-line treatment and specific antidote for malignant hyperthermia is Dantrolene sodium . It works by inhibiting calcium release from the sarcoplasmic reticulum in skeletal muscle, effectively reducing the hypermetabolic state and preventing further temperature elevation. Immediate administration of Dantrolene is crucial to prevent severe complications and mortality. Diagnosis of malignant hyperthermia Best screening test: Creatine kinase test Gold Standard Diagnostic test: Halothane-Caffeine Test Treatment for malignant hyperthermia Discontinue volatile anaesthetics and succinylcholine immediately. Notify the surgeon and call for assistance. Hyperventilate the patient with 100% oxygen at a fresh flow rate of at least 10 L/min. Mix dantrolene sodium with sterile distilled water and administer 2.5 mg/kg intravenously as soon as possible. Repeat every 5 to 10 minutes until symptoms improve, with a maximum total dose of 10 mg/kg. Administer bicarbonate to address metabolic acidosis. Implement cooling measures, such as lavage, cooling blankets, and cold intravenous fluids. For severe hyperkalemia, administer dextrose (25–50 g IV) along with regular insulin (10–20 units IV for adults). Provide antiarrhythmic medications as necessary. Monitor end-tidal CO2 levels, electrolytes, blood gases, creatine kinase, serum myoglobin, core temperature, urinary output and colour, and coagulation status. Neostigmine (Option A) is an acetylcholinesterase inhibitor used primarily to reverse non-depolarizing neuromuscular blockade at the end of surgery. It would treat the underlying pathophysiology of malignant hyperthermia and could potentially worsen symptoms by increasing acetylcholine at neuromuscular junctions. Neostigmine is contraindicated in this scenario as it may exacerbate the hypermetabolic crisis. Atropine (Option C) is an anticholinergic medication that blocks muscarinic receptors. It would not treat malignant hyperthermia and might actually worsen the condition by inhibiting sweating and further elevating body temperature. Additionally, it could exacerbate the tachycardia already present in this patient. Midazolam (Option D) is a benzodiazepine with sedative, anxiolytic, and amnestic properties. While it might provide some symptomatic relief through sedation, it does not address the underlying pathophysiology of malignant hyperthermia.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Previous Year Questions"
  },
  {
    "q_no": 2,
    "question": "While doing a subclavian venous catheterization, the patient suddenly desaturated and on examination of the chest, there was hyper resonance in the apical area of the right lung. What is the most likely diagnosis here?",
    "options": {
      "A": "Arterial puncture",
      "B": "Pneumothorax",
      "C": "Cardiac tamponade",
      "D": "Chylothorax"
    },
    "correct_answer": "B",
    "explanation": "Correct Answer: B) Pneumothorax Explanation: Subclavian venous catheterization involves inserting a needle near the apex of the lung. Pneumothorax occurs when air leaks into the space between the lung and the chest wall (pleural space). This can happen as a complication of subclavian line placement if the needle punctures the lung. Hyperresonance on chest examination is a classic sign of pneumothorax. Desaturation (low oxygen saturation) is another expected finding in pneumothorax as the lung's ability to oxygenate blood is compromised. Central Venous Catheter Insertion: Indications: Inaccessible peripheral veins Hemodialysis Central Venous Pressure (CVP) measurement. Administration of drugs noxious to peripheral veins Contraindications: Thrombocytopenia: Coagulopathies Abnormal anatomy Complications: Immediate Complications: Cardiac or vascular complications (arrhythmias, arterial/venous injuries, damage to major vessels) Pulmonary complications (pneumothorax, chylothorax, nerve/tracheal injury, air embolism) Delayed Complications: Infections (sepsis, shock, death) Device dysfunction (blockage, thrombosis, fracture, stenosis, infection) Arterial puncture (Option A): While possible during subclavian line placement, it wouldn't directly cause hyperresonance. It would typically present with pulsatile blood return and potential hematoma formation. Cardiac tamponade (Option C): This involves fluid accumulation in the sac around the heart, which would cause muffled heart sounds, not hyperresonance. Chylothorax(Option D): This is the presence of lymphatic fluid in the pleural space, usually due to damage to the thoracic duct. It's less likely to occur acutely during subclavian line placement and wouldn't typically cause hyperresonance. Reference: https://pmc.ncbi.nlm.nih.gov/articles/PMC2691520/",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Previous Year Questions"
  },
  {
    "q_no": 3,
    "question": "What should be the next course of action in managing a 50-year-old patient who has a medical history of hypertension and diabetes mellitus, and is currently presenting with a feeble pulse and a blood pressure reading of 90/40 mm Hg?",
    "options": {
      "A": "IV adenosine",
      "B": "IV diltiazem",
      "C": "DC cardioversion",
      "D": "Ibutilide"
    },
    "correct_answer": "C",
    "explanation": "is characterised by a rapid heart rhythm, which in this case is associated with low blood pressure and a weak pulse , making the situation haemodynamically unstable. Immediate intervention is essential for stabilisation. DC Cardioversion : Direct current (DC) cardioversion delivers a synchronised electrical shock, which is the most effective and rapid method to terminate the tachycardia. This restores sinus rhythm, improving cardiac output and blood pressure in unstable patients. IV adenosine (Option A): Adenosine can transiently halt the tachycardia by inducing temporary AV nodal block. However, in haemodynamically unstable patients, it is not the first choice as it may worsen the instability by causing transient asystole or severe bradycardia. IV Diltiazem (Option B): Diltiazem slows AV nodal conduction and can terminate PSVT. However, in patients with low blood pressure and haemodynamic instability , it is contraindicated as it may further depress cardiac output and exacerbate hypotension. Ibutilide (Option D): Ibutilide, a class III antiarrhythmic, has a slower onset of action and is not appropriate in emergencies requiring immediate restoration of rhythm. It also carries a risk of arrhythmias, such as torsades de pointes. Reference: Morgan and Mikhail’s Clinical Anaesthesia, 5th Edition, Page 483 Miller’s Anesthesia, 8th Edition, Page 1440",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Previous Year Questions"
  },
  {
    "q_no": 4,
    "question": "Anaesthesia given to dog:",
    "options": {
      "A": "Ketamine",
      "B": "Medetomidine hydrochloride",
      "C": "Midazolam",
      "D": "All of the above"
    },
    "correct_answer": "D",
    "explanation": "and midazolam are all commonly used anesthetic agents in veterinary medicine, including for dogs. Each of these drugs has specific properties and uses in anesthesia for different purposes and stages of anesthesia. Incorrect options: None of the choices are incorrect since all of them can be used as anesthesia agents in dogs. Reference: .",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Miscellaneous-Previous Year Questions"
  }
]