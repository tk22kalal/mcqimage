[
  {
    "q_no": 1,
    "question": "Question 1: Identify the condenser in the following image.",
    "options": {
      "a": "Above the stage",
      "b": "Below the stage",
      "c": "Near the eyepiece",
      "d": "Above the objective lenses"
    },
    "correct_answer": "b",
    "explanation": "This is a modern compound microscope, and the condenser is located below the stage. The purpose of the condenser lens is to focus the light from the illuminator onto the specimen. \nMicroscopes with a stage condenser lens render a sharper image than those with no condenser \nlens. The simple microscope was invented first by Antonie van Leeuwenhoek, the father of microscopy \nand microbiology. It uses 1 lens for magnification. The compound microscope, introduced by \nHans and Zacharias Janssen uses 2 lenses, an objective lens and an eyepiece, to provide better \nmagnification power than the simple microscope.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 28-year-old sex worker presented with a painless ulcer on her vulva. On examination, \ninguinal lymphadenopathy is present. Which of the following methods has been used to \ndemonstrate the causative agent as per the given image? 4 \nSold by @itachibot",
    "options": {
      "a": "Dark-field microscopy",
      "b": "Phase contrast microscopy",
      "c": "Fluorescent microscopy",
      "d": "Electron microscopy"
    },
    "correct_answer": "a",
    "explanation": "15 \nSold by @itachibot A painless genital ulcer with inguinal lymphadenopathy with the presence of spiral organisms on \nmicroscopy is suggestive of syphilis. It is caused by Treponema pallidum, demonstrated \nby dark-field microscopy. Dark-field microscopy images have a dark background with a refractile organism. The dark \nground microscope has an optical system that enhances the contrast of unstained bodies. It uses \nreflected light and has a higher resolving power than the light microscope. Dark-field microscopy \nis the the most specific and sensitive technique to visualize Treponema pallidum when an active \nchancre or condyloma lata is present. Other options: Option B: Phase contrast microscopy improves the contrast to delineate structures within cells. A \ndark image is formed on a light background. Option C: Fluorescent microscopy uses fluorescent dyes like auramine-rhodamine to appreciate \nMycobacterial species and malarial parasites. Option D: The electron microscope, invented by Ernst Ruska, helps in appreciating viral \nstructures. It has a very high resolving power.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which among the following statements is false?",
    "options": {
      "a": "Muramic acid is present in prokaryotes",
      "b": "Mitotic division is present in eukaryotes",
      "c": "80S ribosome is present in prokaryotes",
      "d": "Multiple linear chromosomes present in eukaryotes"
    },
    "correct_answer": "c",
    "explanation": "80S ribosome is present in eukaryotes, while 70S ribosome is present in prokaryotes. 80S ribosome has subunits 60S and 40S, while 70S has subunits 50S and 30S.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following methods will not help you visualize the bacterial cell wall?",
    "options": {
      "a": "Fluorescence microscopy",
      "b": "Electron microscopy",
      "c": "Differential staining",
      "d": "Simple staining"
    },
    "correct_answer": "d",
    "explanation": "The cell wall of bacteria cannot be seen with simple stains or direct light microscopy. 16 \nSold by @itachibot The bacterial cell wall is present outside the plasma membrane and confers strength and shape to \nthe cell. It is composed of peptidoglycans. The cell wall can be demonstrated by the following \nmethods: • Plasmolysis • Microdissection • Reaction with specific antibodies • Mechanical rupture of the cell • Differential staining procedures (E.g. Chance's method) • Electron microscopy • Fluorescence microscopy",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 5,
    "question": "Question 5: In which of the following phases of the bacterial growth curve does sporulation occur?",
    "options": {
      "a": "D",
      "b": "A",
      "c": "C",
      "d": "B"
    },
    "correct_answer": "c",
    "explanation": "Sporulation occurs in the stationary phase of the bacterial growth curve, which is marked as C in \nthe image. The bacterial growth curve is obtained when a batch of bacteria is seeded in a liquid medium and \nincubated. It consists of 4 distinct phases: • Lag phase (A) - The bacteria adapt to a new environment. They synthesize and accumulate \nenzymes and metabolic intermediates required for multiplication. Thus, there is no increase in \ncell number but cell size increases. Maximum cell size is obtained towards the end of this phase. • Log or exponential phase (B) - The bacteria start dividing and their numbers increase \nexponentially with time. Cells are smaller and stain uniformly. The growth rate is constant. • Stationary phase (C) - There is depletion of nutrients and accumulation of toxic products. Thus, \ncell division reduces and a state of equilibrium is attained, where the number of new cells formed \nequals the number that die. Growth rate is zero. Sporulation occurs during this phase. Many \nbacteria produce secondary metabolic products such as exotoxins and antibiotics. • Death phase or the phase of decline (D) - Growth rate is negative. The population decreases due \nto cell death from nutritional exhaustion, toxin accumulation and the action of autolytic enzymes. \nInvolution forms are common. 17 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which organism has the following cell wall structure? 6 \nSold by @itachibot",
    "options": {
      "a": "Gram-positive organism",
      "b": "Gram-negative organism",
      "c": "Fungi",
      "d": "Mycobacteria"
    },
    "correct_answer": "a",
    "explanation": "The presence of teichoic acid and lipoteichoic acid with a thick peptidoglycan layer is a feature of \ngram-positive bacteria. The cell wall of bacteria provides shape and ridigity to the bacterial cell. It is composed of \npeptidoglycans. Gram negat \nive Gram positi \nve Present \nAbsent Teichoic acid, lipoteichoic aci \nd Thickness (Peptidoglycan) \nThicker \nThinner Variety of amino acids \nFew \nSeveral Absent \nPresent Aromatic and sulfur-containi \nng amino acids Absent \nPresent Lipopolysaccharides and oute \nr membrane 18 \nSold by @itachibot Other options: Option C: The cell wall of fungi consists of chitin, mannan, and polysaccharides (glucan). Option D: The cell wall of mycobacteria have mycolic acid, which is responsible for acid fastness.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 7,
    "question": "Question 7: Which of the following helps in bacterial adhesion?",
    "options": {
      "a": "Cytoplasmic membrane",
      "b": "Mesosomes",
      "c": "Fimbriae",
      "d": "Lipopolysaccharides"
    },
    "correct_answer": "c",
    "explanation": "Fimbriae help in bacterial adhesion. Fimbriae, also called pili, are hair-like surface appendage that projects from the cell surface as \nstraight filaments. They are primarily seen in Gram-negative bacteria. They are polymers of pilin. \nFimbriae are classified based on the function as ordinary pili - for adhesion - and sex pili - \ninvolved in bacterial conjugation. The functions of pili are given below: • Bacterial conjugation through sex pili, which transfer of genetic material occurs. • Bacterial adhesion of symbiotic and pathogenic bacteria to host cells using adhesins. • Resistance to phagocytosis. • Antigenic pilin proteins are responsible for the immune response. • Twitching motility to bacteria.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 8,
    "question": "Question 8: Pasteurization is done at  \n.",
    "options": {
      "a": "73 degree Celsius for 20 minutes",
      "b": "63 degree Celsius for 30 minutes",
      "c": "72 degree Celsius for 30 seconds",
      "d": "63 degree Celsius for 30 seconds"
    },
    "correct_answer": "b",
    "explanation": "Pasteurization is done at 63 degree Celsius for 30 minutes. Pasteurization is the process of applying heat to milk to kill or stunt the growth of pathogenic \nbacteria. It was developed by Louis Pasteur. There are two methods for pasteurization: • Holder method: Milk is heated at 63°C for 30 minutes 19 \nSold by @itachibot • Flash process: Milk is heated to 72°C for 15–20 seconds Once heated appropriately, the milk is cooled quickly to 13°C or lower. All the non-sporing \npathogens (mycobacteria, brucellae, salmonellae) are killed in pasteurization. In the Holder \nmethod, heat resistant Coxiella burnetti may survive. Note: Louis Pasteur pioneered the techniques of pasteurization and sterilization. He also first \nadvanced the germ theory of disease which states that most diseases were caused by \nmicroorganisms. Furthermore, he disproved the theory of spontaneous generation and developed \nvaccines for rabies and fowl cholera. He is thus known as the father of modern microbiology.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 9,
    "question": "Question 9: Which of the following methods of sterilization involves exposure to 100 °C for 20 minutes on \n3 successive days?",
    "options": {
      "a": "Autoclaving",
      "b": "Tyndallization",
      "c": "Pasteurization",
      "d": "Inspissation"
    },
    "correct_answer": "b",
    "explanation": "The method of sterilization that involves exposure at 100°C for 20 minutes for 3 successive days is \ncalled tyndallization or intermittent sterilization. Tyndallization, which utilizes steam, was used for sterilization of media containing gelatin, egg, \nserum, or sugar. This method may not kill spores of certain anaerobes and \nthermophiles. Autoclaving has replaced this method now. Other options: Option A: Autoclaving involves heating at 121°C for 15 minutes at a pressure of 15psi. This is the \nused for intruments, linen, laboratory ware. Option C: In pasteurization, milk is heated at either 63°C for 30 minutes (the holder method) or at \n72°C for 15–20 seconds (the flash process), followed by cooling quickly to 13°C or lower. Option D: Heating an article at 80–85 °C for 30 minutes on 3 consecutive days is called \ninspissation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following works by disrupting the cell membrane? 7 \nSold by @itachibot",
    "options": {
      "a": "Lysol",
      "b": "Povidone-iodine",
      "c": "Thiomersal",
      "d": "Ethylene oxide"
    },
    "correct_answer": "a",
    "explanation": "Lysol works by disrupting the cell membrane. Lysol is a phenol compound, which is obtained by distillation of coal tar. Phenols cause cell \nmembrane damage and inactivate membrane-bound oxidases and dehydrogenases. This causes \nlysis and release of cell contents. Low concentrations of phenol can precipitate proteins. They are \nnot inactivated by organic matter and are thus useful disinfectants. The mechnisms of action of other disinfecting agents are: • DNA damage • Ionizing radiation • Ultraviolet light • Hydrogen peroxide • DNA reactive chemicals like acriflavin. • Protein modification 20 \nSold by @itachibot • Alcohol • Chlorine • Iodine • Heavy metals (e.g. thiomersal) • Hydrogen peroxide • Formaldehyde • Glutaraldehyde • Ethylene oxide • Acids and alkalis",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following methods is used in the test shown below?",
    "options": {
      "a": "Streak culture",
      "b": "Lawn culture",
      "c": "Stroke culture",
      "d": "Stab culture"
    },
    "correct_answer": "b",
    "explanation": "The given image shows antibiotic sensitivity testing which uses the lawn culture method. Lawn or carpet culture is the method in which a uniform surface growth of bacterium is present \non the medium. It is used for antibiotic sensitivity testing (disc method) and bacteriophage typing. \nStab culture (option D) is used for demonstration of gelatin liquefaction and oxygen requirements \nof bacterium, for maintenance of stock cultures. Streak culture (option A) is routinely used for the \nisolation of bacteria in pure culture from clinical specimens. Stroke culture (option C) is used for \nproviding pure growth of bacterium for slide agglutination and other diagnostic tests. Other \nmethods of culture include: • Liquid culture - These are preferred for inocula containing antibiotics and other inhibitory \nsubstances. • Pour plate culture - It gives an estimate of viable bacterial count in a suspension. 21 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 12,
    "question": "Question 12: In which of the following organisms will the following phenomenon not be observed in? 8 \nSold by @itachibot",
    "options": {
      "a": "Bacillus anthracis",
      "b": "Klebsiella pneumoniae",
      "c": "Neisseria gonorrheae",
      "d": "Hemophilus influenzae"
    },
    "correct_answer": "c",
    "explanation": "The given image shows Quellung reaction (halo around the bacteria) and is seen in capsulated \nbacteria. Neisseria gonorrhoeae is not capsulated, therefore Quellung reaction will not be \nobserved in it. In Quellung reaction, a suspension of a capsulated bacterium is mixed with its specific \nanticapsular serum and examined under the microscope. The anticapsular antibodies bind to the \ncapsule and thus the capsule becomes very prominent and appears swollen. Capsulated organisms \ncan be remembered with the following mnemonic: Some - Streptococcus pneumoniae Killers - Klebsiella pneumoniae Have - Haemophilus influenzae Nice - Neisseria meningitidis Capsules - Cryptococcus neoformans",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 13,
    "question": "Question 13: A 32-year-old laborer working at a construction site presented with fever and hemoptysis. The \nsputum sample collected for examination showed the following. The smear will be stained by \nwhich of the following sequences?",
    "options": {
      "a": "Gentian violet - iodine - alcohol - saffranin",
      "b": "Methylene blue - malachite green- acetic acid-water",
      "c": "Methanol-methylene blue-acid-water",
      "d": "Carbol fuschin - acid-alcohol - methylene blue"
    },
    "correct_answer": "d",
    "explanation": "The given clinical vignette of fever and hemoptysis in a labourer with the sputum smear \nshowing acid-fast bacilli is suggestive of tuberculosis. Mycobacterium tuberculosis, detected on \nsputum smear, is appreciated by Ziehl-Neelsen staining, which would includes carbol fuschin - \nacid - alcohol - methylene blue. Acid-fast bacteria (like MTB) in a stained Ziehl-Neelsen (ZN) smear appear bright red against a \nblue background. Steps involved in ZN staining are: • Place the sample on slide evenly spread it with rotational movement • Air-dry the slide and fix it by passing it over a flame • Apply carbol fuschin stain and heat to fix it. • Wash with water to remove excess stain • Decolourise with alcohol • Apply Methylene blue/Malachite green stain • Wash with water to remove excess stain • View under the microscope Kinyoun modified the classical ZN staining such that heat fixing is not required. It is called the \ncold method. It involves increasing the concentration of phenol acid and the duration of staining. \nThe slide is then washed with water and decolourized with acid alcohol. Counterstaining with \nLoeffler's methylene blue or malachite green is done for a minute and viewed under a microscope. \nAcid-fast bacteria in a stained smear appear bright red against a blue background. The image attached below summarizes the steps. 22 \nSold by @itachibot Option A: It depicts the order of Gram staining, which was discovered by Hans Christian Gram in \n1884. • Primary staining with para-rosaniline dye (crystal violet, methyl violet or gentian violet). • Application of dilute solution of iodine. • Decolorisation with an organic solvent (ethanol, acetone, aniline). • Counterstaining with the dye of contrasting colour (carbol fuchsin, safranine, neutral red). Option B: It includes the steps for performing Albert's stain which is used for detected \nCorynebacterium diphtheriae. • A heavy smear of the bacterial isolate is prepared on a glass slide and allowed to dry without \nfixing. • Albert’s stain is applied for (3-4) minutes. Then it is washed with water and Albert’s iodine is \napplied for one minute. • Wash with water and let dry with blotting paper. • Examine the slide under oil immersion. Corynebacterium diphtheriae are slender bacilli with an arrangement resembling the letters V or \nL. They have metachromatic granules at the poles of bacilli which are also called polar bodies, \nvolutin, or Babes-Ernst granules. Albert staining is useful in the demonstration of metachromatic \ngranules. The presence of metachromatic granules helps to distinguish C.diphtheriae from \ndiphtheroids which lack them. The images below show Corynebacterium diphtheriae. 23 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 14,
    "question": "Question 14: Given are a few case scenarios. The etiological agents of which of the following are \nmicroaerophilic?",
    "options": {
      "a": "2 and 5",
      "b": "3 and 4",
      "c": "1 and 4",
      "d": "1 and 2"
    },
    "correct_answer": "d",
    "explanation": "The aetiological agents of 1 and 2 are microaerophilic. The given case scenarios are: 1. A businessman with epigastric pain and positive urease test has peptic ulcer disease, caused by \nHelicobacter pylori. It is microaerophilic. 2. Diarrhea caused by Gram-negative, small, spirally curved rod-like, motile bacilli describes \nCampylobacter jejuni. It is microaerophilic. 3. Rice-water diarrhea and Gram-negative curved bacilli with 'fish-in-stream' appearance \ndescribes cholera caused by Vibrio cholerae. It is a facultative anaerobe. 4. Nasopharyngeal swab from a child with paroxysmal cough showing 'mercury drops' colonies \ndescribes Bordetella pertussis. It is an obligate aerobe. 5. Dry, rough, raised, irregular colonies on LJ medium describes Mycobacerium tuberculosis. It is \nan obligate aerobe. Microaerophilic organisms grow best in low oxygen tension (2-10% oxygen). Note: Mycobacteria, such as M. bovis, can grow at oxygen tensions ranging from atmospheric to \nmicroaerophilic conditions. However, M. tuberculosis is an obligate aerobe.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 15,
    "question": "Question 15: The given image shows a culture medium with lactose fermenting and non-lactose fermenting \nbacteria. Which of the following is not a component of the culture medium?",
    "options": {
      "a": "Taurocholate",
      "b": "Peptone",
      "c": "Neutral red",
      "d": "Cysteine"
    },
    "correct_answer": "d",
    "explanation": "The given image shows MacConkey agar. Cysteine is not a constituent of MacConkey agar. MacConkey agar is a differential or indicator medium. Lactose-fermenting organisms (Eg: E. coli) \nproduce a pink color, and non-lactose fermenting organisms (Shigella sp., Salmonella sp.) do not \nchange the color. Contents of MacConkey agar include peptone, lactose, agar, neutral red and 24 \nSold by @itachibot sodium taurocholate (Mnemonic- PLANT). MacConkey agar is also a selective medium i.e. the bile \nsalts (sodium taurocholate) and dyes (neutral red) inhibit the growth of Gram-positive organisms \nand Gram-negative cocci.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 16,
    "question": "Question 16: Which of the following is an enrichment medium?",
    "options": {
      "a": "B",
      "b": "C",
      "c": "A",
      "d": "D"
    },
    "correct_answer": "c",
    "explanation": "The image 'A' represents alkaline peptone water, which is an enrichment medium used for Vibrio \ncholerae. The other images represent: Image B- Blood agar with P. aeruginosa colonies Image C- Loeffler's serum slope, which is used to isolate C. diphtheriae Image D- Chocolate agar with F. tularensis colonies Enrichment media suppress the growth of commensal bacteria and allow for the growth of certain \norganisms. These media are used for samples with mixed flora e.g. stool. They are always liquid \nmedia, like alkaline peptone water. Other examples include tetrathionate broth and selenite-F \nbroth for Salmonella sp. and Shigella sp. Enriched medium are those media to which additional nutrients such as blood, serum, or egg are \nadded. They're used to grow bacteria with specific nutritional requirements. Examples include \nblood agar to test the hemolytic property of bacteria, chocolate agar for isolation of H. influenzae \nand Loeffler's serum slope for isolation of C. diphtheriae.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 17,
    "question": "Question 17: A microbiologist observes the following growth on a blood agar plate. Which of the following \nwill not be the etiological agent? 11 \nSold by @itachibot",
    "options": {
      "a": "Clostridium tetani",
      "b": "Corynebacterium diphtheriae",
      "c": "Proteus mirabilis",
      "d": "Bacillus cereus"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a swarming type of growth on the agar plate. It will not be caused by \nCorynebacterium diphtheriae. Swarming is the growth of motile bacteria in the form of a thin film on solid culture media. It is \nexhibited by the following: • Gram-positive bacilli - Clostridium tetani (option A), Bacillus cereus (option D) • Gram-negative bacilli - Proteus mirabilis (option C), Proteus vulgaris • Gram-negative halophilic bacteria- Vibrio parahaemolyticus Swarming can be inhibited by increasing the concentration of agar (6%), alcohol, sodium \nazide, boric acid, chloral hydrate, sulfonamide, and surface-active agents.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 18,
    "question": "Question 18: Bacterial transduction occurs by",
    "options": {
      "a": "Plasmids",
      "b": "Sex pili",
      "c": "Bacteriophage",
      "d": "Uptake of genetic material by other bacteria."
    },
    "correct_answer": "c",
    "explanation": "Bacterial transduction occurs by bacteriophages. Transduction is a process of acquiring bacterial DNA from a bacteriophage (virus) that has \nincorporated bacterial DNA from previous host bacteria. 25 \nSold by @itachibot Other methods of exchange of genetic material are transformation and \nconjugation. Transformation involves the uptake of genetic material from the environment, which \nis released by other bacteria. Conjugation is the direct transfer of DNA from one bacterial cell to \nanother bacterial cell through a sex pilus or bridge. The transferred DNA is a plasmid, a circle of \nDNA that is distinct from the main bacterial chromosome.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 19,
    "question": "Question 19: Which of the following principles is primarily used in polymerase chain reaction?",
    "options": {
      "a": "Transcription of DNA",
      "b": "It can amplify small amounts of DNA",
      "c": "It can amplify small amounts of RNA",
      "d": "Reverse transcription of RNA"
    },
    "correct_answer": "b",
    "explanation": "The primary principle used in polymerase chain reaction (PCR) is the amplification of small \namounts of DNA. PCR is an automated process in which a single or a few copies of a DNA piece is amplified to \ngenerate of thousands to millions of copies of that particular DNA sequence. There are 3 basic \nsteps are involved in PCR: • DNA extraction from microorganism • Amplification of extracted DNA - Denaturation (95°C), Primer annealing (55°C), Extension \n(72°C) • Gel electrophoresis of the amplified product PCR is used in rapid diagnostic tests for infections (e.g. HIV DNA), forensic investigations etc. The \nfounder of PCR is Karry B Mullis. 26 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 20,
    "question": "Question 20: Which of the following describes the reverse transcriptase enzyme used in RT-PCR correctly?",
    "options": {
      "a": "DNA-dependent RNA polymerase",
      "b": "RNA-dependent DNA polymerase",
      "c": "DNA-dependent DNA polymerase",
      "d": "RNA-dependent RNA polymerase"
    },
    "correct_answer": "b",
    "explanation": "The enzyme involved in RT-PCR is reverse transcriptase (RT) which has RNA-dependent DNA \npolymerase activity. In reverse transcription-polymerase chain reation (RT-PCR), reverse transcriptase synthesizes \nDNA from the RNA template. RT-PCR can be used for the demonstration of poliovirus RNA, \ncausing paralytic poliomyelitis, in CSF. It can also be used for the detection of viruses from \nnasopharyngeal swabs (SARS-CoV2, H1N1). In real-time RT-PCR, fluorescent dyes or DNA probes are used to quantify the pathogen DNA load \nin the specimen. So, it can be used to quantify viral loads in HIV, hepatitis B, etc., and is also \ncalled quantitative PCR (qPCR). 27 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 21,
    "question": "Question 21: What are jumping genes known as?",
    "options": {
      "a": "Episomes",
      "b": "Plasmids",
      "c": "Transposons",
      "d": "Cosmids"
    },
    "correct_answer": "c",
    "explanation": "Jumping genes are also called transposons. Transposons are genetic elements that can move between chromosomal and extra-chromosomal \nDNA molecules. Insertion of a transposon leads to acquisition of new characteristics by the \nrecipient DNA. Transposons contain several genes, including those necessary for their migration \nfrom one genetic locus to another. They may contain genes for specialised functions like antibiotic \nresistance. However, they do not contain genes for their replication. Jumping genes were discovered by Barbara McClintock and she was awarded the Nobel Prize in \nPhysiology or Medicine 1983 for the same. Other options: Options A and B: The cytoplasmic carriers of genetic information are termed plasmids or \nepisomes. Option D: A cosmid is a type of hybrid plasmid that contains a Lambda phage cos sequence. (Cos \nsites + plasmid = cosmids).",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 22,
    "question": "Question 22: In which of the following situations will you use a sanitizer?",
    "options": {
      "a": "A, B &amp; C only",
      "b": "A &amp; B only",
      "c": "A, B C &amp; D",
      "d": "C &amp; D only"
    },
    "correct_answer": "a",
    "explanation": "You should use a sanitiser before and after examining the patient and after touching the patients' \nsurroundings. The hands should be washed with soap and water thoroughly in case they are \nvisibly soiled. Sanitization is the process through which pathogenic organisms are reduced to safe levels on \ninanimate objects to reduce the likelihood of cross-infections. It is a component of hand-hygiene, \nwhich is demonstrated by the image below. 28 \nSold by @itachibot Note: Disinfectants like chlorhexidine and alexidine have a biguanide functional group. They are \nmostly used as oral disinfectants and hand products. They are bactericidal but not sporicidal. \nMycobacteria are also resistant to these compounds.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  },
  {
    "q_no": 23,
    "question": "Question 23: An orthopedician is performing the following procedure to visualize the anterior cruciate \nligament in a patient. Which of the following will be used to sterilise the instrument used? 13 \nSold by @itachibot",
    "options": {
      "a": "NOD-like receptors",
      "b": "Passive immunity",
      "c": "Combined immunity",
      "d": "Adoptive immunity"
    },
    "correct_answer": "c",
    "explanation": "The given image shows arthroscopy being performed. Arthroscopes are sterilized using plasma \nsterilization which utilises hydrogen peroxide. In plasma sterilisation, radiofrequency energy is applied to create an electromagnetic field \nthrough which hydrogen peroxide vapours are passed. This generates plasma which contains free \nradicals of hydrogen and oxygen. Plasma denatures all organisms and is used sterilize \narthroscopes and ureteroscopes. Sterilization control is monitored by Geobacillus \nstearothermophilus and Bacillus atrophaeus. Option A: Ethylene oxide has both microbicidal and sporicidal activity. It is used for sterilisation \nheat-sensitive equipment like heart-lung machines, respirators, suture materials etc. Sterilization \ncontrol is monitored by Bacillius atrophaeus and Bacillus subtilus. Option B: Gamma rays cause breakage of DNA. It destroys spores and vegetative cells, but is not \neffective against viruses. It is referred to as cold sterilisation and is used in commercial plants to \nsterilize plastics, syringes, swabs. Sterilization control is monitored by Bacillus pumilius. Option D: Ultraviolet rays are used to sterilise biosafety cabinets, entryways, operation theatres \nand laboratories. 29 \nSold by @itachibot Components of Immune system",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/General_Microbiology_Q23_q.jpg",
    "explanation_image": null,
    "chapter_heading": "General Microbiology"
  }
]