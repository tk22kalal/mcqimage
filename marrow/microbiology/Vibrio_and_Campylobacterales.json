[
  {
    "q_no": 1,
    "question": "Question 1: A child presents with profuse, painless diarrhea. Stool microscopy shows the following \nfinding. What is this characteristic appearance called?",
    "options": {
      "a": "School of fish appearance",
      "b": "Railroad appearance",
      "c": "Fish in stream appearance",
      "d": "Drumstick appearance."
    },
    "correct_answer": "c",
    "explanation": "The given clinical vignette is suggestive of cholera caused by Vibrio cholerae. The image \nshows the characteristic fish in stream appearance of Vibrio. Other options: Options A and B: School of fish appearance and railroad appearance are shown by Haemophilus \nducreyi. Option D: Drumstick appearance is shown by Clostridium tetani due to its spherical and terminal \nspores.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 2,
    "question": "Question 2: While studying the microscopic features of Vibrio cholerae, you observe the following finding. \nWhat type of motility can you see here? 218 \nSold by @itachibot",
    "options": {
      "a": "Lashing motility",
      "b": "Swarming motility",
      "c": "Darting motility",
      "d": "Twitching motility"
    },
    "correct_answer": "c",
    "explanation": "The given microscopic finding shows the darting motility characteristic of Vibrio cholerae. Vibrio cholerae is actively motile with a polar flagellum. The actively motile vibrios appear like a \n'swarm of gnats'.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 3,
    "question": "Question 3: On the basis of which antigen is Vibrio cholerae classified under the Sakazaki typing scheme?",
    "options": {
      "a": "O antigen",
      "b": "K antigen",
      "c": "H antigen",
      "d": "O and H antigen"
    },
    "correct_answer": "a",
    "explanation": "Vibrio cholerae are classified based on O antigen, under Sakazaki typing scheme. Based on the presence or absence of O antigen, V. cholerae is classified as O1 which agglutinate \nwith antisera to O1 group (agglutinable vibrios) and non-O1, which do not agglutinate with \nantisera to O1 group (non-agglutinable vibrios). As per the Gardner and Venkatraman classification, Vibrios are classified into Group A (V. \ncholerae) and Group B (others) based on H antigen or flagellar antigen. Gardner and Venkatraman classification: 228 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following statements is false regarding non-agglutinable vibrios?",
    "options": {
      "a": "They belong to serogroup O2 – O200",
      "b": "They are mostly pathogenic",
      "c": "They are not agglutinated by O-1 antiserum",
      "d": "These are similar to V. cholera in most cultural and biochemical reactions"
    },
    "correct_answer": "b",
    "explanation": "Non-agglutinable vibrios are non-pathogenic (except O139) and hence, they are called non-cholera \nvibrios. The vibrios which are not agglutinated by O-1 antiserum are called non-agglutinable (NAG) \nvibrios. They belong to the serogroups O2–O200 of which only serogroup O-139 is known to cause \nepidemics of cholera. They are similar to Vibrio cholerae in most biochemical reactions and \nculture characteristics, except that they are hemolytic to sheep erythrocytes and give a positive \nVoges-Proskauer reaction.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 5,
    "question": "Question 5: A microbiologist studying Vibrio cholera added sulphuric acid to a 24-hour peptone culture of \nthe organism and a reddish-pink color developed. Which of the following is true about the \ntest he performed?",
    "options": {
      "a": "It is known as methyl red test",
      "b": "A nitrosoindole compound is formed giving it the red colour",
      "c": "The red colour is obtained due to pigment production by the bacteria",
      "d": "The red colour is obtained due to acid &amp; gas production by Vibrio"
    },
    "correct_answer": "b",
    "explanation": "The test described here is the 'cholera red reaction' given by Vibrio cholera. When few drops of \nconcentrated sulphuric acid are added to a 24-hour peptone water culture, a reddish-pink colour \ndevelops due to the formation of nitrosoindole. Vibrio cholerae reduce nitrates to nitrites and \nconvert tryptophan to indole. These two properties contribute to the cholera red reaction. 229 \nSold by @itachibot Other options: Option A: The methyl red (MR) test is used to detect the production of sufficient acid during the \nfermentation of glucose by bacteria. It is used to classify Enterobacteriacae. Option C: Vibrio cholera does not produce any colored pigment. Option D: Vibrio ferments carbohydrates leading to production of acid but no gas.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 20-year-old woman presents with complaints of passing profuse loose stools which looked \nlike rice water for the past 3 days. There's a history of similar symptoms in the family. Stool \nsamples were sent to the lab for analysis and the test given in the image is performed. \nIdentify this test.",
    "options": {
      "a": "Loop test",
      "b": "String test",
      "c": "Wire test",
      "d": "Duodenal string test"
    },
    "correct_answer": "b",
    "explanation": "The given case scenario of passing profuse rice-water stools with similar complaints in the family \nsuggests a probable diagnosis of cholera. The test shown in the above image is the string test and \nit is performed to identify Vibrio cholerae. To perform the string test, a loopful of the bacterial culture is mixed with a drop of 0.5% sodium \ndeoxycholate in saline on a slide. The bacterial cells of Vibrio cholerae are lysed by sodium \ndeoxycholate, causing the suspension to lose its turbidity and become mucoid. A string is formed \nwhen the loop is drawn away from the suspension. Note: The duodenal string test refers to the Entero test performed for the diagnosis of giardiasis.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 7,
    "question": "Question 7: 220 \nSold by @itachibot Which of the following bacteria is not microaerophilic?",
    "options": {
      "a": "Helicobacter pylori",
      "b": "Campylobacter jejuni",
      "c": "Mycobacterium bovis",
      "d": "Vibrio cholera"
    },
    "correct_answer": "d",
    "explanation": "Vibrio cholera is a facultative anaerobe and is not microaerophilic.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 8,
    "question": "Question 8: The disruption of which of the following is responsible for watery diarrhea in cholera caused \nby Vibrio?",
    "options": {
      "a": "Intercalated discs",
      "b": "Macula densa",
      "c": "Zonula occludens",
      "d": "Hemidesmosomes"
    },
    "correct_answer": "c",
    "explanation": "230 \nSold by @itachibot The disruption of zonula occludens is responsible for watery diarrhea in cholera caused by Vibrio \ncholerae. Zonula occludens toxin (Zot) is an enterotoxin elaborated by Vibrio cholerae that increases \nintestinal permeability by interacting with a mammalian cell receptor with subsequent activation \nof intracellular signaling leading to the disassembly of the intercellular tight junctions. Mechanism of action of cholera toxin: • The cholera toxin molecule consists of 1 A and 5 B subunits. The B (binding) units attach to the \nGM1 ganglioside receptors on the surface of jejunal epithelial cells. The A (active) subunit, \non being transported into the enterocyte, dissociates into A1 and A2. A2 fragment only links \nbiologically active A1 to the B subunit. • A1 causes prolonged activation of cellular adenylate cyclase and accumulation of cAMP, leading \nto outpouring into the small intestinal lumen, of large quantities of water and electrolytes. This \nleads to watery diarrhea which is isotonic with plasma but contains much more potassium and \nbicarbonate. • The toxin also inhibits the intestinal absorption of sodium and chloride. • All clinical manifestations and complications in cholera result from the massive water and \nelectrolyte depletion thus caused.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 9,
    "question": "Question 9: A young child was brought to the ER with a history of loose stools. On examination, she is \ntachycardic, appears lethargic and skin goes back slowly after the skin pinch test. She was \nadmitted and started on IV fluids and input-output charting was done. The given image \nshows stool output from the patient. Which of the following is the mechanism of action of the \ntoxin responsible for the same? 221 \nSold by @itachibot",
    "options": {
      "a": "Inhibit elongation factor -2",
      "b": "Toxin causes Increased guanyl cyclase activity",
      "c": "The toxin causes continued activation of adenylate cyclase",
      "d": "Inhibit 60S ribosomal subunit"
    },
    "correct_answer": "c",
    "explanation": "The given clinical scenario of dehydration, profuse diarrhea, and rice water stools is suggestive of \ncholera. Cholera toxin causes continued activation of adenylate cyclase. Mechanism of action of cholera toxin: • The cholera toxin molecule consists of 1 A and 5 B subunits. The B (binding) units attach to the \nGM1 ganglioside receptors on the surface of jejunal epithelial cells. The A (active) subunit, \non being transported into the enterocyte, dissociates into A1 and A2. A2 fragment only links \nbiologically active A1 to the B subunit. 231 \nSold by @itachibot • A1 causes prolonged activation of cellular adenylate cyclase and accumulation of cAMP, leading \nto outpouring into the small intestinal lumen, of large quantities of water and electrolytes and the \nconsequent watery diarrhea, that is isotonic with plasma but contains much more of potassium \nand bicarbonate. • The toxin also inhibits the intestinal absorption of sodium and chloride. • All clinical manifestations and complications in cholera result from the massive water and \nelectrolyte depletion thus caused.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following does not play a role in the virulence of Vibrio cholerae?",
    "options": {
      "a": "Lipopolysaccharide",
      "b": "Flagella",
      "c": "Pilum",
      "d": "Cholera toxin"
    },
    "correct_answer": "a",
    "explanation": "Vibrio cholerae possesses lipopolysaccharide (LPS) O antigen but it plays no role in the \npathogenesis of cholera. It is responsible for the immunity induced by killed vaccines. Factors involved in virulence of Vibrio cholerae: • In the small intestine, vibrios can cross the protective layer of mucus and reach the epithelial \ncells by using mucinase and other proteolytic enzymes. • Toxin co-regulated pilus(TCP), is essential for the adhesion to the epithelial surface and \ncolonization of the bacteria in small intestine. • Cholera toxin (also known as choleragen and cholera enterotoxin) causes watery diarrhea \nthrough cAMP-mediated pathway.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 11,
    "question": "Question 11: An El Tor vibrio was identified to be the causative agent of a diarrhea epidemic. Which of the \nfollowing is not a characteristic feature of this organism?",
    "options": {
      "a": "Resistant to El Tor phage V",
      "b": "Intrinsic resistance to polymyxin B",
      "c": "Voges-Proskauer test is positive",
      "d": "Not susceptible to group IV phage"
    },
    "correct_answer": "a",
    "explanation": "El Tor vibrios are susceptible to El Tor phage V. 232 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 12,
    "question": "Question 12: You are a medical officer at a district hospital and receive 13 patients with rice-water diarrhea \nand dehydration. You suspect cholera and want to send the stool samples to the hospital lab. \nWhich of the following media will you not use?",
    "options": {
      "a": "Venkatraman-Ramakrishnan medium",
      "b": "Cary-Blair medium",
      "c": "Monsur's GTTA medium",
      "d": "Nutrient agar"
    },
    "correct_answer": "d",
    "explanation": "Nutrient agar is not used to transport Vibrio cholerae. It is a simple media used to grow \nnon-fastidious organisms, but not to transport them. Transport media for Vibrio cholerae: • Venkatraman-Ramakrishnan (VR) medium • Cary-Blair medium If the specimen can reach the laboratory in a few hours, it may also be transported in enrichment \nmedia. Examples include: • Alkaline peptone water • Monsur's medium. If transport media are not available, strips of blotting paper may be soaked in the watery stool and \nsent to the laboratory packed in plastic envelopes.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 13,
    "question": "Question 13: 222 \nSold by @itachibot Which of the following bacteria shows Kanagawa phenomenon?",
    "options": {
      "a": "Vibrio cholerae",
      "b": "Vibrio parahaemolyticus",
      "c": "Vibrio vulnificus",
      "d": "Vibrio alginolyticus"
    },
    "correct_answer": "b",
    "explanation": "Kanagawa phenomenon is shown by Vibrio parahaemolyticus. It refers to hemolysis occuring \nwhen the bacteria are inoculated on Wagatsuma agar. Pathogenic strains of V. parahaemolyticus are hemolytic, while non-pathogenic strains are \nnon-hemolytic. This phenomenon occurs due to a heat-stable hemolysin.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 14,
    "question": "Question 14: An outbreak of food poisoning in a coastal city is determined to be due to contaminated \nseafood. The causative bacteria formed the following colonies on TCBS agar and showed \nhemolysis on Wagatsuma agar. Which of the following statements regarding the organism \nimplicated here is false?",
    "options": {
      "a": "It is non-capsulated",
      "b": "It shows bipolar staining",
      "c": "It produces peritrichous flagella on solid medium",
      "d": "It gives a positive string test"
    },
    "correct_answer": "a",
    "explanation": "The given case scenario of an organism that caused food poisoning due to contaminated seafood \nin addition to the cultural characteristics is suggestive of food contamination by Vibrio \nparahaemolyticus. It is a capsulated organism. V. parahaemolyticus is an enteropathogenic halophilic vibrio that is an important cause of food \npoisoning throughout the world. It inhabits the coastal seas, where it is found in shrimps, crabs, \nand oysters. It forms opaque green colonies with a raised centre and flat translucent periphery on TCBS agar \nunlike V. cholera which forms yellow colonies. Pathogenic strains show hemolysis on Wagatsuma \nagar which is known as Kanagawa phenomenon. This can be used as a test for pathogenecity. Other options: Option B: It shows bipolar staining and has a tendency for pleomorphism, especially when grown \non 3% salt agar. Option C: Unlike other vibrios, it produces peritrichous flagella when grown on solid media. Polar \nflagella are formed in liquid cultures. Option D: String test is positive like with V. cholera. 233 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 15,
    "question": "Question 15: Which of the following vibrios has the highest salt tolerance?",
    "options": {
      "a": "Vibrio mimicus",
      "b": "Vibrio parahaemolyticus",
      "c": "Vibrio vulnificus",
      "d": "Vibrio alginolyticus"
    },
    "correct_answer": "d",
    "explanation": "Vibrio with the highest salt tolerance of up to 10% NaCl is Vibrio alginolyticus. The salt tolerances of vibrio species are as follows: • V. cholerae optimally grows at 0.5–1% NaCl concentration. Its growth is inhibited by high \nconcentration of &gt;6% NaCl. • V. mimicus grows best at low salt concentrations of 0.5-1% like V. cholerae. • V. parahaemolyticus grows optimally salt concentration of 2-4 %. It has a salt tolerance up to \n8%. • V. vulnificus has a salt tolerance similar to V. parahaemolyticus. • V. alginolyticus has the highest salt tolerance of up to 10% NaCl.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 16,
    "question": "Question 16: A fisherman presented to the ER with a wound on his left leg. He tells you he had got a small \ncut a week back that got worse after his recent fishing trip. On examination, you note vesicles \nand bullae around the wound. Specimen taken from the bullae revealed lactose-fermenting \ncolonies. What is the causative agent?",
    "options": {
      "a": "Vibrio cholerae",
      "b": "Vibrio parahaemolyticus",
      "c": "Vibrio vulnificus",
      "d": "Vibrio alginolyticus"
    },
    "correct_answer": "c",
    "explanation": "The given case scenario of contact with seawater of an existing wound leading to cellulitis by a \nlactose-fermenting bacteria suggests infection with Vibrio vulnificus. V. vulnificus ferments lactose but not sucrose. It has a salt tolerance of up to 8%. Infection with V. vulnificus can manifest in 2 ways: • Soft-tissue infections can occur after contact with seawater and progress to cellulitis. • Primary septicemia can occur in patients, typically with underlying liver disease, who have \nacquired the organism through the gastrointestinal tract after recent consumption of raw \nshellfish. Note: V. cholerae, V. parahaemolyticus, and V. alginolyticus do not ferment lactose although \nlactose may be split very slowly by V. cholerae.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 17,
    "question": "Question 17: All of the following are correctly matched except:",
    "options": {
      "a": "Vibrio parahaemolyticus - Food poisoning",
      "b": "Vibrio alginolyticus - Infections of the eyes, ears and wounds",
      "c": "Vibrio vulnificus - Dysentery",
      "d": "Vibrio cholerae - Watery diarrhea"
    },
    "correct_answer": "c",
    "explanation": "Vibrio vulnificus causes wound infection following contact of open wounds with sea water. In immunocompromised hosts, and particularly those with liver disease, it penetrates the gut \nmucosa following ingestion. It may not cause any gastrointestinal manifestations and directly \nenters the bloodstream, leading to the rapid development of septicemia with high mortality. Other options: Option A: V. parahaemolyticus causes food poisoning associated with marine food. It also causes \nacute diarrhea, unassociated with food poisoning. Option B: V. alginolyticus has been associated with infections of the eyes, ears, and wounds in \nhuman beings exposed to seawater. 234 \nSold by @itachibot Option D: Cholera is caused by V. cholerae via its toxin but it does not cause dysentery which is \ncharacterized by bloody diarrhea. It is mainly associated with watery diarrhea.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 18,
    "question": "Question 18: A 17-year-old presents to you with complaints of passing loose stools. Given below are the \nfindings of his stool microscopy. Infection with which of the following bacteria would you \nconsider in your differential diagnosis? 224 \nSold by @itachibot",
    "options": {
      "a": "Shigella dysenteriae",
      "b": "Campylobacter jejuni",
      "c": "Escherichia coli",
      "d": "Bacillus cereus"
    },
    "correct_answer": "b",
    "explanation": "The given clip shows darting motility which is seen in Vibrio cholerae and Campylobacter jejuni. \nThus, among the given options, infection with C. jejuni should be considered as a differential \ndiagnosis in this case. Campylobacter jejuni possesses a single polar flagellum, hence it exhibits darting motility. Shigella dysenteriae is a non-motile organism.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 19,
    "question": "Question 19: A young man presented with complaints of a tingling sensation in his hands and feet. He also \ncomplains of weakness in his legs that is slowly spreading to his upper body. He had an \nepisode of bloody diarrhea 10 days ago. Which of the following organisms is the likely cause \nof this patient's condition?",
    "options": {
      "a": "Vibrio cholerae",
      "b": "Campylobacter jejuni",
      "c": "Leptospira interrogans",
      "d": "Helicobacter pylori"
    },
    "correct_answer": "b",
    "explanation": "The given case scenario with ascending paralysis is suggestive of the development Guillain-Barré \nsyndrome (GBS) following diarrhea. The organism that likely caused this patients condition is \nCampylobacter jejuni, which can cause diarrhea and trigger GBS. Campylobacter is a slender, spirally curved, gram-negative bacillus. Growth occurs under \nmicroaerophilic conditions. The organism also shows darting motility. Asymptomatic \ncampylobacter infection also may trigger Guillain-Barré syndrome. Guillain-Barre syndrome is an acute, fulminant polyradiculoneuropathy that is autoimmune in \nnature. In C. jejuni infection, bacterial lipopolysaccharide triggers an autoimmune response \nagainst axons via molecular mimicry, hence causing GBS. Other organisms associated with GBS \ninclude cytomegalovirus, M. pneumonia, and Epstein-Barr virus. 235 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 20,
    "question": "Question 20: A young man presented with bloody diarrhoea, abdominal pain, and fever. Lab investigations \nshowed leucocytosis and stool microscopy revealed RBCs and leucocytes. Darkfield \nmicroscopy showed a bacteria having darting motility. Which of the following is a selective \nculture medium for this organism?",
    "options": {
      "a": "Skirrow’s media",
      "b": "PLET medium",
      "c": "BSK medium",
      "d": "BCYE medium"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario of fever, bloody diarrhea, abdominal pain and leucocytosis alongwith \nmicroscopy findings of RBCs and WBCs in fecal smear, and organism having darting motility are \nsuggestive of infection with Campylobacter jejuni. The selective culture medium used for \nCampylobacter is Skirrow’s media. Other selective media for Campylobacter include: • Butzler's medium • Campy-BAP media The transport medium used for Campylobacter is the Cary-Blair medium.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 21,
    "question": "Question 21: Identify the organism &amp; the stain seen in the image given below.",
    "options": {
      "a": "Campylobacter jejuni; Gimenez stain",
      "b": "Helicobacter pylori; modified Giemsa stain",
      "c": "Treponema pallidum; Levaditi stain",
      "d": "Helicobacter pylori; Warthin-Starry stain"
    },
    "correct_answer": "d",
    "explanation": "The given image shows Helicobacter pylori stained using Warthin-Starry stain. H.pylori is a Gram-negative spiral rod that is motile by a unipolar tuft of \nlophotrichous flagella. The bacteria are present only in the mucus overlying the gastric \nmucosa and do not actually invade into the mucosa. The given image shows Helicobacter pylori on gastric mucosa stained with Warthin-Starry silver \nstain.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q21_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 22,
    "question": "Question 22: Which of the following organisms produce urease?",
    "options": {
      "a": "Helicobacter pylori",
      "b": "Salmonella",
      "c": "Escherichia coli",
      "d": "Shigella"
    },
    "correct_answer": "a",
    "explanation": "Helicobacter pylori produces urease. Urease-producing organisms: (Mnemonic-PUNCH) • Proteus 236 \nSold by @itachibot • Ureaplasma urealyticum • Nocardia • Cryptococcus, Corynebacterium urealyticum • H. pylori",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  },
  {
    "q_no": 23,
    "question": "Question 23: 226 \nSold by @itachibot You are a surgery resident evaluating a 45-year-old female patient with complaints of burning \nabdominal pain for the past 2 months that is relieved on taking food. You determine the \ndisease to have a bacterial etiology. Which of the following is the most sensitive test to detect \nthe causative organism here?",
    "options": {
      "a": "Pyocyanin",
      "b": "Pyoverdin",
      "c": "Pyorubin",
      "d": "Pyomelanin"
    },
    "correct_answer": "c",
    "explanation": "The given case scenario is suggestive of a duodenal ulcer caused by Helicobacter pylori. The urea \nbreath test is the most sensitive test for the diagnosis of Helicobacter pylori infection. To perform this test, the patient drinks a urea solution labelled with radioactive carbon-14. The \npatient then blows into a tube. If H. pylori urease is present, the urea is hydrolyzed, and labelled \ncarbon dioxide is detected in breath samples. The sensitivity of the urea breath test is &gt;90%. 237 \nSold by @itachibot Pseudomonas and Burkholderiales",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Vibrio_and_Campylobacterales_Q23_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Vibrio and Campylobacterales"
  }
]