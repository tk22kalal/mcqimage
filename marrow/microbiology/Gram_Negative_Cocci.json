[
  {
    "q_no": 1,
    "question": "Question 1: Which of the following is not a risk factor for Neisseria meningitidis infection?",
    "options": {
      "a": "Hypergammaglobulinemia",
      "b": "Mycoplasma infection",
      "c": "Hyposplenism",
      "d": "History of recent pilgrimage"
    },
    "correct_answer": "a",
    "explanation": "Hypogammaglobulinemia is a risk factor for Neisseria meningitidis infection, \nnot hypergammaglobulinemia. Risk factors for meningococcal infection include: • Overcrowding • Cigarette smoking • Mycoplasma infection • Hyposplenism • Hypogammaglobulinemia • History of travel like pilgrimage • Recent viral infection • Terminal complement pathway deficiency (C5-C9 Deficiency) - increases the risk of disseminated \ngonococcemia",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 22-year-old student presented with high-grade fever, and purpuric rash as shown in the \nimage below. CSF sample showed gram-negative diplococci. Which of the following is the \nmost likely aetiology?",
    "options": {
      "a": "Neisseria meningitidis",
      "b": "Pseudomonas aeruginosa",
      "c": "Streptococcus pneumoniae",
      "d": "E.coli"
    },
    "correct_answer": "a",
    "explanation": "This patient has a high-grade fever and is a student, so he presumably spends a lot of time in \ncrowded areas. The above image shows a purpuric rash. This patient's features are seen in \nmeningococcemia caused by Neisseria meningitidis, which are gram-negative diplococci. The organism enters the body through the nasopharynx by attaching to the epithelial cells with \nthe help of pili. From the nasopharynx, they enter the bloodstream producing bacteremia, and the \nsymptoms may resemble upper respiratory tract infection. Fulminant meningococcemia is the severe form, where the patient presents with high-grade fever \nand hemorrhagic rash. There is thrombosis of several small blood vessels in various organs with \nperivascular infiltration and petechial hemorrhages. Some patients with fulminant \nmeningococcemia may also develop disseminated intravascular coagulation, and circulatory \ncollapse, a condition known as Waterhouse–Friderichsen syndrome.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Gram_Negative_Cocci_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 3,
    "question": "Question 3: 284 \nSold by @itachibot What is the most common manifestation of Neisseria meningitidis infection?",
    "options": {
      "a": "Meningitis",
      "b": "Septicaemia",
      "c": "Fever",
      "d": "Asymptomatic"
    },
    "correct_answer": "d",
    "explanation": "Infection with Neisseria meningitidis is most commonly asymptomatic colonization in the \nnasopharynx of healthy individuals. Hence, a nasopharyngeal swab is used in the detection of \ncarriers. In some patients, local inflammation ensues with rhinitis and pharyngitis. Ceftriaxone as a single-dose IV/IM injection is highly (97%) effective in the eradication of carrier \nstate and can be used at all ages and also in pregnancy. Ciprofloxacin is also highly effective and \ncan be given orally, but it is not recommended in pregnancy and below 18 years of age. 291 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 4,
    "question": "Question 4: A 5-year-old girl with thalassemia major was prophylactically immunized with a \npolysaccharide meningococcal vaccine before being taken up for elective splenectomy. Which \ngroup of Neisseria meningitidis would she be susceptible to even after immunization?",
    "options": {
      "a": "Group A",
      "b": "Group B",
      "c": "Group C",
      "d": "Group Y"
    },
    "correct_answer": "b",
    "explanation": "Polysaccharide vaccines of Neisseria meningitidis do not offer protection against group B \nmeningococci. This is because the group B capsule is made up of sialic acid residue which is also \nexpressed on the surface of neural cells in the fetus. So, the B polysaccharide is perceived as 'self' \nand is poorly immunogenic. To overcome this issue and provide protection against group B meningococci, a new vaccine was \ndeveloped based on the surface protein i.e., non-capsular antigen of serogroup B meningococci. \nThis is the multicomponent meningococcal vaccine - 4CMenB. Meningococcal polysaccharide vaccines developed based on capsular antigen can be classified as: • Plain polysaccharide vaccines: • Bivalent (A and C), • Trivalent (A, C and W-135) • Tetravalent (A, C, Y, and W-135) • Conjugated polysaccharide vaccines: • Monovalent (A or C) • Quadrivalent (A, C, Y, and W-135) MenQuadfi vaccine",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 5,
    "question": "Question 5: A young man is brought to the ER with complaints of headache and fever. On examination, a \nmaculopapular rash is seen over his trunk &amp; extremities, and the following sign is \nelicited. Which of the following antibiotics should he be started on empirically?",
    "options": {
      "a": "Ceftriaxone",
      "b": "Rifampicin",
      "c": "Ciprofloxacin",
      "d": "Cefazolin"
    },
    "correct_answer": "a",
    "explanation": "The clip given shows a positive Kernig's sign. This in combination with the other clinical features \nindicates a diagnosis of meningococcal meningitis. Third-generation cephalosporins such as \nceftriaxone, cefotaxime, and ceftazidime are used empirically for the initiation of treatment for \nsuspected meningococcal meningitis. These drugs are administered as they also cover the various other potentially penicillin-resistant \nbacteria that may produce clinical features similar to that of meningococcal meningitis like \npenicillin-resistant pneumococcus. Also, some instances of reduced meningococcal sensitivity to \npenicillin have also been reported. Both meningococcal meningitis and meningococcal septicemia are conventionally treated for 7 \ndays, although courses of 3–5 days may be equally effective. Rifampicin can be used for \nprophylaxis for close contacts. Ceftriaxone can also be used for chemoprophylaxis, especially in \npregnant individuals. The image below shows petechial rashes in meningococcal infection 292 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Gram_Negative_Cocci_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 6,
    "question": "Question 6: You have to administer chemoprophylaxis to the contacts of a patient diagnosed with \nmeningococcal meningitis. Which of the following combinations is correct?",
    "options": {
      "a": "1, 2, 4 and 5",
      "b": "2, 4 and 5",
      "c": "1, 2, and 3",
      "d": "1, 3 and 5"
    },
    "correct_answer": "a",
    "explanation": "Ciprofloxacin, ceftriaxone, and rifampicin can be used for chemoprophylaxis of meningococcal \nmeningitis. Ciprofloxacin should not be given in pregnancy and to those below 18 years of age. Ceftriaxone is \npreferred in these cases as a single IM or IV dose. However, reduced susceptibility of isolates to \nceftriaxone has occasionally been reported. Recommended chemoprophylaxis for high-risk close contacts of meningococcal meningitis: Age \nDrug \nDose \nRoute and duration \nRemarks <1 mo \nnth Oral every 12 hrs for 2 days \n- Rifampicin \n5 mg/ \nkg >1 mo \nnth Oral every 12 hrs for 2 days \nNot recommended in pregna \nncy Rifampicin \n10 mg \n/kg <15 yea \nrs Ceftriaxone \n125m \ng IM single dose \nCan be given to children and \nis recommended in pregnanc \ny >15 yea \nrs Ceftriaxone \n250 \nmg IM single dose \nCan be given to children and \nis recommended in pregnanc \ny 500 \nmg >18 ye \nars Ciprofloxac \nin Oral single dose \nNot recommended in pregna \nncyPreferred for mass proph \nylaxis",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 7,
    "question": "Question 7: Which of the following differentiates meningococcus from gonococcus?",
    "options": {
      "a": "It is oxidase positive",
      "b": "It ferments glucose",
      "c": "It ferments maltose",
      "d": "It reduces nitrates"
    },
    "correct_answer": "c",
    "explanation": "293 \nSold by @itachibot Only meningococcus can ferment maltose, whereas both gonococcus and meningococcus can \nferment glucose. Both species are catalase and oxidase positive and neither of them can reduce nitrate. The only \nNeisseria species that can reduce nitrate is N. mucosa.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 8,
    "question": "Question 8: A 30-year-old man has treatment-resistant gonorrhea. You plan to send a sample of his \nurethral discharge to the lab for culture and sensitivity testing. What transport media would \nyou use for this purpose?",
    "options": {
      "a": "Cary-Blair medium",
      "b": "Thayer-Martin medium",
      "c": "Stuart’s medium",
      "d": "Pike’s medium"
    },
    "correct_answer": "c",
    "explanation": "Stuart’s medium is the transport media used for Neisseria gonorrheae and Neisseria meningitidis. Stuart’s medium is a semisolid, non-nutrient medium, which prevents microbial proliferation. It \nensures that microorganisms present are able to survive for a sufficiently long period of time.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 9,
    "question": "Question 9: 286 \nSold by @itachibot A 25-year old man presents with a history of urethral discharge for the last three days. A gram \nstain smear of the discharge is shown below. All of the following are true regarding the likely \netiology except?",
    "options": {
      "a": "Catalase and oxidase positive",
      "b": "Pili is a virulence factor",
      "c": "Obligate intracellular organism",
      "d": "Shows twitching motility"
    },
    "correct_answer": "c",
    "explanation": "The given slide shows gram-negative diplococci within the polymorphs, characteristic of Neisseria \ngonorrhoeae infection. Neisseria is not an obligate intracellular organism, it can also occur \nextracellularly i.e, it is a facultative intracellular organism. The other neisseria that are found as \nnormal inhabitants of the human respiratory tract occur extracellularly. Neisseria gonorrhoeae is a gram-negative, non-sporulating, non-motile diplococcus that \nis aerobic but may grow anaerobically also. It is oxidase and catalase-positive. Although Neisseria are non-motile organisms, they show twitching motility. This is a \nflagella-independent form of bacterial translocation over moist surfaces that occurs by the \nextension and retraction of polar type IV pili. These pili act as virulence factors by promoting \nattachment to host cells and inhibiting phagocytosis. Virulence factors for gonococci: • Outer Membrane Proteins (OMPs) • IgA proteases • Pili • Lipo-oligosaccharide (LOS) • Transferrin • Lactoferrin-binding protein",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Gram_Negative_Cocci_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following is the most common manifestation of gonorrhoea in males?",
    "options": {
      "a": "Asymptomatic",
      "b": "Acute urethritis",
      "c": "Discharging sinus",
      "d": "Genital ulcer"
    },
    "correct_answer": "b",
    "explanation": "Gonorrhea in males most commonly manifests as acute urethritis. In males, the disease starts as acute urethritis. This infection may extend along the urethra to \ninvolve the prostate, seminal vesicles, and epididymis. Chronic urethritis may lead to stricture \nformation. The infection may also spread to the periurethral tissues causing abscesses and \nmultiple discharging sinuses (watercan perineum). 294 \nSold by @itachibot In females, the initial infection involves the cervix, uteri and urethra which may extend to \nBartholin glands, endometrium, and fallopian tubes. The vaginal mucosa is not usually affected in \nadults because the stratified squamous epithelium is resistant to infection by the cocci, and also \nbecause of the acidic pH of vaginal secretions. Pelvic inflammatory disease and salpingitis may lead to sterility. Rarely peritonitis may develop \nwith perihepatic inflammation (Fitz-Hugh-Curtis syndrome) which may also occur \nfollowing Chlamydia trachomatis infection.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 11,
    "question": "Question 11: A patient with a history of sexual intercourse with a commercial sex worker 3 days back has \ndeveloped genital discharge resembling 'flow of seed' as shown below. What medium should \nbe used for the culture of the discharge? 287 \nSold by @itachibot",
    "options": {
      "a": "Mannitol salt agar",
      "b": "Thayer-Martin media",
      "c": "Potassium tellurite agar",
      "d": "TCBS agar"
    },
    "correct_answer": "b",
    "explanation": "The clinical scenario is suggestive of gonococcal urethritis caused by Neisseria \ngonorrhoeae. Thayer-Martin and modified Thayer-Martin media are used for the culture of this \norganism. Gonorrhoea may manifest as mucopurulent genital discharge which can be described \nas resembling 'flow of seed' (semen). Thayer-Martin medium contains vancomycin, colistin and nystatin. Gonorrhea is a sexually transmitted disease caused by N. gonorrhea. The major symptoms include \nurethritis, vaginal discharge, dyspareunia, and dysuria. In the laboratory diagnosis of N. \ngonorrhea, the discharge on Gram's stain reveals gram■negative intracellular diplococci within \nphagocytes. It acidifies glucose but not maltose in serum sugars. Stuart's medium is used for \ntransport while Thayer-Martin agar is used as a selective medium used to isolate N. gonorrhoeae. \nCultures can be obtained from chocolate agar or Mueller-Hinton agar. Stuart’s medium is the transport media used for Neisseria gonorrhea and Neisseria meningitides. \nIt is a semisolid, non-nutrient medium. Charcoal present in the medium neutralizes certain \nbacterial inhibitors while a reducing agent prevents oxidation.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Gram_Negative_Cocci_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 12,
    "question": "Question 12: Which of the following is not a content of modified Thayer-Martin medium?",
    "options": {
      "a": "Vancomycin",
      "b": "Trimethoprim",
      "c": "Nystatin",
      "d": "Polymyxin B"
    },
    "correct_answer": "d",
    "explanation": "Modified Thayer-Martin medium does not include polymyxin B. It includes polymyxin E, which is \nalso known as colistin. Modified Thayer–Martin medium is a selective media for Neisseria species. It includes: • Vancomycin - to inhibit most gram-positive bacteria. • Colistin (Polymyxin E) - to inhibit most gram-negative bacteria other than Neisseria. • Nystatin or anisomycin - to inhibit yeast. • Trimethoprim - to inhibit proteus. The contents of the Thayer-Martin medium are the same as that of the modified Thayer-Martin \nmedium except for the presence of trimethoprim in the modified version. The image below depicts \nThayer-Martin medium. 295 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 13,
    "question": "Question 13: An unresponsive middle-aged man with fever and petechial rashes was rushed into the ER. \nYou successfully resuscitate him. Abdominal ultrasound shows bilateral adrenal hemorrhage. \nWhich of the following statements is false regarding his condition?",
    "options": {
      "a": "Patients who recover may suffer from sloughing of the skin",
      "b": "The implicated organism can be isolated from the petechial rashes",
      "c": "The causative organism is Neisseria gonorrheae",
      "d": "Hypoplastic spleen is a risk factor for this condition"
    },
    "correct_answer": "c",
    "explanation": "The above scenario depicts Waterhouse-Friderichsen syndrome which is a complication seen in \ninfection with meningococci. Waterhouse-Friderichsen syndrome is also known as hemorrhagic \nadrenalitis or fulminant meningococcemia and is characterized by bilateral adrenal gland \nhemorrhage. Though Waterhouse-Freiderichsen syndrome is most often associated with meningococcal \nsepticemia, it may complicate sepsis caused by other organisms like certain streptococcal species \nalso. Hypoplastic spleen may also be associated with this condition and the implicated organism \ncan be isolated from the petechial rashes. Complications : • Shock, extensive hemorrhage within the skin • May fall into a coma • Death, usually after a few hours, due to adrenal insufficiency • Patients who recover may suffer from extensive sloughing of the skin and loss of digits due to \ngangrene. Fulminant meningococcemia is a medical emergency and needs to be treated with adequate \nantibiotics as fast as possible. Ceftriaxone is an antibiotic commonly used nowadays.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 14,
    "question": "Question 14: A 30-year-old woman with a history of recurrent pelvic inflammatory disease presents to the \nOPD with fever and right upper abdominal pain. A diagnostic laparoscopy was done and the \nfindings are as given below. Which of the following organisms could be the causative agent?",
    "options": {
      "a": "Treponema pallidum",
      "b": "Haemophilus ducreyi",
      "c": "Neisseria meningitidis",
      "d": "Chlamydia trachomatis"
    },
    "correct_answer": "d",
    "explanation": "The scenario depicted is Fitz-Hugh-Curtis syndrome which is a rare complication of pelvic \ninflammatory disease (PID) following infection with Chlamydia trachomatis or Neisseria \ngonorrhoeae. 296 \nSold by @itachibot It causes liver capsule inflammation leading to the creation of violin-string adhesions which can \nbe seen on laparoscopy. On CT imaging it appears as perihepatic inflammatory stranding and \nhepatic capsular enhancement. The major symptom and signs include right upper quadrant pain. It is also associated with \nminimal pelvic pain, vaginal discharge, or cervical motion tenderness.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Gram_Negative_Cocci_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 15,
    "question": "Question 15: Which is the true statement regarding gonococcal urethritis?",
    "options": {
      "a": "Symptoms are more severe in females than in males",
      "b": "Infection does not involve rectum and prostate",
      "c": "Dysuria is the most common presentation",
      "d": "Single dose of cefixime is the first line of treatment"
    },
    "correct_answer": "c",
    "explanation": "Acute urethritis is the most common clinical manifestation of gonorrhea in males and major \nsymptoms include urethral discharge and dysuria, usually without urinary frequency or urgency. Other options: Option A: The stratified squamous epithelium of the vagina is resistant to gonococcus, so infection \nis less severe in females. Option B: In males, it can involve rectum, prostate, and epididymitis, but it never involves testes. Option D: Rising minimum inhibitory concentration of cefixime worldwide has led the CDC to \ndiscontinue its recommendation of this agent as first-line treatment for uncomplicated gonorrhea. Third-generation cephalosporins have remained highly effective as single-dose therapy for \ngonorrhoea. Ceftriaxone (250mg, IM) single dose + azithromycin 1 g PO, single dose or \ndoxycycline 100 mg PO BD for 7 days is given. This also covers treatment for chlamydia (if \nchlamydial infection is not ruled out).",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 16,
    "question": "Question 16: Which of the following is not true about Neisseria gonorrhoeae? 289 \nSold by @itachibot",
    "options": {
      "a": "It is exclusively a human pathogen",
      "b": "Some strains may cause disseminated disease",
      "c": "Vaccination has no role in prevention",
      "d": "Drug resistance is only due to acquisition of plasmids"
    },
    "correct_answer": "d",
    "explanation": "Neisseria gonorrheae acquires resistance to antibiotics either by chromosomal mutations or by the \nacquisition of plasmids (R factors). These resistant strains are also known as: • PPNG - penicillinase-producing N. gonorrhoeae (plasmid-borne resistance) • TRNG - tetracycline-resistant N. gonorrhoeae (plasmid-borne resistance) • CMRNG - chromosomally mediated resistance in N. gonorrhoeae (resistance to both penicillin \nand tetracycline) • QRNG - quinolone resistant N. gonorrhoeae (due to alterations in DNA gyrase and \ntopoisomerase IV) Other options: Option A: N. gonorrhea is a fastidious organism and is exclusively a human pathogen. Option B: Some strains of N. gonorrhea can ascend up the genital tract and can lead to many \ndisseminated diseases such as septic arthritis and pelvic inflammatory disease. Option C: Vaccines are not effective against N. gonorrhea due to its antigenic variation and ability \nto invade neurophils. 297 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  },
  {
    "q_no": 17,
    "question": "Question 17: Which of the following is true about Moraxella catarrhalis?",
    "options": {
      "a": "Man to man transmission occurs",
      "b": "It is caused by R.prowazekii",
      "c": "Vector is Xenopsylla cheopis",
      "d": "Neill-Mooser reaction is negative"
    },
    "correct_answer": "a",
    "explanation": "Moraxella catarrhalis is a DNAse positive gram-negative diplococcus. It is the second most \ncommon bacterial cause of COPD exacerbations (after H. influenzae). It can also cause otitis \nmedia, sinusitis, tracheobronchitis, and pneumonia. It differs from pathogenic Neisseria as: • It does not ferment any carbohydrates - Asaccharolytic • Gives a positive tributyrin hydrolysis test. • Shows positive DNAse test. Angular conjunctivitis is caused by Moraxella lacunata, which is a gram-negative rod-shaped \nbacteria. Treatment is with oral amoxicillin and clauvulanic acid. 298 \nSold by @itachibot Rickettsia, Chlamydia and Mycoplasma",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Gram_Negative_Cocci_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Gram Negative Cocci"
  }
]