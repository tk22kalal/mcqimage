[
  {
    "q_no": 1,
    "question": "Question 1: A child presents with a high fever, acute abdominal pain, and malaise. The child passes small \namounts of bloody mucopurulent stools with increasing tenesmus and cramps. What is the \nmost likely causative organism?",
    "options": {
      "a": "Vibrio cholerae",
      "b": "Rotavirus",
      "c": "Shigella dysenteriae",
      "d": "Entamoeba histolytica"
    },
    "correct_answer": "c",
    "explanation": "Acute onset of symptoms (fever, abdominal cramps) with dysentery (bloody mucopurulent stools) \nand tenesmus is most likely due to Shigella dysenteriae. Shigella dysenteriae is a Gram-negative bacillus causing bacillary dysentery in humans. It is \nspread through faeco-oral transmission. Other options: Option A: Vibrio cholerae results in watery diarrhea with characteristic rice watery stools. Option B: Viruses such as rotavirus and norovirus causes watery diarrhea through mucosal \nirritation. Option D: Entamoeba histolytica results in gradual onset of symptoms usually 1-3 weeks with \ndysentery.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following toxins acts by inhibiting protein synthesis?",
    "options": {
      "a": "Cholera toxin",
      "b": "Shiga toxin",
      "c": "Pertussis toxin",
      "d": "Labile toxin of ETEC"
    },
    "correct_answer": "b",
    "explanation": "Shiga toxin acts by inhibiting protein synthesis. Shiga toxin or verotoxin is an exotoxin produced by Shigella species. It consists of two subunits A \nand B. The B subunit binds to globotriaosylceramide receptors on the target cell, and then, the A \nsubunit gets internalized. The A subunit leads to inhibition of 60S ribosome, leading to shut down \nof protein synthesis. Its site of action is in the endothelial cells of small blood vessels of GIT.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 3,
    "question": "Question 3: A 4-year-old boy developed bloody diarrhea and abdominal cramps. The bacteria isolated \nfrom the stool specimen did not ferment lactose or mannitol. Which of the following \norganisms is implicated here?",
    "options": {
      "a": "Shigella dysenteriae",
      "b": "Shigella flexneri",
      "c": "Shigella boydii",
      "d": "Shigella sonnei"
    },
    "correct_answer": "a",
    "explanation": "Shigella dysenteriae does not ferment mannitol and lactose. Shigella species cause bacillary dysentery (bloody diarrhea with abdominal cramps). They do not \nferment lactose, except S.sonnei which is a late lactose fermenter. To differentiate between the \nvarious Shigella species, mannitol fermentation is noted. Classification of pathogenic Shigella species: Designation \nGrou \np LactoseFermentation Mannitol Fermentati \non Ornithine decarboxyla \nse A \n- \n- \n- S. dysenteria \ne S. flexneri \nB \n+ \n- \n- S. boydii \nC \n+ \n- \n- S. sonnei \nD \n+ \n+ \nLate lactose fermente \nr 212 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following salmonellae is non-motile? 207 \nSold by @itachibot",
    "options": {
      "a": "Salmonella typhi",
      "b": "Salmonella enteridis",
      "c": "Salmonella gallinarum",
      "d": "Salmonella chester"
    },
    "correct_answer": "c",
    "explanation": "S. gallinarum is non-motile. Salmonellae are aerobic or facultatively anaerobic Gram-negative bacilli. They are motile due to \nthe presence of peritrichous flagella, except S. gallinarum and S. pullorum.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 5,
    "question": "Question 5: A Greek patient with travel history to India is diagnosed with enteric fever. What is the \nminimum amount of pathogen required to cause this condition?",
    "options": {
      "a": "1-10 bacilli",
      "b": "100 bacilli",
      "c": "10^3 -10^6 bacilli",
      "d": "10^8 -10^10 bacilli"
    },
    "correct_answer": "c",
    "explanation": "Enteric fever is caused by S. typhi or S. paratyphi. The minimum amount of S. typhi required to \ncause enteric fever is 103 to 106 organisms. Enteric fever spreads through the feco-oral route. It presents with step-ladder fever and \nabdominal pain after an incubation period of 10–20 days. Over the next week, the patient can \ndevelop abdominal distension, diarrhea, splenomegaly and characteristic rose spots on the \nabdomen due to vasculitis. The amount of pathogen required to cause an infection in the host is known as the infectious dose. \nThe infectious doses of few bacteria are given below: • Escherichia coli - 106 – 108 organisms • Shigella - 10 – 100 organisms • Escherichia coli O157:H7 - &lt;10 organisms",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 6,
    "question": "Question 6: What is the incubation period of Salmonella typhi?",
    "options": {
      "a": "2-5 days",
      "b": "5-21 days",
      "c": "14-25 days",
      "d": "20-30 days"
    },
    "correct_answer": "b",
    "explanation": "The incubation period for Salmonella typhi is from 5 to 21 days. The incubation period for Salmonella typhi typically averages 10–14 days, but can range from 5 to \n21 days. The duration is likely dependant on the inoculum size and the host’s health and immune \nstatus.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 25-year-old man presented to the ER with fever, splenomegaly, and a rash as shown in the \nimage below. After admission, he developed intestinal perforation and an exploratory \nlaparotomy revealed several longitudinal ulcers in the small bowel. What is the probable \ndiagnosis? 208 \nSold by @itachibot",
    "options": {
      "a": "Enteric fever",
      "b": "Tuberculosis",
      "c": "Amoebiasis",
      "d": "Hemorrhagic colitis"
    },
    "correct_answer": "a",
    "explanation": "The given image shows Rose spots. The combination of this with fever, splenomegaly, presence of \nlongitudinal ulcers in the intestine and intestinal perforation is suggestive of enteric fever. The term enteric fever includes typhoid fever caused by Salmonella typhi and paratyphoid fever \ncaused by Salmonella paratyphi A, B and C. Enteric fever presents with step ladder pyrexia. The fever is accompanied by relative bradycardia \nwhich is known as the Faget sign. Hepatosplenomegaly is a common finding on \nexamination. Rose spots that fade on pressure appear on the skin during the second or third \nweek. Since bile is a good culture medium for the bacilli, they multiply abundantly in the gallbladder \nand are discharged continuously into the intestine. In the intestine, it causes inflammation and 213 \nSold by @itachibot necrosis leaving behind the characteristic typhoid ulcers which are oriented along the axis of the \nintestine (longitudinal ulcers). Ulceration of the bowel leads to two major \ncomplications- intestinal perforation and hemorrhage. Option B: In intestinal tuberculosis, ulcers are perpendicular to the axis of the intestine \n(transverse ulcers). Option C: Flask shaped ulcers are characteristic of amoebiasis. Option D: Hemorrhagic colitis is caused by Shigella dysenteriae and some strains of E. coli. It is \ncharacterised by bloody diarrhea with tenesmus.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Shigella_and_Salmonella_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 8,
    "question": "Question 8: While evaluating a patient suspected to have enteric fever, you order a widely used tube \nagglutination test in the second week of his illness. Which of the following statements \nregarding this test is false?",
    "options": {
      "a": "H agglutinin titer &gt; 160 and O agglutinin titer &gt; 80 is considered significant",
      "b": "O antibody cannot differentiate between Salmonella types.",
      "c": "O antibody lasts longer and hence is not indicative of recent infection.",
      "d": "High titer value in a single test is not confirmative."
    },
    "correct_answer": "c",
    "explanation": "The tube agglutination test which is widely used for the diagnosis of enteric fever is the Widal test. \nThe O antibodies detected via this test disappear within a few weeks of disease resolution and so \nare indicative of recent infection. Widal test is a serological test for the measurement of O and H antigens of Salmonella typhi and \nSalmonella paratyphi present in the patient's serum. Four antigens are used- O antigens of S. \ntyphi (TO), H antigens of S. typhi (TH), H antigens of S. paratyphi A (AH) and H antigens of S. \nparatyphi B (BH). Paratyphoid O antigens cross-reacts with the typhoid O antigen due to the sharing of factor 12. It \nis not used in the test and thus, O antibody cannot differentiate between Salmonella types. H agglutinin titer &gt; 160 and O agglutinin titer &gt; 80 is considered significant. However, \na 4-fold rise in titers between 1st and 3rd week is more significant compared to a single high titer \nbecause of the possibility of an anamnestic reaction - a transient rise of titer due to unrelated \ninfections (malaria, dengue) in persons who had a prior enteric fever. After one week interval, if \nthe titer increases, it indicates true infection. If the titer decreases, it indicates an anamnestic \nreaction.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 9,
    "question": "Question 9: A young man with fever for 2 weeks has the following serology findings. Which of the given \nstatements is true about the disease he has?",
    "options": {
      "a": "Intestinal perforation following infection with S.typhi occurs in the 1st week.",
      "b": "Faget’s sign is seen in enteric fever.",
      "c": "In Widal test, Felix tube is used to detect H antigen.",
      "d": "Blood culture is the gold standard of diagnosis"
    },
    "correct_answer": "b",
    "explanation": "Widal results showing titers for O antibody &gt;80 and H antibody for S.typhi to be &gt;160 is \nsuggestive of enteric fever. Faget's sign is seen in enteric fever. Enteric fever, caused by Salmonella typhi and Salmonella paratyphi A, B and C, presents with step \nladder pyrexia. The fever rises one day and falls the subsequent morning. It continues to form \npeaks and troughs. Hepatosplenomegaly is a common finding on examination. Rose spots that \nfade on pressure appear on the skin during the second or third week. Faget's sign is the unusual \npairing of fever with bradycardia (relative bradycardia) instead of tachycardia. It is also observed \nin yellow fever, brucellosis, and tularemia. Intestinal perforation (option A) is a complication of \nenteric fever caused by Salmonella typhi. It occurs in the 3rd week following infection. Widal test is a serological test used for the diagnosis of enteric fever during the 2nd week. It \nmeasures the levels of H and O antigens in the patient's serum. 214 \nSold by @itachibot Bone marrow culture is the gold standard (option D) for diagnosis of enteric fever. Blood culture \nis most commonly performed to confirm the diagnosis, however, bone marrow is more sensitive. H antigen \nO antigen Flagellar antigen \nSomatic antigen Fluffy/woolly agglutination se \nen Granular agglutination seen Appear early and persist for s \nhorter duration Appear late and persist for lo \nnger duration Dreyer's tube (conical bottom) Felix tube (round bottom) us \ned used",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 10,
    "question": "Question 10: A patient, suspected to have enteric fever, has been started on ceftriaxone by his local village \nhealer 2 days ago. Which investigation will confirm his diagnosis at this stage?",
    "options": {
      "a": "Blood culture",
      "b": "Bone marrow culture",
      "c": "Stool culture",
      "d": "Urine culture"
    },
    "correct_answer": "b",
    "explanation": "Bone marrow culture is preferred at this stage. Bone marrow culture is the most sensitive test (&gt;80% sensitivity) for diagnosis of enteric fever. \nIt remains positive for upto 5 days after starting antibiotics, unlike blood culture. Hence, it is \npreferred in the patient above who has been on antibiotics for 2 days. Blood culture has a sensitivity of about 60% for diagnosis of enteric fever. Its sensitivity drops \nwith duration of illness, and is thus useful onlyduring the 1st week of enteric fever. It rapidly \nbecomes negative on treatment with antibiotics. Stool culture has a sensitivity of 30% and only \nyields positive results from the 2nd or 3rd week onwards. Urine culture has low sensitivity and \nmay be positive only after the 2nd week. Note: The sensitivity of diagnostic methods for enteric fever is duodenal content culture &gt; bone \nmarrow culture &gt; blood culture. However, duodenal content culture is rarely done in clinical \npractice.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 11,
    "question": "Question 11: You are administering a Vi capsular polysaccharide vaccine to a child in Germany before his \ntrip to India. Which of the following is false about the antigen used in this vaccine?",
    "options": {
      "a": "It is a capsular antigen",
      "b": "It is polysaccharide in nature",
      "c": "It is heat stable",
      "d": "It is alcohol stable"
    },
    "correct_answer": "c",
    "explanation": "Vi capsule polysaccharide antigen is a heat-labile antigen used in the Vi capsular polysaccharide \nvaccine (ViCPS) for typhoid. Vi antigen is found in Salmonella typhi, S. paratyphi C and S. dublin. It is a capsular antigen and \nis a polysaccharide. It acts as a virulence factor by inhibiting phagocytosis and resisting \ncomplement activation and bacterial lysis. It envelopes the O antigen, and thus, many S. typhi \nstrains fail to agglutinate with O antiserum. However, it can be destroyed by heat. It is alcohol \nstable. This antigen is poorly immunogenic. The Vi capsular polysaccharide vaccine (Vi CPS) contains purified Vi polysaccharide. It is given as \na single dose of 0.5ml intramuscularly to children over 2 years of age. It is recommended for \ntravellers to areas endemic for Salmonella infections. 215 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 12,
    "question": "Question 12: A man living in the UK is planning to travel to India. His doctor prescribes the necessary \nvaccines prior to travel including an oral typhoid vaccine. What is the schedule for this \nvaccine?",
    "options": {
      "a": "Day 1,3,5,7",
      "b": "Day 1,3,7,14",
      "c": "Day 1,7,14",
      "d": "Day 1,7,14,21"
    },
    "correct_answer": "a",
    "explanation": "The oral typhoid vaccine is given on days 1, 3, 5, and 7. Typhoral or Ty21a is a live attenuated oral typhoid vaccine. It is given in 4 doses given on days 1, \n3, 5, and 7. No antibiotics should be given during this period. lt is indicated only in individuals \nover 6 years of age. Protective immunity starts after 7 days of the last dose and lasts for 4 years. \nTy21a can also be administered to HIV-positive, asymptomatic individuals as long as their CD4 \ncount is above 200/mm3. It is contraindicated in immunocompromised patients.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 13,
    "question": "Question 13: Which of the following drugs is not used for typhoid fever in adults?",
    "options": {
      "a": "Azithromycin",
      "b": "Ciprofloxacin",
      "c": "Ceftriaxone",
      "d": "Amikacin"
    },
    "correct_answer": "d",
    "explanation": "Amikacin is not used in the treatment of typhoid fever. Amikacin is an aminoglycoside. Despite showing efficient in vitro killing of Salmonella, first- and \nsecond-generation cephalosporins and aminoglycosides have proven to be ineffective in actual \nclinical cases. Antibiotic therapy for enteric fever in adults Indication \nAgent \nDosage (Route) \nDuration, D \nays Empirical Treatment Ceftriaxone \n2 g/d (IV) \n10-14 Azithromycin \n1 g/d (PO) \n5 Fully Susceptible 5-7 Optimal treatment \nCiprofloxacin \n500 mg bid (PO) or 400 mg \nq12 h (IV) Azithromycin \n1 g/d (PO) \n5 Alternative treatment \nAmoxicillin \n1 g tid (PO) or 2 g q6h (IV) \n14 Chloramphenicol \n25 mg/kg tid (PO or IV) \n14-21 160/800 mg bid (PO) \n7-14 Trimethoprim-sulfamethoxaz \nole Multidrug-resistant, fluroqui \nnolone-susceptible Optimal treatment \nCeftriaxone \n2 g/d (IV) \n10-14 Azithromycin \n1 g/d (PO) \n5 5-14 Alternative treatment \nCiprofloxacin \n500 mg bid (PO) or 400 mg \nq12h (IV) Quinolone-resistant Optimal treatment \nCeftriaxone \n2 g/d (IV) \n10-14 Azithromycin \n1 g/d (PO) \n5 216 \nSold by @itachibot Antibiotic therapy for enteric fever in adults 10-14 750 mg bid (PO) or 400 mg q \n12h (IV) Alternative treatment \nHigh dose ciprofloxaci \nn Ceftriaxone-resistant Optimal treatment \nMeropenem \n1 g q8h (IV) \n10-14 Azithromycin \n1 g/d (PO) \n5",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Shigella and Salmonella"
  },
  {
    "q_no": 14,
    "question": "Question 14: A patient developed fever and diarrhoea after consumption of undercooked eggs. Which of \nthe following statements is false about this condition?",
    "options": {
      "a": "School of fish appearance",
      "b": "Railroad appearance",
      "c": "Fish in stream appearance",
      "d": "Drumstick appearance."
    },
    "correct_answer": "c",
    "explanation": "The given case scenario is suggestive of non-typhoidal salmonellosis (NTS). The most \ncommon organism isolated in NTS from stool culture is Salmonella typhimurium. Nontyphoidal salmonellosis refers to illnesses caused by all serotypes of Salmonella except for \nSalmonella typhi, Salmonella paratyphi A, B, and C. Transmission of nontyphoidal salmonellosis \noccurs usually through the consumption of food or water contaminated with animal feces. \nTransmission may also occur through food products, especially eggs, poultry, undercooked \nground meat, and hence multiple animals act as reservoirs for non-typhoidal salmonella. Gastroenteritis is the most common clinical presentation of NTS. The illness usually lasts 4–7 \ndays, and most people recover without treatment. Culturing organisms continues to be the \nmainstay of clinical diagnostic testing for nontyphoidal salmonella infection. Approximately 90% \nof isolates are obtained from routine stool culture until 4-5 weeks after infection. 217 \nSold by @itachibot Vibrio and Campylobacterales",
    "image": null,
    "explanation_image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Shigella_and_Salmonella_Q14_exp.jpg",
    "chapter_heading": "Shigella and Salmonella"
  }
]