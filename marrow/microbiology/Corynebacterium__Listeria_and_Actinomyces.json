[
  {
    "q_no": 1,
    "question": "Question 1: A father brought his 9-year-old unimmunized child to the pediatric OPD with complaints of \nfever, sore throat and difficulty in swallowing. The findings of oropharyngeal examination are \nshown in the image below. Which of the following is the most likely causative organism of \nthis condition?",
    "options": {
      "a": "Gram-negative diplococci",
      "b": "Spiral gram-negative bacteria",
      "c": "Club-shaped gram-positive bacilli",
      "d": "Gram-positive cocci in chains"
    },
    "correct_answer": "c",
    "explanation": "Fever, sore throat and difficulty in swallowing with the presence of a dirty white pseudomembrane \non the posterior pharynx is strongly suggestive of diphtheria caused by Corynebacterium \ndiphtheriae. They are described as club-shaped gram positive bacilli. Corynebacterium diphtheriae are gram-positive, non-sporing, non-capsulated and non-motile \nbacilli. They possess polymetaphosphate granules that serve as storage granules and are \ncalled metachromatic granules. These give the bacilli a beaded or club-shaped appearance on \nmicroscopic examination. 136 \nSold by @itachibot Other options: Option A: Gram-negative diplococci describes Neisseria menigitidis and N. gonorrhoeae. Option C: Spiral gram-negative bacteria describes Campylobacter spp. and Helicobacter spp.. Option D: Gram-positive cocci in chains describes Streptococci. They typically cause acute \nexudative pharyngitis characterised by purulent exudate over the tonsils.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 2,
    "question": "Question 2: A patient has complains of fever with chills. A throat examination reveals swollen glands and \na thick, whitish membrane over his tonsils. Albert staining is to be done. What are the \nconstituents of Albert's stain?",
    "options": {
      "a": "Carbol fuschin and methylene blue",
      "b": "Carbol fuschin and malachite green",
      "c": "Toluidine and malachite green",
      "d": "Toluidine and methylene blue"
    },
    "correct_answer": "c",
    "explanation": "The given scenario is suggestive of diphtheria caused by Corynebacterium diphtheria. This \norganism is stained using Albert's stain which contains toluidine blue 'O' and malachite \ngreen. Both these dyes have an affinity for acidic cytoplasm as they are basic dyes. Albert’s, Neisser’s, and Ponder’s stain are used to demonstrate the metachromatic \ngranules(Volutin / Babes Ernst granules) of Corynebacterium diphtheria. Corynebacterium diphtheria appears as green-coloured bacilli with purple-blue-coloured \nmetachromatic granules in cuneiform arrangement. 137 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following is not a selective medium for Corynebacterium diptheriae?",
    "options": {
      "a": "Tinsdale medium",
      "b": "Loeffler's serum slope",
      "c": "Potassium tellurite agar",
      "d": "McLeod's medium"
    },
    "correct_answer": "b",
    "explanation": "Loeffler's serum slope is an enriched medium for the growth of Corynebacterium diphtheriae. It is \nnot a selective medium as other organisms can also grow on this medium. The selective media for Corynebacterium diphtheria are potassium tellurite agar, Tinsdale \nmedium and McLeod's medium (tellurite blood agar). Tellurite inhibits the growth of other \nbacteria. C. diphtheria reduces the tellurite to metallic tellurium, giving its colonies a grey black \ncolour. On On Loeffler's serum slope, colonies appear as small white opaque discs that may acquire a yellow \nting. The advantages for growing C. diphtheriae on Loeffler's serum slope are rapid growth in 6-8 \nhrs and that its the best medium for metachromatic granules production. The disadvantage of \nusing this medium is that on incubation beyond 6-8 hrs, it supports the growth of commensals as \nwell.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 4,
    "question": "Question 4: A throat swab taken from a patient who presented with fever, dysphagia and cervical \nlymphadenopathy was sent for culture on potassium tellurite agar. The resultant colonies had \na poached egg appearance. Which among the following is the most likely organism implicated \nhere?",
    "options": {
      "a": "Corynebacterium diphtheriae gravis",
      "b": "Corynebacterium diphtheriae mitis",
      "c": "Corynebacterium diphtheriae intermedius",
      "d": "Corynebacterium pseudotuberculosis"
    },
    "correct_answer": "b",
    "explanation": "Poached egg colonies on potassium tellurite agar indicate Corynebacterium diphtheriae mitis. Macleod classified diphtheria bacilli based on colony morphology on tellurite blood agar into the \nfollowing three types: • Gravis: They form daisy head colonies and are variably hemolytic. They ferment glycogen and \nstarch. • Intermedius: They form frog’s egg colonies and are non-hemolytic. They do not ferment glycogen \nand starch. • Mitis: They form poached egg colonies and are hemolytic. They do not ferment glycogen and \nstarch. 138 \nSold by @itachibot The following image shows the various colony morphologies of C. diphtheriae.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 5,
    "question": "Question 5: The toxin produced by the organisms shown below acts via? 129 \nSold by @itachibot",
    "options": {
      "a": "Increase in cAMP",
      "b": "Increase in cGMP",
      "c": "ADP ribosylation of EF2",
      "d": "RNA glycosidase"
    },
    "correct_answer": "c",
    "explanation": "The given image shows gram-positive rods with club-shaped ends, beaded appearance, and \na Chinese-letter pattern of arrangement indicative of Corynebacterium diphtheriae. The toxin produced by the bacteria - diphtheria toxin - inhibits polypeptide chain elongation and \nprotein synthesis by inactivating the elongation factor-2 (EF-2) by ADP ribosylation. It has two \nfragments - fragment B helps in binding of the toxin to host cells and fragment A inactivates EF-2.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following bacteria gain toxigenicity by lysogenic conversion?",
    "options": {
      "a": "Corynebacterium diphtheriae",
      "b": "Enterotoxigenic E. coli",
      "c": "Shigella dysenteriae",
      "d": "Klebsiella pneumoniae"
    },
    "correct_answer": "a",
    "explanation": "139 \nSold by @itachibot Lysogenic or phage conversion is seen in Corynebacterium diphtheriae. The toxigenicity of diphtheria bacillus depends on the presence of the corynephages (tox+). When \nthe bacillus is cured of the phage, its toxigenic capacity is lost. A bacteriophage is a virus that parasitises bacteria. It can carry host DNA and transfer it to \nanother bacterium. In lysogenic conversion, the viral DNA is integrated with the bacterial DNA \nand thus can code for new characteristics, like toxin production. The conversion of non-toxigenic \nbacterial strains to toxigenic by infecting them with bacteriophages is known as lysogenic \nconversion.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 7,
    "question": "Question 7: Which of the following factors does not affect the toxin production of Corynebacterium \ndiphtheria?",
    "options": {
      "a": "Concentration of iron in the medium",
      "b": "Tox Phage",
      "c": "Biotype",
      "d": "Concentration of zinc in the medium"
    },
    "correct_answer": "d",
    "explanation": "Toxin production of Corynebacterium diphtheriae depends on the concentration of iron in the \nmedium, presence of tox phage, and its biotype. Concentration of zinc in the medium has no \neffect on this process. An increase in iron concentration (option A) upregulates the DT (diphtheria toxin) repressor gene, \nthereby decreasing the toxin production. The optimum level of iron in the medium for toxin \nproduction is 0.14 g/millilitre, while a concentration of 0.5 g/millilitre inhibits the formation of \ntoxins. The gene for diphtheria toxin is coded by bacteriophage (corynebacteriophage tox+) and thus the \npresence of phages (option B) is integral to toxin production. Toxin production also depends on \nthe biotype (option C) - gravis, intermedius, mitis and belfanti - of the bacilli. All four biotypes are \ntoxigenic. Diphtheria toxin is also produced by Corynebacterium ulcerans and Corynebacterium \npseudotuberculosis.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 8,
    "question": "Question 8: What is Elek’s gel precipitation test used to test?",
    "options": {
      "a": "Susceptibility to Corynebacterium diphtheriae",
      "b": "Biotype of Corynebacterium diphtheriae",
      "c": "Toxigenicity of Corynebacterium diphtheriae",
      "d": "Antibody titer against Corynebacterium diphtheriae"
    },
    "correct_answer": "c",
    "explanation": "140 \nSold by @itachibot Elek's test is used to test the toxigenicity of Corynebacterium diphtheriae. Elek's gel precipitation test is an in vitro immunoprecipitation (immunodiffusion) test used to \ndetermine whether or not a strain of Corynebacterium diphtheriae is toxigenic. In this test, a \nrectangular strip of filter paper impregnated with diphtheria antitoxin is placed on the surface of a \n20% normal horse serum agar. Narrow streaks of the C. diphtheriae strains are made at right \nangles to the filter paper strip with positive and negative controls. If the strain produces toxins, \nthe toxin will diffuse in the agar and produce a line of precipitation (arrowhead) where it meets \nthe antitoxin at optimum concentration. The test is shown in the image below. Option A: For checking susceptibility to diphtheria, Schick test is used. Option B: The biotype of diphtheria can be determined based on colony morphology and \nbiochemical reactions. Option D: The antibody titer against diphtheria can be measured by various serological methods \nlike passive haemagglutination, latex agglutination test, toxoid enzyme-linked immunosorbent \nassay (Toxoid-ELISA), and toxin-binding inhibition ELISA (ToBI-ELISA).",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 9,
    "question": "Question 9: What diphtheria antibody titer is considered optimally protective? 130 \nSold by @itachibot",
    "options": {
      "a": "&gt;0.1IU/ml",
      "b": "&gt;0.01IU/ml",
      "c": "&gt;0.05 IU/ml",
      "d": "&gt;0.5 IU/ml"
    },
    "correct_answer": "a",
    "explanation": "Diphtheria antibody titer is considered optimally protective if the titre is &gt;0.1 IU/mL. Diphtheria is primarily the result of the action of diphtheria toxin, not bacterial invasion. Hence, \nantibodies to the diphtheria toxin is a good measure of protection against diphtheria. These \nantibodies can be induced by immunisation with diphtheria toxoid vaccine. The titers of IgG \nantibody against diphtheria toxoid vaccine reflect various levels of protection against the disease \nas follows: • &lt;0.01 IU/mL: No protection • 0.01 -0.1 IU/mL: Minimal protection 141 \nSold by @itachibot • &gt;0.1 IU/mL: Optimal protection Note: The question asks optimally protective titer and not minimum effective titer which is \n&gt;0.01 IU/mL.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 10,
    "question": "Question 10: A 5-year-old boy presented with fever, sore throat, dysphagia, and a tonsillar \npseudomembrane. Which of the following complications will you not anticipate in him?",
    "options": {
      "a": "Asphyxia",
      "b": "Otitis media",
      "c": "Myocarditis",
      "d": "Pupillary paralysis"
    },
    "correct_answer": "d",
    "explanation": "A child with fever, sore throat, dysphagia, and a tonsillar pseudomembrane likely has diphthteria. \nPupillary reactions remain normal and pupillary paralysis is not a complication seen with \ndiphtheria. The complications of diphtheria include asphyxia due to the mechanical airway obstruction by the \npseudomembrane. Myocarditis and polyneuropathy are toxic complications of diphtheria. \nPatients may develop post diphtheritic paralysis involving palatine and ciliary nerves. Paralysis of \nthe diaphragm and neurogenic bladder dysfunction may also occur. Acute circulatory failure, \nseptic complications, such as pneumonia and otitis media and renal failure may also occur.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following features is not typically seen in diphtheroids?",
    "options": {
      "a": "They possess few or no metachromatic granules",
      "b": "They are usually arranged in parallel rows",
      "c": "Most of them do not produce toxins",
      "d": "They do not ferment sucrose"
    },
    "correct_answer": "d",
    "explanation": "Diphtheroids ferment both sucrose and glucose, whereas Corynebacterium diphtheriae ferments \nonly glucose. Sucrose fermentation is done to differentiate between C. diphtheriae and diphtheroids. Diphtheroids: • They are corynebacteria resembling C. diphtheriae which occur as normal commensals in the \nthroat, skin, conjunctiva and other areas. • In general, diphtheroids stain more uniformly than diphtheria bacilli and possess few or no \nmetachromatic granules. • Most of them do not produce toxins. • They tend to be arranged in parallel rows (palisades) rather than the cuneiform pattern. • The common diphtheroids include Corynebacterium xerosis.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 12,
    "question": "Question 12: A 45-year-old fisherman presents with pain and a lesion in his hand similar to what is shown \nin the image. What is the causative organism for this condition? 131 \nSold by @itachibot",
    "options": {
      "a": "Streptococcus pyogenes",
      "b": "Corynebacterium xerosis",
      "c": "Erysipelothrix rhusiopathiae",
      "d": "Bacillus anthracis"
    },
    "correct_answer": "c",
    "explanation": "The above image shows a raised, well-circumscribed, violaceous lesion with the absence of pus. \nThus, it is erysipeloid which is a skin infection caused by Erysipelothrix rhusiopathiae. Erysipeloid usually occurs on the fingers by direct inoculation at the site of a cut or abrasion, in \npeople who handle animals, fish or animal products. Pain, swelling and erythema develop and the \ncondition has been called seal finger and whale finger. Pus is usually absent at the infection site, \nwhich helps differentiate it from staphylococcal and streptococcal skin infections. It resolves \nwithout treatment in 3-4 weeks. 142 \nSold by @itachibot Erysipelothrix rhusiopathiae is a slender, non-motile, non-sporing Gram positive bacillus. It is \ncatalase, oxidase, and indole negative. It causes disease in multiple land animals like swine, \nturkeys and sheep. Note: Erysipelas is caused by Streptococcus pyogenes. It presents as erythematous raised lesions \nwith sharply demarcated edges.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 13,
    "question": "Question 13: A 1-day-old newborn developed severe sepsis and died after 1 day despite aggressive \ntreatment. On examination, multiple granulomas are present over the skin. The organism \nisolated from the blood sample shows the motility depicted below. What is the most likely \ncausative organism? 132 \nSold by @itachibot",
    "options": {
      "a": "Treponema pallidum",
      "b": "Vibrio cholera",
      "c": "Listeria monocytogenes",
      "d": "Clostridium"
    },
    "correct_answer": "c",
    "explanation": "Early onset sepsis with skin granulomas and organisms showing tumbling motility points to a \ndiagnosis of granulomatosis infantiseptica caused by Listeria monocytogenes. Listeria monocytogenes shows slow tumbling motility when grown at 25 °C. But at 37°C, it is \nnon-motile because the peritrichous flagella are produced by the bacillus optimally between \n20°C and 30°C. This is known as differential motility as motility pattern changes with a change in \ntemperature. Listeria moves from cell-to-cell using host cell actin framework. Listeria infection can manifest as febrile gastroenteritis, bacteremia, neurolisteriosis and \ngranulomatosis infantiseptica.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 14,
    "question": "Question 14: A 45-year-old man presents to the OPD with complaints of fever with chills, headache, \nabdominal pain, and diarrhoea. He gives a history of consuming raw refrigerated cucumbers \nthe previous day. What is the most likely etiologic organism?",
    "options": {
      "a": "Staphylococcus aureus",
      "b": "Bacillus cereus",
      "c": "Listeria monocytogenes",
      "d": "Vibrio cholerae"
    },
    "correct_answer": "c",
    "explanation": "Fever, headache, abdominal pain, diarrhoea following consumption of refridgerated food is \nsuggestive of food poisoning caused by Listeria monocytogenes. Listeria monocytogenes can survive at refrigerator temperatures (4°C), under conditions of low \npH and high salt. So it is able to overcome food preservation and safety barriers, making it an \nimportant foodborne pathogen. Healthy persons exposed to L. monocytogenes in food may develop a mild, self-limiting febrile \ngastroenteritis lasting 1–3 days. This develops after an incubation period of 6–48 hours. \nSymptoms include fever, chills, headache, myalgias, abdominal pain, and diarrhea. \nImmunocompromised individuals can develop meningoencephalitis, bacteremia, or focal \ninfections. The drug of choice is high dose intravenous ampicillin.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 15,
    "question": "Question 15: Multiple abscesses with discharging sinuses, demonstrating sulphur granules in pus, are \ncaused by",
    "options": {
      "a": "Actinomyces",
      "b": "Nocardia",
      "c": "Salmonella",
      "d": "Tularemia"
    },
    "correct_answer": "a",
    "explanation": "Multiple abscesses with discharging sinuses, demonstrating sulfur granules in pus, are \ncharacteristic of actinomycosis caused by Actinomyces. Actinomycosis is a chronic granulomatous infection characterized by indurated swellings in \nthe connective tissue with suppuration and discharge of sulfur granules. The most common \ncausative agent is Actinomyces israelli. 143 \nSold by @itachibot Various clinical forms of actinomycosis include cervicofacial, thoracic, abdominal, and pelvic \nactinomycosis. Among them, oral-cervicofacial actinomycosis is most common, presenting as a \nsoft tissue swelling, abscess, or mass lesion involving the angle of the jaw.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 16,
    "question": "Question 16: Which of the following is a false statement regarding Nocardia?",
    "options": {
      "a": "They are aerobes",
      "b": "They are acid-fast",
      "c": "They are commensals",
      "d": "They produce urease"
    },
    "correct_answer": "c",
    "explanation": "Nocardia are free-living organisms and not commensals. Nocardia are aerobic Gram-positive filamentous bacilli. They are non-sporing. They are \nconsidered weakly acid-fast, determined by Kinyoun's acid-fast staining technique. They produce \nurease and are catalase positive. They are found in the soil. Nocardia asteroides is the Nocardia \nspecies which is most commonly involved in human disease (cutaneous and systemic). The \nparaffin bait technique is used for the isolation of Nocardia.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 17,
    "question": "Question 17: 133 \nSold by @itachibot Identify the organism from the given image.",
    "options": {
      "a": "Mycobacterium leprae",
      "b": "Mycobacterium tuberculosis",
      "c": "Actinomyces israelli",
      "d": "Nocardia asteroides"
    },
    "correct_answer": "d",
    "explanation": "The organism shown in the image is Nocardia asteroides. Nocardia species are weakly acid-fast filamentous organisms with hyphae-like branching on \nmicroscopy. They are aerobic, gram-positive, catalase-positive, and urease-positive. They are \nweakly acid-fast because they stain with carbolfuchsin and retain when decolourized with 1–4% \nsulfuric acid instead of the stronger acid-alcohol decolorant. Infection follows traumatic inoculation of the organism into the subcutaneous tissue from soil or \nvegetable sources. They can present with a characteristic powdery substance that appears as gritty \nor necrotic material on the skin or within soft tissues. Accompanying this are multiple discharging \nsinuses, which are abnormal openings that form as the body attempts to expel infected material. \nThese sinuses can drain purulent, often foul-smelling discharge typically associated with localised \nabscesses, and the discharge may be viscous, sometimes containing necrotic tissue. Other options: Options A and B: Mycobacteria species are acid-fast but not have branching filaments. Option C: Actinomyces species are not acid-fast. They are Gram-positive arranged in a sun-ray \nappearance.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 18,
    "question": "Question 18: A patient presents with a mobile, warm to touch nodule in the neck. On the anaerobic culture \nof the biopsy material from this swelling, it showed colonies as shown in the image which had \ngram-positive branching rods on staining. Which of the following is the drug of choice in this \ncondition? 134 \nSold by @itachibot",
    "options": {
      "a": "Doxycycline",
      "b": "Cotrimoxazole",
      "c": "Penicillin",
      "d": "Surgical drainage"
    },
    "correct_answer": "c",
    "explanation": "The given image shows molar tooth colonies that are characteristic of Actinomyces species. The \ngiven clinical scenario of a mobile, warm to touch nodule in the neck describes cervicofacial \nactinomycosis also known as 'lumpy jaw syndrome'. Penicillin is the drug of choice for \nactinomyces infection. Actinomyces are Gram-positive anaerobic bacilli that produce molar tooth colonies on incubation \nfor 72 hours on brain-heart infusion agar. They cause a chronic suppurative and granulomatous \ninfection called actinomycosis. It can present as one of the following clinical types: 144 \nSold by @itachibot • Cervicofacial type- Fluctuant mass in the jaw area producing draining fistulas. • Thoracic type- Pulmonary infection with fever, cough, and purulent sputum. • Abdominal type- Occurs following ruptured appendix or ulcer. It may spread throughout the \nperitoneum and involve multiple organs. Actinomycosis can spread to bones and surrounding tissue and produce multiple discharging \nsinuses. Treatment requires prolonged administration of penicillin for 6–12 months. In \npenicillin-allergic patients, clindamycin or erythromycin is effective. Surgical excision and \ndrainage may be required in some cases. The given image shows cervicofacial actinomycosis. The given image shows a patient with multiple cutaneous lesions caused by Actinomyces: 145 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 19,
    "question": "Question 19: Which of the following toxins act by inhibiting elongation factor -2?",
    "options": {
      "a": "1 &amp; 4",
      "b": "2 &amp; 4",
      "c": "3 &amp; 4",
      "d": "4 &amp; 5"
    },
    "correct_answer": "a",
    "explanation": "Both diphtheria toxin and pseudomonas exotoxin act by inhibiting elongation factor-2(EF-2).",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  },
  {
    "q_no": 20,
    "question": "Question 20: The most common clinical form of actinomycosis is",
    "options": {
      "a": "Bacillus anthracis",
      "b": "Clostridium tetani",
      "c": "Clostridium perfringens",
      "d": "Clostridium botulinum"
    },
    "correct_answer": "b",
    "explanation": "The most common clinical form of actinomycosis is cervicofacial. Actinomycosis is a chronic granulomatous infection characterized by indurated swellings, mainly \nin the connective tissue, suppuration, and discharge of sulphur granules. The most common \ncausative agent is Actinomycetes israelli. Various clinical forms of actinomycosis involves cervicofacial, thoracic, abdominal, and pelvic \nactinomycosis. Among them, actinomycosis most frequently occurs as oral-cervicofacial form \npresenting as a soft tissue swelling, abscess, or mass lesion involving the angle of jaw. 146 \nSold by @itachibot Clostridium and Bacillus",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q20_q.jpg",
    "explanation_image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Corynebacterium__Listeria_and_Actinomyces_Q20_exp.jpg",
    "chapter_heading": "Corynebacterium  Listeria and Actinomyces"
  }
]