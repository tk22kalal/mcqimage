[
  {
    "q_no": 1,
    "question": "Question 1: The following slide is given as a spotter in your microbiology practical examination. Identify \nthe following organism.",
    "options": {
      "a": "Mycobacteria",
      "b": "Nocardia",
      "c": "Actinomyces",
      "d": "Corynebacterium"
    },
    "correct_answer": "a",
    "explanation": "168 \nSold by @itachibot The image shows pink non-branching acid-fast bacilli on a blue background. These findings are \nconsistent with the staining characteristics of mycobacteria. The stain used is the Ziehl-Neelsen \nstain. Other options: Option B: The image below shows Nocardia stained using an acid-fast staining technique. \nNocardia is partially acid-fast and appears as branching filaments. Option C: The image given below is of a gram-stained specimen of Actinomyces israelii. A. israelii \nis non acid-fast Option D: The images below show the staining characteristics of Corynebacterium diphtheriae. It \nis stained with Albert's stain which shows the needle appearance. 169 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Mycobacteria_Tuberculosis_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following is the component of mycobacteria which makes it acid fast?",
    "options": {
      "a": "Mycolic acid",
      "b": "Muramic acid",
      "c": "Teichoic acid",
      "d": "Talosaminuronic acid"
    },
    "correct_answer": "a",
    "explanation": "Mycobacteria are acid-fast due to the presence of mycolic acid in their cell walls. On being stained with carbol fuchsin or fluorescent dyes such as auramine-O or rhodamine, they \nresist decolourization by 20% sulphuric acid and absolute alcohol for 10 minutes. This property is \nreferred to as acid and alcohol fastness and is routinely used to identify mycobacteria.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 3,
    "question": "Question 3: 164 \nSold by @itachibot A patient presents early in the morning to the DOTS center to provide sputum samples. \nWhich of the following reagents are used in the digestion and decontamination of his samples \nbefore smear preparation?",
    "options": {
      "a": "NaOH and ƒOH",
      "b": "NaCl and N-acetyl cysteine",
      "c": "N-acetyl cysteine and NaOH",
      "d": "ƒOH and NaCl"
    },
    "correct_answer": "c",
    "explanation": "NaOH and N-acetylcysteine are used for the digestion and decontamination of sputum used in \nsmear preparation for Mycobacterium tuberculosis. 170 \nSold by @itachibot Sputum and specimens from non-sterile sites need prior treatment for digestion (to liquefy the \nthick pus), decontamination (to inhibit the normal flora), and concentration (to increase the yield) \nbefore they can be used for testing. Methods used for digestion and decontamination of sputum: • Petroff’s method- Uses 4% NaOH and HCl. • N-acetyl cysteine (NALC) + 2% NaOH - NALC liquefies the sputum and NaOH kills the normal \nflora. This method is better suited for automated culture systems and is superior to Petroff’s \nmethod. Note: Formalin or hypochlorite can be used only if smear microscopy is being done. They are not \nuseful for culture or animal pathogenicity testing.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 4,
    "question": "Question 4: A patient with suspected tuberculosis gives a sputum sample for microscopic examination. \nWhat is the minimum number of acid-fast bacilli that should be present in 1 mL of sputum \nfor them to be detected by this method?",
    "options": {
      "a": "100",
      "b": "1000",
      "c": "10000",
      "d": "10"
    },
    "correct_answer": "c",
    "explanation": "At least 10,000 acid-fast bacilli should be present per milliliter of sputum for them to be readily \ndemonstrable in direct smears. Slide reporting as per NTEP guidelines: No. of A \nFB No. of oil immersionfields ex \namined Repo \nrt 0 \n100 \n0 1-9 \n100 \nScan \nty 10-99 \n100 \n1+ 1-10 \n1 \n2+ >10 \n1 \n3+",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 5,
    "question": "Question 5: A patient has chronic cough with occasional blood in the sputum. He has a history of \nsignificant weight loss and night sweats. Which of the following media cannot be used to \nculture the organism causing his symptoms?",
    "options": {
      "a": "BACTEC 460",
      "b": "Middlebrook ‹H10",
      "c": "Loefflers medium",
      "d": "McLeod's Medium"
    },
    "correct_answer": "d",
    "explanation": "This patient with chronic cough and hemoptysis with a concurrent history of significant weight \nloss and night sweats most likely has tuberculosis, caused by Mycobacterium tuberculosis. \nMcLeod's medium is not used to culture M. tuberculosis. It is a selective medium for \nCorynebacterium diphtheriae. Culture media used to cultivate Mycobacterium tuberculosis include: • Solid- Loeffler's medium is a serum-containing solid medium used for the culture of M. \ntuberculosis. Other solid media used include Lowenstein- Jensen medium, Dorset medium, \nTarshis medium, and Pawlowsky's medium. 171 \nSold by @itachibot • Liquid- Middlebrook’s media are used for the preparation of antigens and vaccines and in \nsensitivity testing. Other examples of liquid mycobacterial culture media include Dubos' medium, \nSula's medium and Sauton's medium. • Automated culture methods: • • BACTEC 460- uses radioisotopes for detection • BacT alert- colorimetric method of detection • BACTEC MGIT- fluorometric detection method. 172 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 6,
    "question": "Question 6: A microbiology resident is performing liquid automated culture on the sputum sample of a \nTB suspect patient. Which of the following culture media would he not use for the same?",
    "options": {
      "a": "BactiAlert",
      "b": "Versatrek",
      "c": "BACTEC MGIT 960",
      "d": "Tarshis"
    },
    "correct_answer": "d",
    "explanation": "Tarshis medium is a solid growth medium used for culturing mycobacterium species. Versatrek, \nBactiAlert, and BACTEC MGIT 960 are liquid automated cultures used for tuberculosis. The diagnostic tools for TB are as follows: 1. Sputum microscopy for AFB • Ziehl Neelson staining • Fluorescence staining 2. Culture • Solid media– Lowenstein-Jensen (most common), Petragnini and \nDorset, Tarshis, Loeffler, Pawlowsky. • Liquid automated culture – Versatrek, BactiAlert, BACTEC MGIT 960 (MGIT stands for \nMycobacteria Growth Indicator Tube) • Drug Sensitivity Testing / Proportionate Sensitivity Testing: • Using MGIT, LJ medium 3. Rapid molecular diagnostic testing • Line probe assay • CB-NAAT- Nucleic acid amplification test using GeneXpert system 4. Other diagnostic tools are as follows: • Chest X-ray • Tuberculin sensitivity testing 173 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 7,
    "question": "Question 7: Which of the following tests can simultaneously detect TB and rifampicin resistance in &lt;2 \nhours?",
    "options": {
      "a": "LAM detection by ELISA",
      "b": "Xpert MTB/RIF",
      "c": "BACTEC MGIT",
      "d": "Line probe assay"
    },
    "correct_answer": "b",
    "explanation": "Xpert MTB/RIF detects tuberculosis (TB) and rifampicin resistance simultaneously within 2 \nhours. It is a fully automated, real-time nucleic acid amplification technology, with high specificity \nand sensitivity. The WHO recommends its use worldwide as the initial diagnostic test in adults and children who \nare presumed to have multi-drug resistant tuberculosis (MDR-TB) or HIV-associated TB. Xpert \nMTB/RIF should also be the first test applied to the cerebrospinal fluid (CSF) of patients in whom \ntubercular meningitis is suspected as well as a replacement test (over conventional microscopy, \nculture, and histopathology) for gastric lavage, pleural and other biopsies, and fine-needle \naspiration specimens. The image below shows the Xpert MTB/RIF system.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 8,
    "question": "Question 8: Which of the following is not a method of testing drug susceptibility in Mycobacterium \ntuberculosis?",
    "options": {
      "a": "Radiometric broth method",
      "b": "Molecular method",
      "c": "Disc diffusion method",
      "d": "Proportion Method"
    },
    "correct_answer": "c",
    "explanation": "Disc diffusion method is used for drug susceptibility testing for most bacteria; however, it is not \nused for Mycobacterium tuberculosis. The disc diffusion technique is not suitable for testing Mycobacterium tuberculosis because the \norganism grows so slowly that the drug has time to diffuse throughout the medium, and sharp \nzones of inhibition are not seen. 174 \nSold by @itachibot Methods used in the drug susceptibility testing of M.tb include: For agar-based methods, ‹H10 or ‹H11 Middlebrook media are used and only the proportion \nmethod can be applied. Radiometric techniques measure the metabolic activity of the bacteria. Based on changes in these \nvalues, drug susceptibility can be estimated. Conventional drug-sensitivity Radiometric Techniques \nMolecular methods testing BACTEC 460MB/BacTMycob \nacteria growth indicator tube \n(MGIT)VersaTREƒ PCR-based assaysDNA probe \n-basedDNA microarrayGene \nXpert Proportion methodAbsolute c \noncentration methodResistan \nce ratio method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 9,
    "question": "Question 9: TB test done only on whole blood sample is  \n.",
    "options": {
      "a": "TrueNat TB",
      "b": "Gene xpert",
      "c": "Interferon gamma release assay",
      "d": "All the above"
    },
    "correct_answer": "c",
    "explanation": "TB test done on a whole blood sample is the interferon-gamma release assay. It has been used for \nthe diagnosis of latent tuberculosis in patients with HIV(who frequently have a negative Mantoux \ntest). Interferon-gamma release assays include: • QuantiFERON-TB Gold • T-SPOT.TB QuantiFERON-TB Gold quantitates the amount of IFN- produced by CD4+ T cells in response to \nthe antigens from Mycobacterium tuberculosis. QuantiFERON-TB Gold Plus (QFT- Plus) is an \nimproved version of the QuantiFERON-TB Gold test. QuantiFERON-TB Gold detects only \nTB-specific CD4+ responses. However, QuantiFeron-TB Gold Plus detects both CDù+ and CD4+ \nT-cell responses to TB-specific antigens. T-SPOT.TB determines the total number of individual effector T cells expressing IFN-. 175 \nSold by @itachibot The TrueNat TB test is a new molecular test that can diagnose TB in one hour as well as test for \nrifampicin resistance. This test uses a sputum sample taken from the patient. Only about 0.5 ml of \nthe sample is required. Gene Xpert is also a molecular method of testing that cannot use blood as \na sample. (Option A and B)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 10,
    "question": "Question 10: A urine LAM (Lipoarabinomannan) assay was performed in an HIV +ve patient with a CD4+ \ncount of 40/L. Infection with which of the following organisms can be diagnosed using this \ntest? 166 \nSold by @itachibot",
    "options": {
      "a": "M. tuberculosis",
      "b": "M. leprae",
      "c": "Mycoplasma",
      "d": "Listeria monocyogenes"
    },
    "correct_answer": "a",
    "explanation": "Urine lipoarabinomannan (LAM) assay is used for the diagnosis of tuberculosis. Lipoarabinomannan (LAM) antigen is a lipopolysaccharide present in the mycobacterial cell wall, \nreleased from metabolically active cells or degenerating cells of patients having tuberculosis. \nUrine LAM is a useful tool in diagnosing tuberculosis, especially in patients with HIV and low \nCD4+ T cell count. Most diagnostic tests for tuberculosis rely on sputum samples, which are difficult to obtain and \nhave low sensitivity in immunocompromised patients, patients with disseminated TB, and \nchildren, delaying treatment initiation. Lipoarabinomannan (LAM) is the only WHO-endorsed TB \nbiomarker that can be detected in urine, an easily collected sample.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 11,
    "question": "Question 11: A middle-aged man came with a history of fever and night sweats for the past 2 weeks. He has \nhad noticeable weight loss. Bronchoalveolar lavage was done, but Mycobacterium \ntuberculosis was not detected. Extra-pulmonary TB is suspected. Which site is most likely \naffected?",
    "options": {
      "a": "Genitourinary tract",
      "b": "Skeletal system",
      "c": "Gastrointestinal tract",
      "d": "Lymph nodes"
    },
    "correct_answer": "d",
    "explanation": "Lymph nodes are the most common site of extrapulmonary TB. The diagnosis is established by fine needle aspiration biopsy. In descending order of frequency, the extrapulmonary sites most commonly involved in TB are: • lymph nodes • pleura • genitourinary tract 176 \nSold by @itachibot • bones and joints • meninges, peritoneum and pericardium. In less than 50% of these cases, there is associated pulmonary disease.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 12,
    "question": "Question 12: Your neighbour is worried about a scar on her 5-month-old daughter's arm that is shown \nbelow. She tells you the child has received all vaccines on time. Which of the following \nstatements is true about the vaccine that caused this finding?",
    "options": {
      "a": "Distilled water is used as diluent for this vaccine",
      "b": "The dose administered is 0.5 ml",
      "c": "The route of administration is subcutaneous",
      "d": "WHO recommends Danish 1331 strain for vaccine"
    },
    "correct_answer": "d",
    "explanation": "The scar shown in the image results from the BCG (Bacillus Calmette-Guérin) vaccine. The WHO \nrecommends Danish 1331 strain for BCG vaccine production. Normal saline is recommended as the diluent for the BCG vaccine as distilled water is an irritant. The dose administered is 0.1ml containing 0.1mg. It is administered intradermally by using 26 gauge tuberculin syringe on the left deltoid.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Mycobacteria_Tuberculosis_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  },
  {
    "q_no": 13,
    "question": "Question 13: You are performing the pre-employment check up of a young man. You need to perform a \ntuberculin skin test as a part of this process. Which of the following tests would you not use \nfor this purpose?",
    "options": {
      "a": "Hunner’s ulcer",
      "b": "M. tuberculosis",
      "c": "M. simiae",
      "d": "M. kansasii"
    },
    "correct_answer": "c",
    "explanation": "QuantiFERON-TB gold is not a type of tuberculin skin test. It is a type of interferon-gamma \nrelease assays (IGRAs), a whole-blood test that can aid in diagnosing Mycobacterium tuberculosis \ninfection. There are 3 described methods for tuberculin skin testing (TST): • Mantoux test, also known as the Pirquet test (preferred method) • Heaf test • Tine test In contrast, IGRAs that have been approved by the FDA are: • QuantiFERON-TB Gold In-Tube test (QFT-GIT) • T-SPOT.TB test (T-Spot) • QuantiFERON-TB Gold Plus (QFT- Plus) IGRA is not used in India due to a higher probability of a false positive due to universal BCG \nvaccination. It can also lead to a diagnosis of active TB in a patient with latent TB and may lead to \novertreatment. This test is banned in India after the WHO advised against it in low and \nmiddle-income countries. 177 \nSold by @itachibot Other Mycobacteria",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Mycobacteria_Tuberculosis_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Mycobacteria Tuberculosis"
  }
]