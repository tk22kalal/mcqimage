[
  {
    "q_no": 1,
    "question": "Question 1: A 6-month-old child has a history of recurrent skin and respiratory tract infections. \nInvestigations are carried out and a disorder of phagocytosis is suspected. Which of the \nfollowing will not be a differential diagnosis in this case?",
    "options": {
      "a": "DiGeorge syndrome",
      "b": "Leukocyte adhesion deficiency",
      "c": "Chediak-Higashi syndrome",
      "d": "Chronic granulomatous disease"
    },
    "correct_answer": "a",
    "explanation": "DiGeorge syndrome is not a disorder of phagocytosis. It is due to a developmental defect involving the endodermal derivatives of the 3rd and 4th \npharyngeal pouches. Cell-mediated immunity is defective due to decreased T-cells. Affected \nindividuals also have depressed graft rejection, hypocalcemia, and cardiac defects. 87 \nSold by @itachibot Disorders of phagocytosis: • Leukocyte adhesion deficiency • Chediak–Higashi syndrome • Chronic granulomatous disease • Tuftsin deficiency • Cyclic neutropenia Other options: Option B: Leukocyte adhesion deficiency leads to defective neutrophil migration to sites of \ninfection, peripheral neutrophilia, and recurrent infections without pus. Option C: Chediak–Higashi syndrome is an autosomal-recessive disorder due to defects in \nlysosomal transport protein (LYST), leading to defective microtubule polymerization and defective \nphagolysosome formation. There is neutropenia and recurrent infections. Option D: Chronic granulomatous disease is due to a defect in NADPH oxidase resulting in the \nabsence of respiratory burst. It presents with recurrent infections with catalase-positive microbes.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 1-year-old boy presents with meningococcal meningitis. He has a history of recurrent \nbacterial chest and ear infections. Family history reveals that he has a male cousin (maternal \nside) who died in infancy from infection. The physician suspects X-linked \nagammaglobulinemia. Which of the following is false regarding his condition?",
    "options": {
      "a": "It is caused by a mutation of the BTK gene",
      "b": "Both humoral and cell mediated immunity are affected",
      "c": "All classes of immunoglobulin levels are reduced",
      "d": "Lymph node biopsy shows depletion of follicles"
    },
    "correct_answer": "b",
    "explanation": "X- linked or Bruton's agammaglobulinemia is primarily a disease of humoral immunity. \nCell-mediated immunity is not affected. It is an inherited immunodeficiency disease caused by mutations in the gene coding for Bruton \ntyrosine kinase (BTK). B cells do not differentiate and mature. They are arrested in the pre-B cell \nstage. There are extremely low IgG levels (below 100 mg/dL) and an absence of other immunoglobulin \nclasses. The tonsils and lymph nodes are usually atrophic. Lymph node biopsy reveals depletion of \ncells of B cell-dependent areas (follicles). Babies born with this disorder have virtually no \nperipheral B cells (&lt;1%) and suffer from recurrent bacterial infections.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 3,
    "question": "Question 3: An immunologist orders a nitroblue tetrazolium test on a child suspected to have a primary \nimmunodeficiency disease. What condition is she screening the child for?",
    "options": {
      "a": "Tuftsin deficiency",
      "b": "Wiskott-Aldrich syndrome",
      "c": "Chronic granulomatous disease",
      "d": "Chediak-Higashi syndrome"
    },
    "correct_answer": "c",
    "explanation": "The Nitroblue Tetrazolium Test (NBT) is used as a screening test for chronic granulomatous \ndisease (CGD) by assessing the reactive oxygen species (ROS) production in phagocytes. This principle relies on the color change of nitroblue tetrazolium, which transforms from \ncolorless/yellow to deep blue when it encounters ROS. A higher nitroblue test score indicates that \nthe cell is more efficient in producing ROS. In chronic granulomatous disease, there is an NADPH oxidase defect. Hence, the phagocyte \ncannot produce reactive oxygen species or radicals required for bacterial killing, which results in \nrecurrent infections. Here, the leukocytes fail to reduce nitroblue tetrazolium during phagocytosis. \nHence, a negative test (NBT remains colourless to yellow) is seen in CGD. A positive test result means neutrophils turn blue, as shown below: 88 \nSold by @itachibot A negative test means nitroblue tetrazolium remains colourless/yellow, as shown below:",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 4,
    "question": "Question 4: 83 \nSold by @itachibot A 1-year-old boy is brought with a history of recurrent pneumonia. He also has eczema and a \nhistory of prolonged bleeding after circumcision. Peripheral smear shows thrombocytopenia \nwith small platelets. Which of the following is most likely to be deficient?",
    "options": {
      "a": "IgM",
      "b": "IgG",
      "c": "IgA",
      "d": "IgE"
    },
    "correct_answer": "a",
    "explanation": "The history here is highly suggestive of Wiskott-Aldrich syndrome (WAS), a condition \ncharacterized by decreased IgM levels. Wiskott-Aldrich syndrome (WAS) is an X-linked recessive immunodeficiency disorder. It is caused \nby mutations in the Wiskott-Aldrich syndrome protein (WASp) that primarily affects the T \nlymphocytes. Normally, WASp regulates the actin cytoskeleton and thus helps in cell adhesion, \nmigration, and the formation of synapses between antigen-presenting and target cells. In WAS, \nthere is a progressive loss of T lymphocytes in the peripheral blood resulting in defects in cellular \nimmunity. 89 \nSold by @itachibot The clinical features of WAS are a triad of recurrent bacterial infections, eczema, and bleeding due \nto thrombocytopenia (with small platelets). Diagnosis is based on intracellular \nimmunofluorescence analysis of WAS protein (WASp) expression in blood cells. IgM levels in the \nserum are low, but levels of IgG are usually normal. IgA and IgE levels are normal or elevated. \nReduced-sized platelet is a typical feature of WAS. The image below shows an 18-month-old child with WAS, showing multiple petechiae and \nhematoma.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 5,
    "question": "Question 5: An 8-year-old boy was brought to the pediatric OPD with multiple cold abscess lesions as \nshown below on his face, chest, and back. The child has a history of recurrent■ respiratory \ninfections. On examination, he has atopic excoriations over the skin folds. What is the most \nprobable diagnosis?",
    "options": {
      "a": "Hyper IgM syndrome",
      "b": "Wiscott Aldrich syndrome",
      "c": "Hyper IgE syndrome",
      "d": "X-linked agammaglobulinemia"
    },
    "correct_answer": "c",
    "explanation": "A child with multiple abscesses (as shown in the image above) with a history of atopy and \nrecurrent respiratory infections suggests immunodeficiency, and the most probable diagnosis is \nHyper IgE syndrome. The hyper-IgE syndromes are rare primary immunodeficiency syndromes characterized by \nrecurrent severe staphylococcal abscesses of the skin, lungs, and other sites, eczema, eosinophilia, \nand marked elevation of serum IgE levels. They occur in 2 forms: • Autosomal dominant - involves mutations in the gene encoding STAT-3 (also known as Job \nsyndrome) • Autosomal recessive - involves mutations in DOCK8. In Job syndrome, mutation of the STAT3 gene leads to IgE overproduction without modulation. \nLoss of modulation is due to the absence of anti-inflammatory cytokines IL-6, IL-10, and \nIFN-gamma. Lack of IL-6 leads to deficiency of CD4 + Th17 cells, making them susceptible to \nvarious infections. It usually presents as a triad of atopic dermatitis, recurrent skin staphylococcal infections, and \nrecurrent pulmonary infections that occur early in childhood. The eczematoid rash affects the \nscalp and face, gets superinfected with Staphylococcus aureus and forms cold abscesses. Candida \ninfections are common. Recurrent staphylococcal pneumonia with pneumatocoeles is also 90 \nSold by @itachibot commonly seen. Other non-immunological features are: • Dysmorphic facial features that appear in early adolescence and are absent in the autosomal \nrecessive form • Craniosynostosis • Arnold-Chiari type 1 • Hyperextensible joints • Scoliosis • Pathological fractures • Retention of primary teeth • Vascular complications • Ocular complications Diagnosis is based on measurements of serum IgE levels &gt;2000U/mL where IgA, IgG and IgM \nconcentrations are generally normal, in adjunct with the clinical features seen in Job syndrome. It \nis associated with peripheral blood eosinophilia. The treatment primarily focuses on preventing infections through the use of antimicrobials, \nincluding antibiotics and antifungals, along with immunoglobulin replacement therapy.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Immune_Disorders_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following is a combined immunodeficiency disorder associated with both B-cell \nand T-cell defects? 84 \nSold by @itachibot",
    "options": {
      "a": "Louis–Bar syndrome",
      "b": "DiGeorge syndrome",
      "c": "Chediak-Higashi syndrome",
      "d": "Tuftsin deficiency"
    },
    "correct_answer": "a",
    "explanation": "Louis–Bar syndrome or ataxia-telangiectasia is a combined immunodeficiency disorder. Ataxia-telangiectasia is a syndrome complex that comprises neurologic, immunologic, \nendocrinologic, and cutaneous disorders. The gene involved in this condition is the mutation in \nthe ATM gene mapped to the long arm of chromosome 11(11q22-23). The mode of inheritance is \nautosomal recessive. There is defective DNA repair and increased sensitivity to ionizing radiation. Clinical features: • Progressive cerebellar ataxia • Oculocutaneous telangiectasias • Chronic sinopulmonary disease • High incidence of malignancy - adenocarcinomas and lymphoreticular tumors (lymphoma, \nleukemia, and Hodgkin's disease) • Humoral and cellular immunodeficiency • Ovarian dysgenesis and chromosomal abnormalities • Hypoplastic thymus • Ataxia and chorioathetoid movements start in infancy. The onset of telangiectasia is around 3 to 6 years and involves the face, conjunctiva and other \nparts of the body. By 12 years of age, affected children are usually confined to wheelchairs due to \nprogressive ataxia. 91 \nSold by @itachibot Death occurs due to sinopulmonary infection in early life or due to malignancy in the second or \nthird decade. They lack IgA and IgE. Cell-mediated immunity is also defective. The image below shows ocular telangiectasia in a patient with A-T. Other options: Option B: DiGeorge syndrome is a cellular immunodeficiency disorder associated with T-cell \ndeficiency. Options C and D: Chediak-Higashi syndrome and tuftsin deficiency are disorders of phagocytosis.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 2-year-old boy presents with reports showing fungal pneumonia, the causative organism is \nshown below. Parents give a history of recurrent bacterial infections. Laboratory analysis \nshow markedly elevated IgM and low levels of IgG. Which of the following is the most likely \ncause of his illness?",
    "options": {
      "a": "Defective cytokine signaling in T-cell precursors",
      "b": "Autosomal-dominant mutation in the STAT3 gene",
      "c": "Deficiency in CD40 ligand or CD40",
      "d": "Defect in the NADPH oxidative pathway"
    },
    "correct_answer": "c",
    "explanation": "The given history of recurrent bacterial infections and fungal pneumonia caused by Pneumocystis \njirovecii (as shown in the image above), along with elevated IgM and low IgG levels, are suggestive \nof hyper-IgM syndrome, an inherited deficiency in the CD40 ligand or CD40. Hyper-IgM syndrome is a primary immunodeficiency disorder that is inherited as: • X-linked form (most common): CD40 ligand (CD40L) defect on T-helper cells, preventing B-cell \nactivation, class switching and memory cells formation. • Autosomal recessive form: Affect CD40 on B-cells or enzymes like activation-induced cytidine \ndeaminase (AID), a DNA-editing enzyme expressed in B cells. The B-cell response to T-independent antigen is unaffected. CD40–CD40L interactions are also \nrequired for IL-12 secretion. So, defects in this pathway result in increased susceptibility to \nintracellular pathogens. In normal immune response, B-cells expressing CD40 on their surface interact with CD40L on \nT-cells to undergo class switching from IgM to various other classes (IgG, IgA, IgE) depending on \nthe type of antigen. Thus, failure of this class switching leads to an increase in IgM with extremely \nlow levels of IgG and no IgA or IgE. 92 \nSold by @itachibot Clinical features include recurrent pyogenic infections caused by low levels of opsonizing IgG \nantibodies. Patients are highly susceptible to pneumonia caused by Pneumocystis jirovecii. The illustration below depicts the defects in components of T-cell &amp; B-cell interactions that \ngive rise to primary immunodeficiency. Other options: Option A: Defective cytokine signalling in T-cell precursors is seen in X-linked Severe Combined \nImmunodeficiency (SCID). It is caused by a mutation in the common -chain (c) subunit of \ncytokine receptors. This defect disrupts Interleukins (IL-2, IL-4, IL-7, IL-9, IL-15 and IL-21) \nsignalling, leading to low T-cell and NK-cell numbers. Although B-cell numbers are normal, these \nare non-functional due to the absence of T-cell help, resulting in impaired antibody synthesis. Option B: Mutation in the STAT3 gene is seen in an autosomal dominant form of Hyper IgE \nsyndrome (also known as Job syndrome), characterized by recurrent staphylococcal skin \nabscesses, recurrent pulmonary infections often with pneumatoceles and atopic dermatitis. Here, \nserum IgE levels are markedly elevated (due to IgE overproduction without modulation), and IgA, \nIgG and IgM concentrations are generally normal. Option D: A defect in NADPH oxidative pathway is seen in chronic granulomatous disease, \nleading to failure of the oxidative burst in phagocytes, predisposing individuals to \ncatalase-positive microbial infections.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Immune_Disorders_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 8,
    "question": "Question 8: A 5-year-old boy is brought with complaints as shown below. The parents report that these \ncomplaints have been present for the last 2 years. Which of the following is found to be the \nmost effective treatment for this disease? 85 \nSold by @itachibot",
    "options": {
      "a": "1 and 3",
      "b": "1 and 2",
      "c": "Only 2",
      "d": "2 and 3"
    },
    "correct_answer": "d",
    "explanation": "This 5-year-old boy presenting with a 2-year history of thick, white-coated tongue and dystrophic \nnail changes, as shown in the above image, suggests chronic mucocutaneous candidiasis, for \nwhich transfer factor therapy and amphotericin B have been reported to be the effective \ntreatments. Chronic mucocutaneous candidiasis (CMC) is characterized by deficient cell-mediated immunity \nto candida, usually due to defects in IL-17. Mutations affecting the IL-17 signalling pathway lead to 93 \nSold by @itachibot impaired IL-17 production and defective TH17 function, compromising mucosal and skin defence \nmechanisms and increasing susceptibility to fungal infections. Patients develop persistent fungal infections of the skin, nails, oral cavity, and genitals, primarily \ncaused by Candida species. Despite chronic mucocutaneous involvement, these patients typically \ndo not develop invasive candidiasis. A key feature of CMC is the absence of delayed \nhypersensitivity to candida antigens. However, circulating antibodies to them are present in high \ntitres. They do not show increased susceptibility to other infections but may develop \nendocrinopathies, autoimmune disorders, and vascular abnormalities. Transfer factor therapy and Amphotericin B have been reported to be effective for the treatment \nof chronic mucocutaneous candidiasis.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Immune_Disorders_Q8_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 9,
    "question": "Question 9: An infant with a history of delayed separation of the umbilical cord now presents with \nrecurrent pneumonia. The total leukocyte count is 20,000/microlitre. Which of the following \ngenetic defects is most likely present?",
    "options": {
      "a": "Mutation of Bruton tyrosine kinase gene",
      "b": "Low levels of NADPH oxidase and negative DHR test",
      "c": "Reduced phagocyte surface expression of sialyl-Lewis x",
      "d": "Excessive IgM with reduced IgG and IgA"
    },
    "correct_answer": "c",
    "explanation": "This history of delayed separation of the umbilical cord with recurrent pneumonia and peripheral \nleucocytosis is highly suggestive of leucocyte adhesion defect (LAD). In this defect, there is \nreduced phagocyte surface expression of sialyl-Lewis X. LAD is an autosomal recessive disorder affecting leukocyte function. Neutrophils have reduced \nadhesion, mobility, and phagocytic ability. There are three main types of LAD: • LAD 1- Defective 2 integrin common chain (CD18), leading to abnormal neutrophil chemotaxis \nand defective tight adhesion. • LAD 2- Reduced phagocyte surface expression of sialyl-Lewis X (fucosylated protein), leading to \nabnormal neutrophil rolling and tethering. • LAD 3- Defect in regulatory protein (kindlin 3, also known as Fermt 3) involved in activating the \nligand affinity for 2 integrins, leading to abnormal neutrophil chemotaxis and adhesion (milder \nthan type 1). LAD is characterised by recurrent bacterial and fungal infections, reduced inflammatory \nresponses despite elevated blood neutrophilia, and delayed wound healing and delayed umbilical \ncord loss. in patients with LAD type 3, there may be bleeding as 2 integrin on platelets is \nnon-functional. Typical signs of inflammation may be absent, pus does not form with few neutrophils on biopsy of \ninfected tissues along with massive hyperleukocytosis (&gt;30,000/L) in the blood. Early \nallogeneic hematopoietic stem cell transplantation is used in the treatment of severe LAD.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following statements is true about severe combined immunodeficiency \ndisorders?",
    "options": {
      "a": "Reticular dysgenesis of de Vaal is a mild form of combined immunodeficiency",
      "b": "They are inherited as autosomal dominant disorders",
      "c": "Adenosine deaminase deficiency is associated with chondrocyte abnormalities",
      "d": "The defect in Swiss type agammaglobulinemia is at the level of multipotent hemopoeitic stem "
    },
    "correct_answer": "c",
    "explanation": "Adenosine deaminase deficiency is associated with chondrocyte abnormalities. Severe combined immunodeficiency disorders are associated with severe deficiency of both \nhumoral and CMI. They are inherited in both X-linked and autosomal recessive modes. There are \ndifferent forms of this disorder: 94 \nSold by @itachibot • Reticular dysgenesis is the most serious form of combined immunodeficiency. Here the defect is \nat the level of the multipotent hemopoietic stem cell. • Adenosine deaminase (ADA) deficiency is associated with enzyme deficiency. The condition is \nassociated with chondrocyte abnormalities which can be discerned radiologically. • Swiss-type agammaglobulinemia is associated with lymphocytopenia and severe defect in CMI. \nThe basic defect is at the level of the lymphoid stem cell.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Immune Disorders"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following is an immunologically privileged site?",
    "options": {
      "a": "Clostridium histolyticum",
      "b": "Streptococcus pyogenes",
      "c": "Staphylococcus aureus",
      "d": "Clostridium perfringens"
    },
    "correct_answer": "a",
    "explanation": "The seminiferous tubules are an immunologically privileged site. Immunologically privileged sites can tolerate the introduction of antigens without eliciting an \nimmune response. This allows a higher likelihood of graft survival, even without perfect HLA \nmatching. As a result, an allograft can be placed in these sites without endangering a rejection \nreaction. The unique immune tolerance in these regions is primarily due to the lack of effective lymphatic \ndrainage, which prevents antigen presentation to the immune system, and the presence of \nblood-tissue barriers that restrict immune cell infiltration. Low vascularity contributes to immune \nprivilege by minimising antigen exposure and immune cell recruitment. Examples of immune-privileged sites are the anterior chamber of the eye, cornea, testes, and \nbrain. Note: Although part of the brain, the blood-brain barrier is absent at the area postrema, therefore \nit is not an immune-privileged site. 95 \nSold by @itachibot Streptococci and Enterococci",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Immune_Disorders_Q11_q.jpg",
    "explanation_image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Immune_Disorders_Q11_exp.jpg",
    "chapter_heading": "Immune Disorders"
  }
]