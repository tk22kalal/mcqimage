[
  {
    "q_no": 1,
    "question": "Question 1: Identify the organism.",
    "options": {
      "a": "Leptospira interrogans",
      "b": "Treponema pallidum",
      "c": "Borrelia burgdorferi",
      "d": "Helicobacter pylori"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 30-year-old truck driver presented with a painless ulcer in the genital area. On \nexamination, a single ulcer with an indurated base was found. An image of the tissue section \nis shown below. Identify the staining method. 316 \nSold by @itachibot",
    "options": {
      "a": "Fontana's method",
      "b": "Levaditi's method",
      "c": "Castaneda's method",
      "d": "Albert's method"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: What type of motility is shown by Treponema pallidum?",
    "options": {
      "a": "Tumbling motility",
      "b": "Gliding motility",
      "c": "Corkscrew motility",
      "d": "Darting motility"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: A 32-year-old pregnant lady tests VDRL positive at her 1st-trimester antenatal check-up. An \nFTA-ABS confirms the diagnosis. Which of the following is a false statement about the \norganism causing this disease?",
    "options": {
      "a": "It cannot be cultured in vitro",
      "b": "Endoflagella is in the periplasmic space.",
      "c": "Humans are the only known natural hosts",
      "d": "Reiter’s strain is pathogenic"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A patient had a solitary, painless penile ulcer 2 months back. Now, he presents with a \ngeneralized maculopapular rash over the body. What is the sensitivity of VDRL at this stage of \nthe disease?",
    "options": {
      "a": "25%",
      "b": "50%",
      "c": "75%",
      "d": "100%"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following is a false statement regarding the serological tests of syphilis?",
    "options": {
      "a": "Rapid plasma reagin test is a group specific treponemal test",
      "b": "VDRL test is the test of choice for response to therapy",
      "c": "VDRL is the test of choice for examining CSF",
      "d": "Treponemal tests are likely to remain reactive even after adequate therapy"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 55-year old man was brought to the OPD with complaints of rapid decline in cognition, \nimpaired position, and vibratory sense. There is a history of sporadic short-term relationships \nwith many promiscuous sexual partners. Romberg’s sign is positive and bilateral Argyll \nRobertson pupils are seen on checking for pupillary reflex. Which of the following is the \ninvestigation of choice?",
    "options": {
      "a": "Treponema pallidum haemagglutination test",
      "b": "Venereal disease research laboratory (VDRL) test",
      "c": "Fluorescent Treponemal Antibody Absorption test",
      "d": "EIA-Enzyme-linked ImmunoAssay"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: You treated a case of secondary syphilis with a single dose of benzathine penicillin-G 2.4 \nmillion IU IM. What follow-up advice would you give for the assessment of the patient's 318 \nSold by @itachibot response to treatment?",
    "options": {
      "a": "Follow up with VDRL after 6 months and 12 months",
      "b": "Follow up with VDRL after 3 months and 6 months",
      "c": "Follow up with TPHA after 6 months and 12 months",
      "d": "Follow up with TPHA after 3 months and 6 months"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A pregnant woman at 10 weeks of gestational age tested VDRL positive but negative for \nspecific treponemal tests. What is your interpretation?",
    "options": {
      "a": "Positive for syphilis",
      "b": "False negative",
      "c": "Positive for non pathogenic treponema",
      "d": "Biological false positive"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: A 2-month-old infant presented with a runny nose and bullous lesions on the skin and legs. \nHer X-ray (given below) showed features suggestive of periostitis. Which of the following is \nthe initial investigation of choice?",
    "options": {
      "a": "Venereal disease research laboratory (VDRL) test",
      "b": "Treponema pallidum hemagglutination (TPHA) assay",
      "c": "Fluorescent treponema antibody absorbed (FTA-ABS) test",
      "d": "Culture"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: What is the causative agent of yaws ?",
    "options": {
      "a": "T.pallidum",
      "b": "T.pertenue",
      "c": "T.carateum",
      "d": "T.endemicum"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: What is the causative organism and the corresponding vector for epidemic relapsing fever?",
    "options": {
      "a": "Borrelia burgdorferi - louse",
      "b": "Borrelia recurrentis - tick",
      "c": "Borrelia recurrentis - louse",
      "d": "Borrelia burgdorferi - tick"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: During a louse outbreak among jail inmates, a few of them developed fevers that subsided \nafter 3-5 days. The fever relapsed after a week and subsided again. Many patients had tender \nsplenomegaly on examination. Which culture medium is used to isolate the organism \nimplicated here?",
    "options": {
      "a": "Thayer-Martin medium",
      "b": "Thiosulphate, citrate, bile salt agar",
      "c": "Barbour-Stoenner-Kelly broth medium",
      "d": "Mannitol, egg-yolk, phenol red, polymyxin agar"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which one of the following micro-organisms uses antigenic variation as a major means of \nevading the host immune system? 320 \nSold by @itachibot",
    "options": {
      "a": "Treponema pallidum",
      "b": "Borrelia recurrentis",
      "c": "Leptospira",
      "d": "Listeria"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: A 23 year old presented with fever, myalgia, and skin lesion as shown in the image. What is \nthe causative organism for the above condition?",
    "options": {
      "a": "Orientia tsutsugamoshi",
      "b": "Ehrlichia chaffeensis",
      "c": "Borrelia burgdorferi",
      "d": "Coxiella burnetti"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: Following a flood, there is an outbreak of fever. Water samples from various sources are \nbeing studied for pathogens. The bacteria shown in the given image was isolated as a \npotential cause of disease. Which of the following animals is the most important reservoir of \nthese organisms? 321 \nSold by @itachibot",
    "options": {
      "a": "Rat",
      "b": "Cat",
      "c": "Fish",
      "d": "Dog"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: A farmer who works in paddy fields presented with fever, intense myalgia, and hematochezia. \nLab investigations showed sharply elevated creatinine levels and high liver enzymes. What is \nthe causative organism?",
    "options": {
      "a": "Leptospira",
      "b": "Borrelia",
      "c": "Legionella",
      "d": "Listeria"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: At a relief camp in Karnataka, a few people developed fever, myalgia, and conjunctival \nsuffusion. Rapid diagnostic IgM ELISA tests performed in the field showed leptospirosis. \nWhich of the following culture media can be used to confirm this diagnosis?",
    "options": {
      "a": "EMJH",
      "b": "BCYE",
      "c": "TCBS",
      "d": "CCFA"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: A 16-year-old boy is admitted with fever, icterus, conjunctival suffusion, and hematuria for 15 \ndays. Which serological test should be done for diagnosis?",
    "options": {
      "a": "Widal test",
      "b": "Microscopic agglutination test",
      "c": "Weil felix reaction",
      "d": "Paul Bunnell test"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 20,
    "question": "Question 20: A 12-year-old boy presents with right upper quadrant pain, calf pain, conjunctival suffusion, \nicterus, and fever. Examination shows tender hepatomegaly. What is the most likely \ndiagnosis?",
    "options": {
      "a": "Chikungunya",
      "b": "Leptospirosis",
      "c": "Dengue hemorrhagic fever",
      "d": "Encephalopathy caused by hepatitis A"
    },
    "correct_answer": "a",
    "explanation": "Tropical pulmonary eosinophilia is also known as Weingarten syndrome. Tropical eosinophilia occurs as a result of hypersensitivity reaction to microfilarial antigens and \nnot directly due to lymphatic involvement. It is a manifestation of occult filariasis \n(Meyer's-Kouwenaar syndrome). Clinical features of occult filariasis include massive eosinophilia and hepatosplenomegaly. Synonyms of tropical pulmonary eosinophilia include - • Weingarten syndrome • Pseudo-tuberculosis of the lung • Eosinophilic pseudo-leukemia • Tropical eosinophilic asthma • Frimodt-Moller and Barton's syndrome",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q20_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: What is the protein coat covering the nucleic acid in a virion known as?",
    "options": {
      "a": "Capsid",
      "b": "Peplomer",
      "c": "Envelope",
      "d": "Tegument"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following viruses has a single-stranded DNA?",
    "options": {
      "a": "Poxvirus",
      "b": "Parvovirus",
      "c": "Picornavirus",
      "d": "Reovirus"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following is false regarding enveloped viruses?",
    "options": {
      "a": "Ether sensitive",
      "b": "Heat labile",
      "c": "Susceptible to bile salts",
      "d": "Lipid is viral coded"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following is an enveloped virus?",
    "options": {
      "a": "Reovirus",
      "b": "Hepatitis A virus",
      "c": "Hepatitis C virus",
      "d": "Adenovirus"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A patient in the ICU requires fresh frozen plasma (FFP). The FFP that arrives from the blood \nbank is labeled as Solvent/Detergent plasma, which destroys lipid-enveloped viruses. Which \nof the following viral infections is the patient still susceptible to?",
    "options": {
      "a": "Human immunodeficiency virus",
      "b": "Hepatitis A virus",
      "c": "Hepatitis B virus",
      "d": "Hepatitis C virus"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: In which of the following viruses is a segmented genome found?",
    "options": {
      "a": "Filovirus",
      "b": "Orthomyxovirus",
      "c": "Retrovirus",
      "d": "Poliovirus"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A ‹-year-old with HIV is brought with complaints of the rash shown below. Where does DNA \nreplication occur in the viruses falling in the same family as the microbe causing this rash? 337 \nSold by @itachibot",
    "options": {
      "a": "Host cytoplasm",
      "b": "Host nucleus",
      "c": "Viral cytoplasm",
      "d": "Viral nucleus"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: An epidemic involving an ss-RNA virus with 3'-5' RNA has broken out in West Africa. Which \nof the following enzymes do such viruses use in genome replication?",
    "options": {
      "a": "DNA-dependent RNA polymerase",
      "b": "RNA replicase",
      "c": "Reverse transcriptase",
      "d": "Taq polymerase"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: The virus shown below was suspected to be the cause of a deadly hemorrhagic fever outbreak \nin èuinea in March 2’21. How is it transmitted? 338 \nSold by @itachibot",
    "options": {
      "a": "Direct contact with infected body fluids",
      "b": "Mosquito-borne",
      "c": "Food-borne",
      "d": "Air-borne"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: An elderly diabetic man presents with a complaints of fever, cough and difficulty in breathing \nfor the past 3 days. He gives a history of international travel 1’ days back. Laboratory reports \nshow positive for COVID-19. What is the symmetry of the causative virus?",
    "options": {
      "a": "Naked helical symmetry",
      "b": "Icosahedral symmetry",
      "c": "Enveloped helical symmetry",
      "d": "Complex symmetry"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following statements is false regarding symmetry of viruses ?",
    "options": {
      "a": "Viral symmetry is studied by heavy metals stains.",
      "b": "The most efficient closed shell sub-unit arrangement is icosahedral.",
      "c": "Icosahedral symmetry involves 12 faces and 2’ vertices .",
      "d": "It is not possible for 'empty' helical particles to form"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: Which of the following viruses shows an enveloped icosahedral symmetry?",
    "options": {
      "a": "Rubella virus",
      "b": "Influenza virus",
      "c": "Measles virus",
      "d": "Poxvirus"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: An immunologist is working on growing the influenza virus for vaccine production at the \nNational Institute of Virology, Pune. Which of the following sites is used for the given \npurpose in a fertilized egg?",
    "options": {
      "a": "4",
      "b": "1",
      "c": "2",
      "d": "3"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Quantitative infectivity assay of viruses is done by  \n. 340 \nSold by @itachibot",
    "options": {
      "a": "Egg inoculation",
      "b": "Hemadsorption",
      "c": "Plaque assay",
      "d": "Electron microscopy"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: Which virus causes the cytopathic effect of syncytium formation?",
    "options": {
      "a": "SV 4’",
      "b": "Enteroviruses",
      "c": "Measles virus",
      "d": "Adeno virus"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: A 23-year-old lady presents with the lesions shown below. What is the causative organism?",
    "options": {
      "a": "Herpes simplex virus type 1",
      "b": "Epstein-Barr virus",
      "c": "Cytomegalovirus",
      "d": "Herpes simplex virus type 2"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Cowdry Type A inclusions are seen in:",
    "options": {
      "a": "Herpes simplex",
      "b": "Rabies",
      "c": "Molluscum contagiosum",
      "d": "Adenovirus"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: 351 \nSold by @itachibot A 13-year-old girl has had 4 episodes oƒ meningitis over the last 4 years, with the disease \nlasting a ƒew days at a time, leaving slowly resolving neurological symptoms such as visual \nand memory loss. A CSF cytology shows lymphocytic pleocytosis and a diagnosis oƒ Mollaret’s \nmeningitis is made. Which organism is implicated here?",
    "options": {
      "a": "Measles virus",
      "b": "Mumps virus",
      "c": "Herpes simplex virus",
      "d": "Rubella virus"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: A dentist presents to the surgery OPD with the ƒindings shown below. He is ƒebrile. \nMicroscopic examination oƒ the tissue reveals Tzanck cells. What is the causative agent?",
    "options": {
      "a": "Pox virus",
      "b": "Adenovirus",
      "c": "Picornavirus",
      "d": "Herpes simplex virus"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A young male presents to the STD clinic with painƒul lesions as shown in the image. What is \nthe most likely microscopic ƒinding oƒ the lesion? 352 \nSold by @itachibot",
    "options": {
      "a": "Tzank cells",
      "b": "Pund cells",
      "c": "Henderson-Patterson bodies",
      "d": "Guarnieri bodies"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Your neighbor’s child complains oƒ ƒever and develops a rash. On examination, the rashes are \npresent all over the body, and look like ‘dewdrops lying on the skin’. The child says that his \nƒriend in school had similar complaints a ƒew days ago. Which oƒ the given statements is true \nabout this rash?",
    "options": {
      "a": "It is centripetal in distribution",
      "b": "The rash usually starts on the distal parts oƒ limbs",
      "c": "All the lesions are oƒ same age",
      "d": "Scabs are also inƒectious in chicken pox"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: While on rounds in the NICU, you notice a newborn baby with a zig-zag dermatomal cicatrix \non the ƒorehead and leƒt side oƒ the ƒace. The limbs are small and atrophied. Microcephaly is \nnoted. Which maternal inƒection are these ƒindings characteristically associated with?",
    "options": {
      "a": "Toxoplasma",
      "b": "Cytomegalovirus",
      "c": "Varicella zoster virus",
      "d": "Herpes simplex virus type - 1"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: Which oƒ the ƒollowing is the predominant pathogen to inƒect renal transplant recipients one \nto ƒour months ƒollowing transplantation?",
    "options": {
      "a": "Cytomegalovirus",
      "b": "JC virus",
      "c": "BK virus",
      "d": "Epstein-Barr virus"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: An inƒant is brought by his worried parents with a rash and yellowish discoloration oƒ the \nskin. On examination, the baby has petechiae, jaundice, hepatosplenomegaly, and \nmicrocephaly. The developmental assessment shows global developmental delay. An axial cut \noƒ the non-contrast CT oƒ the brain is given below. What is the causative organism?",
    "options": {
      "a": "Rubella",
      "b": "Herpes simplex virus",
      "c": "Cytomegalovirus",
      "d": "Varicella"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: Choose the correct statement regarding CMV.",
    "options": {
      "a": "Ganciclovir resistance is due to mutation in UL97 phosphotransƒerase gene",
      "b": "CMV can be cultured in vitro in any mammalian cell",
      "c": "Commonest maniƒestation oƒ CMV associated disease is watery diarrhea",
      "d": "UL54 mutated CMV strains do not show cross resistance to Foscarnet"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: Where are owl's eye inclusion bodies seen?",
    "options": {
      "a": "Yellow ƒever",
      "b": "Cytomegalovirus",
      "c": "Adenovirus",
      "d": "Herpes simplex virus"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: What does the Paul-Bunnell test diagnose?",
    "options": {
      "a": "Kissing disease",
      "b": "Hand-ƒoot-and-mouth disease",
      "c": "Barlow's disease",
      "d": "Fiƒth disease"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: You are studying the association oƒ human herpesvirus-4 with other diseases. Which oƒ the \nƒollowing patients have diseases associated with this virus?",
    "options": {
      "a": "1 and 5 only",
      "b": "2, 3 and 4",
      "c": "3 and 4 only",
      "d": "1, 2 and 5"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which oƒ the ƒollowing viruses is known to cause hemorrhagic cystitis, diarrhea, and \nconjunctivitis?",
    "options": {
      "a": "RSV",
      "b": "Adenovirus",
      "c": "Rhinovirus",
      "d": "Rotavirus"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: Viral inƒection mimicking erythroblastosis ƒetalis is:",
    "options": {
      "a": "HSV",
      "b": "Epstein-Barr virus",
      "c": "Picornavirus",
      "d": "Parvovirus B19"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: Which organism causes the disease shown below?",
    "options": {
      "a": "Roseola virus",
      "b": "Parvovirus B19",
      "c": "Rubella virus",
      "d": "Rubeola virus"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: An 8-year-old child presents with skin lesions, suspected to be molluscum contagiosum. How \nis the diagnosis oƒ this condition typically made?",
    "options": {
      "a": "Viral Culture",
      "b": "Skin biopsy",
      "c": "PCR ƒor Viral DNA",
      "d": "Clinical appearance"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: What is the causative organism oƒ the condition shown below?",
    "options": {
      "a": "Treponema pallidum",
      "b": "Human papillomavirus 6 and 11",
      "c": "Human papillomavirus 16 and 18",
      "d": "Hemophilus ducreyi"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: 357 \nSold by @itachibot A patient presents with plantar warts as shown below. Which type oƒ human papillomavirus \nis responsible ƒor causing these?",
    "options": {
      "a": "6",
      "b": "11",
      "c": "1",
      "d": "7"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q19_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 20,
    "question": "Question 20: As a CHC medical oƒƒicer, you organize an outreach program ƒor HPV vaccination and the \nprevention oƒ cervical cancer. Which protein is used ƒor antigenic response in this vaccine?",
    "options": {
      "a": "E6, E7",
      "b": "L1",
      "c": "E1, E2",
      "d": "L2"
    },
    "correct_answer": "a",
    "explanation": "Tropical pulmonary eosinophilia is also known as Weingarten syndrome. Tropical eosinophilia occurs as a result of hypersensitivity reaction to microfilarial antigens and \nnot directly due to lymphatic involvement. It is a manifestation of occult filariasis \n(Meyer's-Kouwenaar syndrome). Clinical features of occult filariasis include massive eosinophilia and hepatosplenomegaly. Synonyms of tropical pulmonary eosinophilia include - • Weingarten syndrome • Pseudo-tuberculosis of the lung • Eosinophilic pseudo-leukemia • Tropical eosinophilic asthma • Frimodt-Moller and Barton's syndrome",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 21,
    "question": "Question 21: Nonavalent HPV vaccine works against which oƒ the ƒollowing strains oƒ the virus?",
    "options": {
      "a": "1, 6, 11, 16, 18, 31, 45, 52, 58",
      "b": "6, 11, 16, 18, 31, 33, 45, 52, 58",
      "c": "1, 16, 18, 21, 33, 45, 48, 52, 58",
      "d": "6, 11, 16, 18, 33, 45, 48, 52, 58"
    },
    "correct_answer": "c",
    "explanation": "Dracunculus medinensis is known as serpent worm. It is a viviparous nematode. This has been eradicated from India and all of the southeast Asian region in the year 2000.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 22,
    "question": "Question 22: An HIV-positive patient presents with the ƒollowing skin lesions. Which oƒ the ƒollowing \ndiseases is associated with the virus implicated here?",
    "options": {
      "a": "Post-transplant lymphoproliƒerative disease",
      "b": "Merkel cell carcinoma",
      "c": "Adult T-cell leukemia",
      "d": "Primary eƒƒusion lymphoma"
    },
    "correct_answer": "a",
    "explanation": "600 \nSold by @itachibot Parasite \nDefinitive host \nFirst intermediate host \nSecond intermediate ho \nst Diphyllobothri \num Humans \nCyclops \nCyclops and fish Paragonimus \nHumans \nSnail \nCrayfish and crab Fasciola \nSheep and hu \nmans Snail \nAquatic vegetations Brugia \nHumans \nMansonia mosquito \n- 601 \nSold by @itachibot Applied Microbiology",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q22_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 23,
    "question": "Question 23: Which oƒ the ƒollowing viruses is implicated in progressive multiƒocal leukoencephalopathy?",
    "options": {
      "a": "JC virus",
      "b": "BK virus",
      "c": "Measles virus",
      "d": "Herpes simplex virus"
    },
    "correct_answer": "a",
    "explanation": "The rapid dipstick test is the method of choice for the diagnosis of kala-azar. The following tests are used for the laboratory diagnosis of kala-azar: • Rapid diagnostic tests - rK39 and dipstick test strip. • Parasitological diagnosis - demonstration of LD bodies on microscopy is confirmatory • Surveillance purposes - Aldehyde test of Napier 533 \nSold by @itachibot • Serological diagnosis - Rapid dipstick test, direct agglutination test, ELISA, indirect fluorescent \nantibody test • Assessing immune status - Leishmanin (Montenegro) test • Induration of  5 mm is considered positive • Usually becomes positive 4-6 weeks after onset of cutaneous leishmaniasis 534 \nSold by @itachibot Protozoology - Sporozoa",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q23_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which of the following is a non-enveloped virus that causes hepatitis?",
    "options": {
      "a": "Hepatitis C",
      "b": "Hepatitis B",
      "c": "Hepatitis A",
      "d": "Hepatitis D"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 25-year-old man hailing from Mumbai presents to you with complaints of abdominal pain \nand malaise. On examination, he is icteric and the liver is palpable 6 cm below the costal \nmargin. On further questioning, he informs you that a few weeks back the drains surrounding \nhis house were overflowing due to the monsoon flooding. Which of the following is the most \nlikely etiology?",
    "options": {
      "a": "Hepatitis A or D",
      "b": "Hepatitis B or E",
      "c": "Hepatitis A or B",
      "d": "Hepatitis A or E"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: A 18-year-old man presents with fever, diarrhea, and jaundice. He gives a history of \nconsuming food at a roadside stall. Which of the following statements is incorrect about the \netiological agent?",
    "options": {
      "a": "It belongs to family Hepatoviridae",
      "b": "Majority of infections are symptomatic",
      "c": "It is transmitted by feco-oral route",
      "d": "A formalin inactivated vaccine is used for prevention"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: 373 \nSold by @itachibot What is the average incubation period for Hepatitis A virus?",
    "options": {
      "a": "&lt;1 week",
      "b": "30 days",
      "c": "90 days",
      "d": "120 days"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: Which of the following is called as Australia antigen?",
    "options": {
      "a": "HBsAg",
      "b": "HBeAg",
      "c": "HBcAg",
      "d": "HBV-DNA"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following is also referred to as Dane particle?",
    "options": {
      "a": "HAV",
      "b": "HBV",
      "c": "HCV",
      "d": "HDV"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 35-year-old male patient with chronic hepatitis B has high levels of serum HBeAg. Which of \nthe following viral genes is involved in coding the same?",
    "options": {
      "a": "C gene",
      "b": "S gene",
      "c": "P gene",
      "d": "X gene"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: 374 \nSold by @itachibot While drawing blood from a patient with hepatitis B, it splashes into the eyes of a nurse. \nWhich of the following markers will appear first in her blood if she gets infected?",
    "options": {
      "a": "HBeAg",
      "b": "HBsAg",
      "c": "Anti HBs",
      "d": "Anti HBe"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A patient with hepatitis B presents to OPD for follow-up. Which of the following serological \nmarkers will not be detected in his blood?",
    "options": {
      "a": "HBsAg",
      "b": "Anti-HBs",
      "c": "HBcAg",
      "d": "Anti-HBc"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: There are 3 to 5% healthy hepatitis B carriers in India who are asymptomatic. They are at the \nrisk of developing hepatocellular carcinoma in the future because",
    "options": {
      "a": "They are unable to mount inflammation against the virus",
      "b": "Virus can integrate with host DNA and form complementary DNA",
      "c": "There is a risk of elevation of transaminases",
      "d": "Liver parenchymal cells are in a state of high proliferation"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: The given life cycle is suggestive of which of the following viruses? 375 \nSold by @itachibot",
    "options": {
      "a": "HIV",
      "b": "Hepatitis B",
      "c": "Influenza",
      "d": "Herpes simplex"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A patient is diagnosed with Hepatitis B infection. Which of the following markers will always \nbe present in his serum, even during recurrences, or if he develops chronic hepatitis?",
    "options": {
      "a": "HBc Ag",
      "b": "Anti HBs Ab",
      "c": "Anti HBc Ab",
      "d": "HBe Ag"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: Which of the following is not synthesized by pre-core mutants of hepatitis B virus?",
    "options": {
      "a": "HBsAg",
      "b": "HBxAg",
      "c": "HBcAg",
      "d": "HBeAg"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: The serological profile of a patient is given below. What is your diagnosis?",
    "options": {
      "a": "Acute HBV infection with high infectivity",
      "b": "HBV vaccination",
      "c": "Chronic HBV infection with high infectivity",
      "d": "Acute HBV infection with low infectivity"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: An HBsAg positive primigravida presents to you for routine antenatal care. She asks you \nabout the risk of transmission of HBV to her baby. Which of the following is not related to the \nsame?",
    "options": {
      "a": "Intrauterine transmission",
      "b": "Normal vaginal delivery",
      "c": "Forceps vaginal delivery",
      "d": "Breastfeeding"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: An intern takes a hepatitis B vaccine booster dose before his ward postings begin. Which of \nthe following serological markers will indicate immunity against HBV in this case?",
    "options": {
      "a": "HBsAg",
      "b": "Anti-HBs",
      "c": "Anti-HBc",
      "d": "Anti-HBe"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: Which of the following statements is false regarding HBV vaccination?",
    "options": {
      "a": "The current vaccine is prepared by cloning 'S gene' of HBV in Baker’s yeast",
      "b": "A single dose of HBV vaccine is recommended for high-risk groups for pre-exposure ",
      "c": "For high-risk mothers who are seronegative, hepatitis B vaccine can be given during pregnancy.",
      "d": "Hepatitis B vaccine should be administered intramuscularly in the deltoid muscle."
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: A known case of hepatitis B going into hepatic failure is found to have a high viral load. \nWhich of the following serological markers will not contribute to the viral load?",
    "options": {
      "a": "HBeAg",
      "b": "HBV DNA",
      "c": "HBV DNA polymerase",
      "d": "Anti-HBs"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: A 30-year-old man with heroin addiction presents with fatigue, palpable purpura, joint pains, \nand abdominal pain. Urine analysis shows massive proteinuria. Which of the following \nviruses should be tested for in this patient?",
    "options": {
      "a": "Hepatitis A",
      "b": "Hepatitis C",
      "c": "Hepatitis D",
      "d": "Hepatitis E"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 20,
    "question": "Question 20: Which hepatitis virus shows maximum chronicity in adults?",
    "options": {
      "a": "Hepatitis A",
      "b": "Hepatitis E",
      "c": "Hepatitis C",
      "d": "Hepatitis D"
    },
    "correct_answer": "a",
    "explanation": "Tropical pulmonary eosinophilia is also known as Weingarten syndrome. Tropical eosinophilia occurs as a result of hypersensitivity reaction to microfilarial antigens and \nnot directly due to lymphatic involvement. It is a manifestation of occult filariasis \n(Meyer's-Kouwenaar syndrome). Clinical features of occult filariasis include massive eosinophilia and hepatosplenomegaly. Synonyms of tropical pulmonary eosinophilia include - • Weingarten syndrome • Pseudo-tuberculosis of the lung • Eosinophilic pseudo-leukemia • Tropical eosinophilic asthma • Frimodt-Moller and Barton's syndrome",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 21,
    "question": "Question 21: A patient with fulminant hepatitis is found to have coinfection with hepatitis B and hepatitis \nD viruses. Which of the following structures of HBV aid in the survival of HDV?",
    "options": {
      "a": "Reverse transcriptase",
      "b": "Envelope protein",
      "c": "Transcriptase to transcribe mRNA",
      "d": "Replicase enzyme"
    },
    "correct_answer": "c",
    "explanation": "Dracunculus medinensis is known as serpent worm. It is a viviparous nematode. This has been eradicated from India and all of the southeast Asian region in the year 2000.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 22,
    "question": "Question 22: In the year 1955, following sewage contamination of drinking water in New Delhi, an \noutbreak of jaundice ensued. Electron microscopy of fecal samples from the affected \npopulation revealed a virus resembling caliciviruses. Which of the following was the \netiological agent?",
    "options": {
      "a": "Hepatitis C",
      "b": "Hepatitis A",
      "c": "Hepatitis B",
      "d": "Hepatitis E"
    },
    "correct_answer": "a",
    "explanation": "600 \nSold by @itachibot Parasite \nDefinitive host \nFirst intermediate host \nSecond intermediate ho \nst Diphyllobothri \num Humans \nCyclops \nCyclops and fish Paragonimus \nHumans \nSnail \nCrayfish and crab Fasciola \nSheep and hu \nmans Snail \nAquatic vegetations Brugia \nHumans \nMansonia mosquito \n- 601 \nSold by @itachibot Applied Microbiology",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 23,
    "question": "Question 23: Which of the following is false about viral hepatitis?",
    "options": {
      "a": "Anti LKM-3 antibody is associated with hepatitis B infection",
      "b": "Anti-LKM1 antibodies are associated with hepatitis C infection",
      "c": "IgM anti-HAV antibody appears during the late incubation period",
      "d": "Enterically transmitted non-A, non-B hepatitis is caused by hepatitis E virus"
    },
    "correct_answer": "a",
    "explanation": "The rapid dipstick test is the method of choice for the diagnosis of kala-azar. The following tests are used for the laboratory diagnosis of kala-azar: • Rapid diagnostic tests - rK39 and dipstick test strip. • Parasitological diagnosis - demonstration of LD bodies on microscopy is confirmatory • Surveillance purposes - Aldehyde test of Napier 533 \nSold by @itachibot • Serological diagnosis - Rapid dipstick test, direct agglutination test, ELISA, indirect fluorescent \nantibody test • Assessing immune status - Leishmanin (Montenegro) test • Induration of  5 mm is considered positive • Usually becomes positive 4-6 weeks after onset of cutaneous leishmaniasis 534 \nSold by @itachibot Protozoology - Sporozoa",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q23_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which of the following subtypes of HIV is most common in India?",
    "options": {
      "a": "Subtype A",
      "b": "Subtype B",
      "c": "Subtype C",
      "d": "Subtype D"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following statements is incorrect about HIV?",
    "options": {
      "a": "Cross blood-brain barrier",
      "b": "Has 2 single strands of RNA",
      "c": "Inhibited by 0.3 % H2O2",
      "d": "Is a thermostable virus"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following is a nonstructural gene of HIV?",
    "options": {
      "a": "gag gene",
      "b": "tat gene",
      "c": "pol gene",
      "d": "env gene"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following represents the correct sequence of HIV replication?",
    "options": {
      "a": "RNA-DNA-RNA",
      "b": "RNA-DNA",
      "c": "DNA-RNA",
      "d": "DNA-RNA-DNA"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: As part of developing the public health policy on HIV in India, which of the following modes \nof transmission would you focus on the most?",
    "options": {
      "a": "Parent to child transmission",
      "b": "Heterosexual transmission",
      "c": "Blood transfusion",
      "d": "Homosexual transmission"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 35-year-old bisexual man goes to an ICTC centre for counselling about HIV. Which of the \nfollowing is false about HIV transmission?",
    "options": {
      "a": "Male-to-female HIV transmission has more risk of causing infection than female-to-male ",
      "b": "The risk of acquiring HIV with unprotected receptive anal intercourse is lower than that with ",
      "c": "The quantity of HIV-1 in plasma is a primary determinant of the risk of HIV-1 transmission",
      "d": "Male circumcision is associated with a lower risk of HIV acquisition for heterosexual men"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: Specific binding of the HIV to the CD4 receptor occurs via which of these?",
    "options": {
      "a": "gp120",
      "b": "gp41",
      "c": "CCR5",
      "d": "CXCR4"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: A patient presents to you with a history of sharing needles during IV drug abuse with an \nHIV-positive partner. HIV-antibody spot test was negative, however p24 antigen assay was \npositive. You explain to him that he is currently in the window period for HIV. Which of the 391 \nSold by @itachibot following statements would you use to explain the concept to him?",
    "options": {
      "a": "It is the time period between infection and onset of first symptoms",
      "b": "It is the time period between infection and detection of antibodies",
      "c": "It is the time period between exposure and onset of viral multiplication",
      "d": "It is the time period between exposure and appearance of symptoms"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A 41-year-old man was admitted for hernioplasty and initial investigations revealed that he is \nHIV-positive. He gives no history of contact and has no HIV-associated symptoms. Which of \nthe following statements is incorrect about this phase of HIV infection?",
    "options": {
      "a": "Viral replication is active",
      "b": "Sequestered in lymphoid tissue",
      "c": "Infective",
      "d": "Rapid decline of CD4 count is common"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: A 40-year-old man presents to the clinic requesting an HIV test. He had unprotected sexual \ncontact with another man 3 weeks ago. Antibodies against which of the following will be \ndetected first by ELISA or Western blot?",
    "options": {
      "a": "gp120",
      "b": "gp 41",
      "c": "p24",
      "d": "p55"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: You are an officer with the Center for Disease Control and are screening a high-risk \npopulation for HIV. Which of the following methods will you use as a screening tool?",
    "options": {
      "a": "Western blot",
      "b": "ELISA",
      "c": "DNA PCR",
      "d": "p24 antigen assay"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which of the following RNA viruses has an 8 segmented genome with its site of replication \nbeing the nucleus?",
    "options": {
      "a": "Influenza virus",
      "b": "Measles virus",
      "c": "Rubella virus",
      "d": "Mumps virus"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A microbiologist working on influenza virus in a lab, observes reversal of hemagglutination. \nWhat is this phenomenon known as?",
    "options": {
      "a": "Hemolysis",
      "b": "Precipitation",
      "c": "Elution",
      "d": "Complement fixation"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following statements is true regarding antigenic drift?",
    "options": {
      "a": "There is a gradual sequential change in antigenic structure",
      "b": "It doesn’t account for the periodic epidemics of influenza",
      "c": "The new antigens thus formed are totally unrelated to the previous antigens",
      "d": "Antibodies to the predecessor viruses do not neutralise the new variants"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following organisms is represented by the given form of replication? 399 \nSold by @itachibot",
    "options": {
      "a": "Hepatitis virus",
      "b": "Influenza virus",
      "c": "HIV",
      "d": "Herpes virus"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: You receive multiple patients from a poultry farm presenting with fever, dyspnea, cold, and \ncough. You suspect an outbreak of Avian flu. Which of the following virus strains causes the \nsame?",
    "options": {
      "a": "H1N1",
      "b": "H5N1",
      "c": "H3N2",
      "d": "H2N2"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 4-year-old girl with a history of fever, rhinorrhea, sore throat, and myalgia presented with \nmultiple episodes of vomiting and seizures. She was diagnosed with Reye's syndrome. Which \nof the following is incorrect about the most likely etiological agent?",
    "options": {
      "a": "Virus shedding is present before symptoms begins",
      "b": "5-12 years is a high risk group",
      "c": "Aquatic birds act as reservoir",
      "d": "Secondary attack rate is 5-15%"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 12-year-old boy is brought to the OPD with complaints of headache and drowsiness since 2 \ndays. He had a history of fever, ear pain, and difficulty in swallowing for 1 week. On \nexamination, you see the following. Brudzinki's sign is positive. What is the most likely \ndiagnosis?",
    "options": {
      "a": "Croup",
      "b": "Mumps",
      "c": "Infectious mononucleosis",
      "d": "Herpangina"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: A 9-month-old child is brought to the OPD for MMR vaccine. Which strain of mumps virus is \nused in the same?",
    "options": {
      "a": "Edmonston-Zagreb strain",
      "b": "Nakayama strain",
      "c": "Jeryl-Lynn strain",
      "d": "RA 27/3"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A mother brings her 5-month-old baby to the casualty with complaints of fast breathing and \npoor feeding. She also gives a history of fever, cold, and cough for 3 days. On examination, \nnasal flaring and expiratory wheeze are present. Which of the following statements is false \nabout the viral etiology of the same?",
    "options": {
      "a": "The cytopathic effect is syncytium formation",
      "b": "Ribavirin is the drug of choice",
      "c": "Omalizumab is given for prophylaxis",
      "d": "It is the most important cause of bronchiolitis"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: An unimmunized man presents with fever, malaise, and an erythematous rash starting from \nbehind the ears and progressing to the face and trunk. Given below is an image of lymphoid \ntissue taken from this patient. What pathological finding do you see here?",
    "options": {
      "a": "Warthin-Finkeldey giant cells",
      "b": "Warthin-Starry stain",
      "c": "Langhans giant cells",
      "d": "Aschoff giant cells"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: 402 \nSold by @itachibot A 3-year-old boy with no prior immunization history presents with fever, cough, and coryza. \nOn examination of the buccal mucosa, you see the following. Which stage of the disease is \nthis finding seen in?",
    "options": {
      "a": "Prodromal stage",
      "b": "Post measles stage",
      "c": "Eruptive stage",
      "d": "All the stages"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: Which of the following disease has the highest mortality once clinically manifested?",
    "options": {
      "a": "Nipah",
      "b": "Rabies",
      "c": "Ebola",
      "d": "Zika"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A 26-year-old pet-groomer was brought to the casualty with a history of breathlessness, \nexcessive agitation, and restlessness. His bystanders give a history of progressive behavioral \nchange and he had a fever, sore throat, and generalized weakness 1 month back. On \nexamination, pulse was 100 bpm, SpO2 was 98% on room air. Which of the following \nsamples will not be preferred to detect the etiological agent? 403 \nSold by @itachibot",
    "options": {
      "a": "Corneal impression",
      "b": "Cerebrospinal fluid",
      "c": "Saliva",
      "d": "Skin biopsies including hair follicles"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: An officer of the Indian Forest Services is bitten by a rabid fox while on duty. Which of the \nfollowing statements is true about the etiological agent?",
    "options": {
      "a": "The incubation period is 4 to 5 days",
      "b": "It doesn't produce Negri bodies",
      "c": "It causes disease",
      "d": "It doesn't affect salivary gland"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: A 23-year-old man was brought to you with a history of fever, behavioral changes, and \nseizures. He is foaming at the mouth and is unable to ingest liquids. The patient was admitted \nto the ICU, however he died soon after. Post mortem brain samples showed the following \nfinding. What is the diagnosis?",
    "options": {
      "a": "Yellow fever virus",
      "b": "Rabies virus",
      "c": "CMV",
      "d": "Molluscum contagiosum"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: Babes nodules are seen in which of the following conditions?",
    "options": {
      "a": "Polio",
      "b": "Rabies",
      "c": "Diphtheria",
      "d": "Herpes"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: Which of the following statements is false regarding rabies vaccination?",
    "options": {
      "a": "Bitten dog should be observed for a minimum of 10 days.",
      "b": "Four-dose regimen is given as 0.1ml intramuscularly on days 0, 3, 7 and 28.",
      "c": "Pre-exposure prophylaxis regimen consists of 3 doses.",
      "d": "The dose of human anti rabies immunoglobulin is 20 IU/kg."
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which family does yellow fever virus belong to?",
    "options": {
      "a": "Arboviridae",
      "b": "Flaviviridae",
      "c": "Bunyaviridae",
      "d": "Picornaviridae"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 10-year-old boy from Uttar Pradesh was rushed to the emergency department with a \nheadache, fever, and blurred vision followed shortly by unresponsiveness to verbal \ncommands. He is suspected to have viral encephalitis. Which of the following transmits this \nendemic disease?",
    "options": {
      "a": "Aedes aegypti mosquito",
      "b": "Culex mosquito",
      "c": "Anopheles mosquito",
      "d": "Mansonia mosquito"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following is not true about Japanese encephalitis?",
    "options": {
      "a": "Transmitted by Culex vishnui",
      "b": "Pig is the amplifier host",
      "c": "Man acts as the reservoir",
      "d": "Vaccinating pigs is helpful in disease control"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: A mother brings her 9-month-old child for vaccination against Japanese encephalitis. Which \nof the following statements is false regarding this vaccine? 416 \nSold by @itachibot",
    "options": {
      "a": "Two doses are recommended at age 9 months and 18 months",
      "b": "Inactivated vero cell culture is given 4 weeks apart",
      "c": "Live vaccine SA 14-14-2 is administered intramuscularly",
      "d": "The live attenuated vaccine can be given to adolescents"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A patient presents with fever, arthralgia, and pain behind the eyes for 3 days. On \nexamination, she has the following rash. Lab reports show thrombocytopenia and leucopenia. \nWhat is the most likely diagnosis?",
    "options": {
      "a": "Dengue fever",
      "b": "Malaria",
      "c": "Typhoid",
      "d": "Yellow fever"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 35-year-old wildlife photographer presents with sudden onset of fever, headache, and \nmyalgia. On examination, you notice gingival bleeds and conjunctival hemorrhages. He \nrecently visited a forest in Karnataka that has a large population of monkeys. Which of these \nis the vector for the suspected disease?",
    "options": {
      "a": "Fleas",
      "b": "Mite",
      "c": "Ticks",
      "d": "Mosquito"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A middle-aged man presents with delirium, fever, jaundice, and a hemorrhagic diathesis. The \npatient is agitated and has had no urine output in the last 6 hours. On investigation, there is \nazotemia and elevated liver enzymes. A viral disease with the vector shown below is \nsuspected. Which of the following inclusion bodies may be seen?",
    "options": {
      "a": "Henderson-Patterson bodies",
      "b": "Torres bodies",
      "c": "Levinthal Cole Lille bodies",
      "d": "Paschen bodies"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: What is the duration of validity of 17D vaccination?",
    "options": {
      "a": "1 year",
      "b": "5 years",
      "c": "Lifetime",
      "d": "10 years"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A pest control technician with a history of fever, vomiting, hematuria, and decreased urine \noutput was diagnosed with hemorrhagic fever with renal syndrome. Which of the following \nstatements is false about the causative virus?",
    "options": {
      "a": "Hantaviruses are the natural pathogens of rodents",
      "b": "Transmission primarily occurs by Culex mosquitoes",
      "c": "Hantavirus pulmonary syndrome presents with pulmonary edema",
      "d": "Hantaviruses cause epidemic hemorrhagic fever"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: An epidemic of paralytic poliomyelitis occurs in a non-immune population. Which among the \nfollowing strains of poliovirus is the most common cause of this?",
    "options": {
      "a": "Type 1",
      "b": "Type 2",
      "c": "Type 3",
      "d": "Type 4"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: A 5-year-old girl is brought to the pediatrics OPD with a history of lower-limb paralysis and \nthe following deformity. Which of the following will be the most common form of \npresentation of this illness? 419 \nSold by @itachibot",
    "options": {
      "a": "Inapparent infection",
      "b": "Abortive form",
      "c": "Paralytic form",
      "d": "Nonparalytic form"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A 20-year-old unimmunized patient presents to you with complaints of weakness of lower \nlimbs, inability to pass urine, and fever, for 3 days. His stool samples were sent to the district \nlab to confirm the diagnosis. Which region of the spinal cord will primarily be affected in \nthese cases?",
    "options": {
      "a": "Anterior horn cells",
      "b": "Posterior horn cells",
      "c": "Lateral horn cells",
      "d": "Intermediate column"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: Which of the following statements is false regarding vaccination against polio?",
    "options": {
      "a": "Sabin type has the live attenuated virus",
      "b": "OPV should not be administered to immunocompromised persons",
      "c": "Salk vaccine is associated with mutations that lead to reversal of virulence",
      "d": "Both OPV and IPV induce humoral Ig™"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which of the following strains of poliovirus have been eradicated worldwide?",
    "options": {
      "a": "Type 2",
      "b": "Types 2 and 3",
      "c": "Types 1 and 3",
      "d": "Type 3"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: A 68-year-old woman presented with acute chest pain which was stabbing type in nature. The \npain is spasmodic and associated with fever spikes. There's an outbreak of coxsackievirus B in \nher community. What is the most likely diagnosis?",
    "options": {
      "a": "Intercostal neuralgia",
      "b": "Bornholm disease",
      "c": "Herpangina",
      "d": "Pericarditis"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: A 5-year-old boy presents with headache, fever, and vomiting. On examination, you observe \nthe following. He is diagnosed with herpangina. Which group of viruses causes the same? 421 \nSold by @itachibot",
    "options": {
      "a": "Enteroviruses",
      "b": "Rhinoviruses",
      "c": "Myxoviruses",
      "d": "Rhabdoviruses"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: Which of the following organisms causes the following disease?",
    "options": {
      "a": "Coxsackievirus",
      "b": "Human herpes virus 7",
      "c": "Pox virus",
      "d": "Molluscum contagiosum"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: A 60-year-old presented with eye pain, watering of eyes, and increased sensitivity to light. On \nexamination, you see the following. Which of the following viruses can cause this condition?",
    "options": {
      "a": "Rhinovirus and Coxsackie A24",
      "b": "Rhinovirus and Enterovirus-70",
      "c": "Enterovirus 70 and Adenovirus 3",
      "d": "Enterovirus-70 and Coxsackie A24"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: A 42-year-old woman presented with fever, joint pains, and headache. Chik sign (image given \nbelow) is present on the patient's nose. Which of the following vectors transmits the \netiological agent? 423 \nSold by @itachibot",
    "options": {
      "a": "Culex tritaeniorhynchus",
      "b": "Anopheles culicifacies",
      "c": "Aedes aegypti",
      "d": "Aedes albopictus"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q19_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: A newborn baby has a characteristic rash as shown below. On examination, bilateral pearly \nwhite nuclear cataracts are noted, and a continuous murmur is auscultated. What family does \nthe virus implicated in this syndrome belong to?",
    "options": {
      "a": "Rhabdoviridae",
      "b": "Filoviridae",
      "c": "Matonaviridae",
      "d": "Calciviridae"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A brain biopsy done at the time of autopsy shows spongiform encephalopathy. Which of the \nfollowing is unlikely to be the diagnosis? 432 \nSold by @itachibot",
    "options": {
      "a": "Creutzfeldt Jakob Disease",
      "b": "Kuru",
      "c": "Mad cow disease",
      "d": "Sub acute sclerosing pan-encephalitis"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which strain of the Ebola virus has the highest case fatality rate?",
    "options": {
      "a": "Zaire strain",
      "b": "Sudan strain",
      "c": "Reston strain",
      "d": "Taï Forest strain"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following is a leading cause of diarrheal death in children?",
    "options": {
      "a": "Calcivirus",
      "b": "Adenovirus",
      "c": "Rotavirus",
      "d": "Norwalk virus"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: An 18-year-old went on an exchange program to Singapore. An adventurous eater, she tried \nclams and oysters on a cruise ship. 2 days later, she developed fever, nausea, vomiting, and \ndiarrhea. What is the causative agent?",
    "options": {
      "a": "Adenovirus",
      "b": "Rotavirus",
      "c": "Norwalk virus",
      "d": "Enterovirus"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 70-year-old lady with recent onset, progressive dementia comes with myoclonus. The brain \nimaging is shown below. What biochemical component is responsible for this disease?",
    "options": {
      "a": "DNA",
      "b": "RNA",
      "c": "Protein",
      "d": "Polysaccharide"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 32-year-old lady is admitted to the ICU with COVID-19. Which of the following statements \nis false regarding the organism causing it? 434 \nSold by @itachibot",
    "options": {
      "a": "These viruses have club-shaped peplomers on their surface",
      "b": "It spreads by direct contact",
      "c": "SARS virus is highly mutable",
      "d": "It acts by binding to ACE1 and TMPRSS4 receptors"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: A person who comes in contact with a case of coronavirus (COVID- 19) needs to be followed \nup for  \n.",
    "options": {
      "a": "7 days",
      "b": "21 days",
      "c": "14 days",
      "d": "42 days"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: In a patient undergoing testing for SARS-CoV, a FELUDA test is done. Which of the following \nstatements is false about this technology?",
    "options": {
      "a": "It is the acronym for FNCAS9 Editor Linked Uniform Detection Assay",
      "b": "Based on CRISPR gene editing technology",
      "c": "It is slower than RT PCR in detecting SARS-CoV2",
      "d": "It uses CAS-9 protein to bind to the viral signature"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: A confirmed case of which of the following viral haemorrhagic fevers was found in India?",
    "options": {
      "a": "Ebola",
      "b": "Yellow fever",
      "c": "Crimean congo hemorrhagic fever",
      "d": "Marburg"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: 435 \nSold by @itachibot A woman presents with a positive urine pregnancy test, 1 month after taking the MMR \nvaccine. At the time of receiving the vaccine, she had been advised to avoid conception. What \nadvice do you give her now?",
    "options": {
      "a": "Wait and watch",
      "b": "Termination of pregnancy mandatory",
      "c": "Low risk; termination of pregnancy may be considered",
      "d": "High risk of anomalies; serious consideration for termination"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: While working at a WHO outreach post in Africa, you conduct an educational program about \nthe Zika virus. What family does this virus belong to?",
    "options": {
      "a": "Togaviridae",
      "b": "Flaviviridae",
      "c": "Bunyaviridae",
      "d": "Reoviridae"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: Zika virus is transmitted by:",
    "options": {
      "a": "Aedes aegypti",
      "b": "Culex",
      "c": "Anopheles",
      "d": "Phlebotomus papatasii"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which of the following features do not support a diagnosis of Zika fever?",
    "options": {
      "a": "Petechial rash",
      "b": "Guillan barre syndrome",
      "c": "Fever with arthralgia",
      "d": "Conjunctivitis"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: The transplacental transmission of the organism given in the image which causes \nmicrocephaly is-",
    "options": {
      "a": "Nipah",
      "b": "Zika virus",
      "c": "CMV",
      "d": "Rubella"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: Tropical spastic paraparesis is caused by:",
    "options": {
      "a": "Polyomavirus SV40",
      "b": "Epstein-Barr virus",
      "c": "Human immunodeficiency virus",
      "d": "Human T-lymphotropic virus"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: What family does the Nipah virus belong to?",
    "options": {
      "a": "Paramyxoviridae",
      "b": "Togaviridae",
      "c": "Flaviviridae",
      "d": "Bunyaviridae"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which of the following is a component of the fungal cell wall?",
    "options": {
      "a": "Ergosterol",
      "b": "Lipoteichoic acid",
      "c": "Mycolic acid",
      "d": "Chitin"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following is a yeast?",
    "options": {
      "a": "Candida",
      "b": "Cryptococcus",
      "c": "Fusarium",
      "d": "Talaromyces"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which among the following is not a sexual spore?",
    "options": {
      "a": "Zygospore",
      "b": "Sporangiospore",
      "c": "Basidiospore",
      "d": "Ascospore"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following fungal spores are formed by condensation of the hyphal elements?",
    "options": {
      "a": "Arthrospores",
      "b": "Conidiospore",
      "c": "Basidiospores",
      "d": "Ascospores"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A young patient presents to the dermatology OPD with a history of itchy hypopigmented \npatches over her chest for 6 months. A KOH mount is prepared with the skin scraping \nsample, which on microscopy reveals a characteristic appearance as shown in the image. \nWhat is the most probable diagnosis?",
    "options": {
      "a": "Pityriasis alba",
      "b": "Candidiasis",
      "c": "Tinea corporis",
      "d": "Pityriasis versicolor"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following statements about dermatophytes is true?",
    "options": {
      "a": "Epidermophyton infects skin and hair",
      "b": "Microsporum infects skin and hair",
      "c": "Epidermophyton infects nails and hair",
      "d": "Microsporum infects nails and hair"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: 448 \nSold by @itachibot A 23-year-old-lady came to the dermatology clinic with complaints of hair loss and the \npresence of firmly adherent, black, gritty, hard nodules along the hair shaft as shown. There \nis no associated pruritis of the scalp. Which of the following could be the most probable \ncausative agent?",
    "options": {
      "a": "Piedraia hortae",
      "b": "Trichosporon beigelii",
      "c": "Hortaea werneckii",
      "d": "Malassezia furfur"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: A 45-year-old diabetic patient presented with complaints of discoloration of his toenail for the \npast 4 months as shown in the image below. Which pathogen most commonly causes this \ncondition? 449 \nSold by @itachibot",
    "options": {
      "a": "Trichophyton rubrum",
      "b": "Trichophyton schonleinii",
      "c": "Epidermophyton floccosum",
      "d": "Trichophyton mentagrophytes"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q8_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: Which of the following organisms causes disease following traumatic inoculation into the \nskin?",
    "options": {
      "a": "Sporothrix schenckii",
      "b": "Blastomyces dermatitidis",
      "c": "Coccidioides immitis",
      "d": "Paracoccidioides brasiliensis"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following is false about the most commonly used culture media for growing \nfungi?",
    "options": {
      "a": "Contains taurocholate",
      "b": "Is a specific media",
      "c": "Contains cycloheximide",
      "d": "Has an acidic pH"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: A gardener from the sub-Himalayan region presented with multiple ulcerative eruptions \nalong the lymphatics of his hand. A tissue biopsy was taken and sent for culture. Microscopic \nexamination of the organism cultured is shown in the image. Identify the organism.",
    "options": {
      "a": "Sporothrix schenckii",
      "b": "Histoplasma capsulatum",
      "c": "Phialophora richardsiae",
      "d": "Exophiala jeanselmei"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A farmer developed multiple ulcerative nodules along the lymphatics following a rose thorn \nprick a week ago. Microscopic finding of the skin biopsy is given below. What is the likely \ndiagnosis? 451 \nSold by @itachibot",
    "options": {
      "a": "Cryptococcosis",
      "b": "Sporotrichosis",
      "c": "Histoplasmosis",
      "d": "Aspergillosis"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A farmer from the sub-Himalayan belt had a thorn prick injury a year back and developed a \nwarty, verrucous growth at the site of prick. A skin biopsy sample was taken and sent for \nhistopathological examination. The characteristic microscopic body as shown in the image \nwas seen. Which of the following could be the most likely diagnosis? 452 \nSold by @itachibot",
    "options": {
      "a": "Blastomycosis",
      "b": "Pheohyphomycosis",
      "c": "Chromoblastomycosis",
      "d": "Sporotrichosis"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: A middle-aged man from south India presented to the OPD with a swelling in his left foot that \nis unresponsive to antibiotics. On examination, multiple discharging sinuses were noted. The \ndischarge contained brown granules that were soft in consistency. Which of the following is \nlikely the causative agent?",
    "options": {
      "a": "Actinomadura madurae",
      "b": "Sporothrix schenckii",
      "c": "Fonsecaea pedrosoi",
      "d": "Madurella mycetomatis"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: Which of the following is not a dimorphic fungus?",
    "options": {
      "a": "Sporothrix schenckii",
      "b": "Coccidioides immitis",
      "c": "Pneumocystis jirovecii",
      "d": "Talaromyces marneffei"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: A 54-year-old man had presented to the clinic with a history of chronic cough. His chest X-ray \nshowed a mass in the left lung with hilar lymphadenopathy. Biopsy of the mass was done and \nfindings are shown below. Which of the following is the most likely diagnosis?",
    "options": {
      "a": "Gilchrist disease",
      "b": "Darling's disease",
      "c": "Desert rheumatism",
      "d": "Jorge Lobo's disease"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: A 7-year-old boy with a recent history of travel to South America was brought to the hospital \nwith fever, enlarged lymph nodes and multiple skin lesions on his face. Tissue sample from \nthe lesion shows the following findings under microscopy. Which of the following is the most \nlikely causative organism? 454 \nSold by @itachibot",
    "options": {
      "a": "Coccidioides immitis",
      "b": "Paracoccidioides brasiliensis",
      "c": "Histoplasma capsulatum",
      "d": "Blastomyces dermatitidis"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: A 50-year-old male presents with low-grade fever and a skin lesion as shown below. He had a \nhistory of recent travel to North America. Chest X-Ray reveals consolidation in the right lung \nwith hilar lymphadenopathy. Culture on Sabouraud dextrose agar at 37°C shows thick-walled, \nlarge (7-20 µ), round yeast cells with a single broad-based bud. What is the most probable \ndiagnosis? 455 \nSold by @itachibot",
    "options": {
      "a": "Blastomycosis",
      "b": "Histoplasmosis",
      "c": "Coccidioidomycosis",
      "d": "Paracoccidioidomycosis"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: A middle-aged man residing in a rural area presents with psychosis, ataxia and convulsions. \nOn further inquiry, you find out there is history of similar complaints in the family members \nwho recently consumed food prepared with grains as shown in the image. What is the \npoisoning is most likely due to?",
    "options": {
      "a": "Claviceps purpurea",
      "b": "Aspergillus flavus",
      "c": "Amanita phalloides",
      "d": "Aspergillus fumigatus"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q19_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 20,
    "question": "Question 20: The below given image shows result of hair perforation test. The organism likely to show \nbelow given appearance is 456 \nSold by @itachibot",
    "options": {
      "a": "Trichophyton rubrum",
      "b": "Trichophyton violaceum",
      "c": "Trichophyton schoenleinii",
      "d": "Trichophyton mentagrophytes"
    },
    "correct_answer": "a",
    "explanation": "Tropical pulmonary eosinophilia is also known as Weingarten syndrome. Tropical eosinophilia occurs as a result of hypersensitivity reaction to microfilarial antigens and \nnot directly due to lymphatic involvement. It is a manifestation of occult filariasis \n(Meyer's-Kouwenaar syndrome). Clinical features of occult filariasis include massive eosinophilia and hepatosplenomegaly. Synonyms of tropical pulmonary eosinophilia include - • Weingarten syndrome • Pseudo-tuberculosis of the lung • Eosinophilic pseudo-leukemia • Tropical eosinophilic asthma • Frimodt-Moller and Barton's syndrome",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q20_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: What is the stain used for identifying cryptococcus?",
    "options": {
      "a": "Giemsa stain",
      "b": "Ziehl-Nielsen stain",
      "c": "Gram staining",
      "d": "Mucicarmine"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following is a false statement regarding Cryptococcus neoformans?",
    "options": {
      "a": "It is laccase negative",
      "b": "It most commonly causes meningitis in AIDS patients",
      "c": "There are 3 serological types based on capsular polysaccharide",
      "d": "Niger seed agar is used to demonstrate melanin production"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following organisms cannot be grown on any culture media?",
    "options": {
      "a": "1 &amp; 4",
      "b": "1, 3 &amp; 5",
      "c": "1 , 2 &amp; 5",
      "d": "2 &amp; 4"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: A patient with HIV presented complaining of cough and progressively worsening breathing \ndifficulty. Chest X-ray showed bilateral interstitial infiltrates. The findings of microscopic \nexamination of his bronchoalveolar lavage is given below. Which is the most probable \ncausative organism? 473 \nSold by @itachibot",
    "options": {
      "a": "Pneumocystis jirovecii",
      "b": "Histoplasma capsulatum",
      "c": "Cryptococcus neoformans",
      "d": "Rhinosporidium seeberi"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A middle-aged immunocompromised patient presents with complaints of pain during \nswallowing. She describes it as a burning sensation that radiates to her back every time she \nswallows. Oral examination reveals creamy white patches on the oral mucosa. The wet mount \nmicroscopy of the scraping obtained from the patches is given below. Identify the organism. 474 \nSold by @itachibot",
    "options": {
      "a": "Candida albicans",
      "b": "Cryptococcus neoformans",
      "c": "Aspergillus fumigatus",
      "d": "Histoplasma capsulatum"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: The following test is positive for identification of",
    "options": {
      "a": "Candida albicans",
      "b": "Candida glabrata",
      "c": "Candida parapsilosis",
      "d": "Candida tropicalis"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 35-year-old HIV positive■ patient presents with mucosal lesions in the mouth as shown in \nthe image below. On microscopy, budding yeasts and pseudohyphae are seen. What is the \nlikely diagnosis? 475 \nSold by @itachibot",
    "options": {
      "a": "Oral candidiasis",
      "b": "Hairy leukoplakia",
      "c": "Lichen planus",
      "d": "Diphtheria"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: Galactomannan in serum is seen in:",
    "options": {
      "a": "1 &amp; 2 only",
      "b": "1 &amp; 3 only",
      "c": "1 only",
      "d": "1, 2 &amp; 3 only"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: Identify the organism in the given slide stained with Gomori methenamine silver stain. 476 \nSold by @itachibot",
    "options": {
      "a": "Obtuse angled mucor",
      "b": "Acute angled penicillium",
      "c": "Acute angled branching aspergillus",
      "d": "Obtuse angled rhizopus"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: A young lady complains of recurrent rhinitis, nasal discharge and bilateral nasal blockage for \ntwo years. She has a history of allergic rhinitis. On rhinoscopy, multiple ethmoidal polyps \nwith mucosal thickening and impacted secretions are seen in both the nasal cavities. A tissue \nbiopsy is taken and sent for culture, which on microscopic examination shows the following \nappearance. What is the most probable organism implicated here? 477 \nSold by @itachibot",
    "options": {
      "a": "Aspergillus fumigatus",
      "b": "Aspergillus flavus",
      "c": "Aspergillus niger",
      "d": "Penicillium chrysogenum"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: What is the drug of choice for invasive pulmonary aspergillosis?",
    "options": {
      "a": "Itraconazole",
      "b": "Voriconazole",
      "c": "Lyophylised Amphotericin B",
      "d": "Posaconazole"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12:  1-3 glucan assay is used to diagnose all except?",
    "options": {
      "a": "Candidiasis",
      "b": "Aspergillosis",
      "c": "Pneumocystis pneumonia",
      "d": "Mucormycosis"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: Which fungus is most commonly associated with orbital cellulitis in patients with diabetic \nketoacidosis ?",
    "options": {
      "a": "Candida",
      "b": "Rhizopus",
      "c": "Aspergillus",
      "d": "Trichophyton"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: 478 \nSold by @itachibot A 68-year-old post-COVID-19 patient presented with a black, foul-smelling nasal discharge \nand blurred vision. On examination, a blackish necrotic mass eroding the septum and hard \npalate was visualised. Lactophenol cotton blue mount from the culture is given below. Which \nof the following statements is false regarding the condition?",
    "options": {
      "a": "It is a fatal condition",
      "b": "Iron administration to patients with active infection should be avoided",
      "c": "Posaconazole can be used to treat it",
      "d": "Pulmonary form is the most common"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: A 9-year-old child infected with Toxocara canis is diagnosed to have visceral larva migrans. It \nis an example of \n.",
    "options": {
      "a": "Obligate parasite",
      "b": "Facultative parasite",
      "c": "Accidental parasite",
      "d": "Aberrant parasite"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Which of the following refers to a host in which the larval stage of the parasite remains viable \nwithout further development?",
    "options": {
      "a": "Definitive host",
      "b": "Intermediate host",
      "c": "Paratenic host",
      "d": "Reservoir host"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: A 46-year-old farmer came to the clinic with cough and chest pain for one week and fatigue \nfor a month. He was diagnosed to have a hydatid cyst in his right lung. Which of the following \nclasses does the causative organism of this disease belong to?",
    "options": {
      "a": "Cestodes",
      "b": "Nematodes",
      "c": "Trematodes",
      "d": "Zoonoses"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following is the smallest cestode infecting humans? 489 \nSold by @itachibot",
    "options": {
      "a": "Diphyllobothrium latum",
      "b": "Hymenolepis nana",
      "c": "Heterophyes heterophyes",
      "d": "Strongyloides stercoralis"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: Which of the following parasites has a direct life cycle?",
    "options": {
      "a": "Enterobius vermicularis",
      "b": "Taenia solium",
      "c": "Toxoplasma gondii",
      "d": "Trichinella spiralis"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Match the following:",
    "options": {
      "a": "1-B, 2-D, Ž-C, 4-A",
      "b": "1-B, 2-D, Ž-A, 4-C",
      "c": "1-D, 2-B, Ž-A, 4-C",
      "d": "1-D, 2-A, Ž-B, 4-C"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: An entomologist who had recently visited Mexico presented to the OPD with fever, fatigue, \nand an alleged history of contact with the insect given in the image. Which of the following \ndiseases is it a biological vector for? 490 \nSold by @itachibot",
    "options": {
      "a": "Sleeping sickness",
      "b": "Leishmaniasis",
      "c": "Babesiosis",
      "d": "Chagas disease"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: Autoinfection is not seen with which of the following parasites?",
    "options": {
      "a": "Strongyloides stercoralis",
      "b": "Taenia solium",
      "c": "Hymenolepis nana",
      "d": "Ascaris lumbricoides"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A microbiologist is doing research about antigenic variations in parasites. Which of the \nfollowing parasites will exhibit this phenomenon?",
    "options": {
      "a": "Trypanosoma brucei",
      "b": "Hymenolepis nana",
      "c": "Taenia solium",
      "d": "Enterobius vermicularis"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: You order a peripheral blood film examination while evaluating a patient with pyrexia of \nunknown origin. Which of the following organisms cannot be detected by this investigation?",
    "options": {
      "a": "Giardia",
      "b": "Trypanosoma",
      "c": "Babesia",
      "d": "Leishmania"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: A Giemsa stain of a thin peripheral smear is prepared. Which of the following cannot be \ndiagnosed?",
    "options": {
      "a": "Coxiella burnetii",
      "b": "Toxoplasma gondii",
      "c": "Bartonella henselae",
      "d": "Ehrlichia chaffeensis"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A patient has presented to the PHC with fever and chills. You order a rapid diagnostic test to \ndetect HRP-2 antigen. Which of the following diseases is it used to diagnose?",
    "options": {
      "a": "Malaria",
      "b": "Filaria",
      "c": "Amoebiasis",
      "d": "Giardiasis"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: In a patient with a positive Casoni's skin test, which of the following infections will you \nsuspect?",
    "options": {
      "a": "Schistosomiasis",
      "b": "Kala-azar",
      "c": "Hydatid disease",
      "d": "Toxoplasmosis"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: A patient presented to the OPD with cough, chest pain, and expectoration of rusty colored \nsputum. He is diagnosed to have an oriental lung fluke infection. Which of the following \nparasites is implicated here?",
    "options": {
      "a": "Clonorchis sinensis",
      "b": "Paragonimus Westermani",
      "c": "Fasciolopsis buski",
      "d": "Metagonimus yokogawai"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: A college student from Mangalore comes to the OPD with intermittent fever, headache, and \nchills for 1 week. She gives a history of malaria 1 year back for which she had received \ntreatment. Which of the following species you would expect to see in the peripheral smear of \nthis patient?",
    "options": {
      "a": "Plasmodium vivax and falciparum",
      "b": "Plasmodium ovale and falciparum",
      "c": "Plasmodium vivax and ovale",
      "d": "Plasmodium vivax and malariae"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: A middle-aged woman comes to the clinic with abdominal pain, diarrhea, fatigue, and weight \nloss. Stool examination revealed bile-stained eggs. Which of the following organisms may not \nbe implicated in this case?",
    "options": {
      "a": "Ascaris lumbricoides",
      "b": "Trichuris trichuria",
      "c": "Enterobius vermicularis",
      "d": "Taenia solium"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: 493 \nSold by @itachibot You are examining a wet mount stool sample of a patient with diarrhea. As the eggs are not \nvisible, you concentrate the sample using the saturated salt solution technique. Which of the \nfollowing eggs will not float in this technique?",
    "options": {
      "a": "Trichuris tricuhria",
      "b": "Hymenolopis nana",
      "c": "Strongyloides stercoralis",
      "d": "Enterobius vermicularis"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: The life cycle given below is of which of the following:",
    "options": {
      "a": "E. vermicularis",
      "b": "A. duodenal",
      "c": "B. coli",
      "d": "E. histolytica"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 40-year-old man is diagnosed to have amoebic dysentery. Which of the following is the \ninfective form of the protozoan causing this disease?",
    "options": {
      "a": "Trophozoite",
      "b": "Mature quadrinucleate cyst",
      "c": "Metacyclic trophozoite",
      "d": "Precyst"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: 505 \nSold by @itachibot A 25-year-old woman presented with complaints of abdominal pain and 6 episodes of passing \nfoul-smelling dark stool mixed with mucus and blood streaks. There is no history of fever and \ntenesmus. On examination, vitals are stable and localized tenderness is present in the right \niliac fossa. Which of the following is most likely to cause this condition?",
    "options": {
      "a": "Giardia lamblia",
      "b": "Entamoeba histolytica",
      "c": "Campylobacter jejuni",
      "d": "Shigella dysenteriae"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: You received a stool sample of a patient suspected to have dysentery in the microbiology lab. \nOn microscopy, you observe the structures shown in the image. What other findings you will \nexpect to see in this stool sample?",
    "options": {
      "a": "RBCs as discrete or in rouleaux",
      "b": "Charcot-Leyden crystals",
      "c": "Abundant cellular exudates",
      "d": "Absent eosinophils"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A patient with abdominal pain and mucus in stool is diagnosed to have intestinal amoebiasis. \nWhich of the following is the most common extraintestinal complication of this disease? 506 \nSold by @itachibot",
    "options": {
      "a": "Hepatic amoebiasis",
      "b": "Pulmonary amoebiasis",
      "c": "Amoebic appendicitis",
      "d": "Splenic abscess"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 40-year-old man was brought to the casualty with complaints of nausea, vomiting and \ndisorientation. His brother tells you they had recently gone on a camping trip where they had \nswum in a freshwater lake. On examination, Kernig's sign is positive. A spinal tap is \nperformed and the findings of CSF wet mount microscopy are shown below. Which of the \nfollowing is the most likely causative organism?",
    "options": {
      "a": "Naegleria fowleri",
      "b": "Acanthamoeba spp.",
      "c": "Angiostrongylus cantonensis",
      "d": "Balamuthia mandrillaris"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A college student presents with ocular redness, foreign body sensation, and corneal ulcers \nfollowing the use of contact lens. The saline mount preparation of the corneal scraping shows \npolygonal cysts. What would be the most probable cause?",
    "options": {
      "a": "Acanthamoeba",
      "b": "Naegleria",
      "c": "Entamoeba",
      "d": "Onchocerca"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: Which of the following protozoan parasites is found in the lumen of the human small \nintestine?",
    "options": {
      "a": "1",
      "b": "2",
      "c": "3",
      "d": "4"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q8_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A 30-year-old HIV-positive patient presented with a chronic history of watery diarrhea. The \nhistopathology of the ■duodenum is shown in the image below. What is the likely diagnosis? 508 \nSold by @itachibot",
    "options": {
      "a": "Giardiasis",
      "b": "Echinococcosis",
      "c": "Isosporiasis",
      "d": "Cryptosopridiasis"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: A patient is undergoing the test depicted in the image given below. Which of the following \ndiseases does it help to diagnose?",
    "options": {
      "a": "Amoebiasis",
      "b": "Trichomoniasis",
      "c": "Giardiasis",
      "d": "Echinococcosis"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: The findings of the microscopic examination of the wet mount preparation of stool of a \npatient with diarrhoea is shown below. Which of the following organisms will exhibit this type \nof motility?",
    "options": {
      "a": "Vibrio cholera",
      "b": "Giardia lamblia",
      "c": "Campylobacter jejuni",
      "d": "Listeria monocytogenes"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A patient came to the gynecology OPD with complaints of foul-smelling frothy vaginal \ndischarge and intense itching. The per speculum finding is given below. Which of the \nfollowing statements is false regarding the causative organism of this disease? 510 \nSold by @itachibot",
    "options": {
      "a": "It exists in cyst and trophozoite form",
      "b": "It is an obligate parasite",
      "c": "The gold standard for diagnosis is culture on CPLM or PEM",
      "d": "It can cause male infertility"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A 12-year-old child presented to you with fever, malaise, and weight loss. On examination, \nyou notice the finding shown in the image. In which of the following conditions is this seen?",
    "options": {
      "a": "West African sleeping sickness",
      "b": "Chagas disease",
      "c": "Leishmaniasis",
      "d": "Babesiosis"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which of the following statements is false regarding Trypanosoma?",
    "options": {
      "a": "Tsetse fly is the vector for both T. rhodesiense and T. gambiense",
      "b": "T. gambiense exhibits antigenic variation",
      "c": "T. rhodesiense can cause myocarditis",
      "d": "Humans are the reservoir for T. rhodesiense"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: A middle-aged woman presents to the OPD with fever and malaise for the past 4 months. On \nexamination, the following ocular finding is noted along with hepatosplenomegaly and \nlymphadenopathy. What is the most probable diagnosis?",
    "options": {
      "a": "West African Sleeping Sickness",
      "b": "Chagas disease",
      "c": "Toxoplasmosis",
      "d": "East African Sleeping Sickness"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: Which of the following is used for the culture of Trypanosoma?",
    "options": {
      "a": "NNN medium",
      "b": "Boeck and Drbohlav medium",
      "c": "Craig’s medium",
      "d": "NIH polygenic medium"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: The given life cycle belongs to which of the following organisms?",
    "options": {
      "a": "Trypanosoma brucei rhodesiense",
      "b": "Trypanosoma cruzi",
      "c": "Trypanosoma brucei gambiense",
      "d": "Trypanosoma rangeli"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: The given life cycle belongs to which of the following organisms? 513 \nSold by @itachibot",
    "options": {
      "a": "Trypanosoma brucei gambiense",
      "b": "Trypanosoma brucei rhodesiense",
      "c": "Leishmania donovani",
      "d": "Babesia microti"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: You are performing the following diagnostic procedure in a patient having fever for the past 2 \nweeks to find the causative organism. Which disease are you most likely testing for?",
    "options": {
      "a": "Kala-azar",
      "b": "Schistosomiasis",
      "c": "Toxoplasmosis",
      "d": "Chagas disease"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q19_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 20,
    "question": "Question 20: What is the vector for the condition diagnosed by the image shown below?",
    "options": {
      "a": "Anopheles mosquito",
      "b": "Ixodes Tick",
      "c": "Sandfly",
      "d": "Tsetse fly"
    },
    "correct_answer": "a",
    "explanation": "Tropical pulmonary eosinophilia is also known as Weingarten syndrome. Tropical eosinophilia occurs as a result of hypersensitivity reaction to microfilarial antigens and \nnot directly due to lymphatic involvement. It is a manifestation of occult filariasis \n(Meyer's-Kouwenaar syndrome). Clinical features of occult filariasis include massive eosinophilia and hepatosplenomegaly. Synonyms of tropical pulmonary eosinophilia include - • Weingarten syndrome • Pseudo-tuberculosis of the lung • Eosinophilic pseudo-leukemia • Tropical eosinophilic asthma • Frimodt-Moller and Barton's syndrome",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q20_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 21,
    "question": "Question 21: A 15-year-old boy from Delhi presented to the OPD with the finding seen in the image. It is \ndiagnosed to be an oriental sore. Which of the following causes this? 515 \nSold by @itachibot",
    "options": {
      "a": "Leishmania mexicana complex",
      "b": "Leishmania braziliensis complex",
      "c": "Leishmania donovani",
      "d": "Leishmania tropica complex"
    },
    "correct_answer": "c",
    "explanation": "Dracunculus medinensis is known as serpent worm. It is a viviparous nematode. This has been eradicated from India and all of the southeast Asian region in the year 2000.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q21_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 22,
    "question": "Question 22: A medicine resident is evaluating a patient with abdominal pain and diarrhoea. The stool wet \nmount finding is given below. What is the most likely causative organism?",
    "options": {
      "a": "Balantidium coli",
      "b": "Isospora belli",
      "c": "Cryptosporidium parvum",
      "d": "Enteromonas hominis"
    },
    "correct_answer": "a",
    "explanation": "600 \nSold by @itachibot Parasite \nDefinitive host \nFirst intermediate host \nSecond intermediate ho \nst Diphyllobothri \num Humans \nCyclops \nCyclops and fish Paragonimus \nHumans \nSnail \nCrayfish and crab Fasciola \nSheep and hu \nmans Snail \nAquatic vegetations Brugia \nHumans \nMansonia mosquito \n- 601 \nSold by @itachibot Applied Microbiology",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q22_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 23,
    "question": "Question 23: What is the investigation of choice for the diagnosis of kala-azar?",
    "options": {
      "a": "Rapid dipstick test",
      "b": "Aldehyde test of Napier",
      "c": "ELISA",
      "d": "Indirect fluorescent antibody test"
    },
    "correct_answer": "a",
    "explanation": "The rapid dipstick test is the method of choice for the diagnosis of kala-azar. The following tests are used for the laboratory diagnosis of kala-azar: • Rapid diagnostic tests - rK39 and dipstick test strip. • Parasitological diagnosis - demonstration of LD bodies on microscopy is confirmatory • Surveillance purposes - Aldehyde test of Napier 533 \nSold by @itachibot • Serological diagnosis - Rapid dipstick test, direct agglutination test, ELISA, indirect fluorescent \nantibody test • Assessing immune status - Leishmanin (Montenegro) test • Induration of  5 mm is considered positive • Usually becomes positive 4-6 weeks after onset of cutaneous leishmaniasis 534 \nSold by @itachibot Protozoology - Sporozoa",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q23_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: A 55-year-old man comes with complaints of fever and increasing fatigue for the past week. \nOn examination, he is febrile, hypotensive and tachycardic. The findings of microscopic \nexamination of his peripheral blood smear is given below. What is the causative agent?",
    "options": {
      "a": "Plasmodium vivax",
      "b": "Plasmodium falciparum",
      "c": "Plasmodium ovale",
      "d": "Plasmodium malariae"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: During your rural posting, a patient presents with a high fever and chills. Malaria is endemic \nin the area so you order a peripheral smear. While examining the peripheral blood smear, you \nnote that the schizont stage is not seen. Which of the following organisms is implicated here?",
    "options": {
      "a": "Plasmodium vivax",
      "b": "Plasmodium malariae",
      "c": "Plasmodium falciparum",
      "d": "Plasmodium ovale"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following Plasmodium spp. has the longest incubation period?",
    "options": {
      "a": "Plasmodium vivax",
      "b": "Plasmodium falciparum",
      "c": "Plasmodium malariae",
      "d": "Plasmodium ovale"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: Which of the following Plasmodium spp. mainly affects the old RBCs?",
    "options": {
      "a": "Plasmodium vivax",
      "b": "Plasmodium falciparum",
      "c": "Plasmodium malariae",
      "d": "Plasmodium ovale"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: A microbiologist is examining the slide shown in the following image under the microscope. \nWhich of the following is false regarding this?",
    "options": {
      "a": "'B' is used for determining the species",
      "b": "'B' is more sensitive than 'A'",
      "c": "'A' is air dried rapidly and stained with one of the Romanowsky stains",
      "d": "For 'B' to be considered negative, at least 200 oil immersion fields should be examined"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A 15-year-old boy presents to the OPD with high-grade fever, chills, and rigors for the past 3 \ndays. A peripheral blood smear revealed the following. Which of the following is false \nregarding the diagnostic methods used to detect the condition he is likely suffering from?",
    "options": {
      "a": "Jaswant Singh Bhattacharya stain is used for peripheral smear examination",
      "b": "HRP-2 antigen test is done for detection of P.vivax",
      "c": "Acridine orange dye is used in quantitative buffy coat method",
      "d": "Rapid diagnostic tests have lesser sensitivity than microscopy"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 50-year-old man with a 5-day history of fever is brought to the casualty by his son after an \nepisode of seizures. He is diagnosed with malignant tertian malaria. Which of the following \ncomplications will you not expect to see in this patient?",
    "options": {
      "a": "Hypoglycemia",
      "b": "Acute renal failure",
      "c": "Pulmonary edema",
      "d": "Metabolic alkalosis"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: A 24-year-old patient presents with a high-grade fever, headache, and weakness for 5 days. \nHe gives a history of blood transfusion 4 months back. The microscopic examination of the \nthin blood smear is given below. What is the most probable causative agent?",
    "options": {
      "a": "Plasmodium knowlesi",
      "b": "Babesia microti",
      "c": "Plasmodium falciparum",
      "d": "Plasmodium malariae"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q8_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: Sabin-Feldman dye test is used for diagnosis of which of the following condition?",
    "options": {
      "a": "Paragonimiasis",
      "b": "Hydatid cyst",
      "c": "Toxoplasmosis",
      "d": "Cryptococcus"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following statements is true regarding Toxoplasma gondii?",
    "options": {
      "a": "Humans are the definitive host",
      "b": "Oocysts are formed within the intermediate host",
      "c": "The tachyzoites inside the tissue cyst can be reactivated on immunosuppression",
      "d": "Human toxoplasmosis is a zoonosis"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: An HIV positive pregnant woman was brought to the ER after an episode of generalized \ntonic-clonic seizures. CECT was done which showed multiple enhancing lesions. A \nstereotactic biopsy of the cerebral lesions was done and the image is given below. Which of \nthe following is the most appropriate drug for her treatment?",
    "options": {
      "a": "Trimethoprim",
      "b": "Sulfadadiazine",
      "c": "Spiramycin",
      "d": "Albendazole"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A Kinyoun-positive oocyst (25 m) isolated from an HIV patient with diarrhea is shown in the \nimage. What is the likely organism implicated here? 539 \nSold by @itachibot",
    "options": {
      "a": "Cystoisospora",
      "b": "Cyclospora",
      "c": "Cryptosporidium",
      "d": "Microspora"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A patient who underwent a renal transplant 3 months ago came with complaints of diarrhea \nfor the last 9 days. The stool sample subjected to Kinyoun staining revealed 4-6 µm structures \nas shown below. Which of the following is true about the causative organism?",
    "options": {
      "a": "It does not shows autoinfection",
      "b": "It is an obligate intracellular organism",
      "c": "Oocysts are immediately infective after being excreted in stool",
      "d": "Metronidazole is the drug of choice"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Match the following:",
    "options": {
      "a": "A-2, B-1, C-3, D-4",
      "b": "A-3, B-2, C-1, D-4",
      "c": "A-4, B-1, C-2, D-3",
      "d": "A-1, B-2, C-4, D-3"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which of the following cestodes requires only one host?",
    "options": {
      "a": "Hymenolepis nana",
      "b": "Echinococcus granulosus",
      "c": "Diphyllobothrium latum",
      "d": "Multiceps multiceps"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: A 10-year-old child is brought to your clinic with complaints of diarrhea and abdominal pain \nfor the last 4 days. Stool microscopy is shown below. The eggs present in the stool float in a \nsaturated solution of salt. Which of the following can you use to treat her?",
    "options": {
      "a": "Ivermectin",
      "b": "Mebendazole",
      "c": "Praziquantel",
      "d": "Paromomycin"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: 553 \nSold by @itachibot A patient is brought to the hospital, with complaints of seizures and the MRI image of the \nbrain is given below. The disease is most probably caused by?",
    "options": {
      "a": "Cysticercosis cellulosae",
      "b": "T. saginata",
      "c": "Cysticerocosis bovis",
      "d": "T. asiatica"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q3_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: A 42-year-old man presented to the ER with complains of abdominal discomfort, indigestion, \nnausea and diarrhea after consuming measly pork. Stool examination reveals round eggs as \nshown in the image below. Which of the following statements is true regarding the causative \norganism? 554 \nSold by @itachibot",
    "options": {
      "a": "Eggs are not infective to man",
      "b": "Hooks are absent",
      "c": "The eggs do not float in saturated salt solution",
      "d": "Intermediate host is cow"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: The adult form of echinococcus is seen in which of the following?",
    "options": {
      "a": "Dog",
      "b": "Cat",
      "c": "Swine",
      "d": "Sheep"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following organisms cause multiple alveolar-like lesions in the liver?",
    "options": {
      "a": "Echinococcus multilocularis",
      "b": "Echinococcus granulosus",
      "c": "Entamoeba histolytica",
      "d": "Cysticercus cellulosae"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: While examining a patient with right upper quadrant pain, you note the abdomen is soft with \nlocalised tenderness present. CT abdomen findings are given below. Based on these findings, \nyou post the patient for a PAIR procedure. Which of the following is not used in this \nprocedure?",
    "options": {
      "a": "Cetrimide",
      "b": "95% Alcohol",
      "c": "Sodium hypochlorite",
      "d": "Hypotonic saline"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q7_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: A 24-year-old woman presented to the OPD with a history of progressive breathlessness and \ncough for 3 months. A chest X-ray was done which showed a cavitary lesion in the lower lobe \nof the right lung. Wedge resection of the lesion was done and the histopathology image is \ngiven below. What is the most probable causative agent? 556 \nSold by @itachibot",
    "options": {
      "a": "Strongyloides stercoralis",
      "b": "Fasciola hepatica",
      "c": "Echinococcus granulosus",
      "d": "Paragonimus westermani"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q8_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: Which of the following organisms does the given life cycle belong to?",
    "options": {
      "a": "Hymenolepis diminuta",
      "b": "Echinococcus granulosus",
      "c": "Hymenolepis nana",
      "d": "Diphyllobothrium latum"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: A 35-year-old woman presented to you with complaints of tingling and numbness in her legs. \nOn examination, her hands appear as shown in the image, ankle reflex was absent and \nRomberg's test was positive. Which of the following is most likely implicated in this \ncondition?",
    "options": {
      "a": "Echinococcus granulosis",
      "b": "Diphyllobothrium latum",
      "c": "Hymenolepis nana",
      "d": "Taenia solium"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q10_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following organisms most commonly causes Katayama fever?",
    "options": {
      "a": "Schistosoma haematobium",
      "b": "Fasciola hepatica",
      "c": "Schistosoma mansoni",
      "d": "Clonorchis sinensis"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A 20-year-old male patient presents to the OPD with complaints of fever, intermittent \nabdominal pain, and burning micturition. He gives a history of swimming in a freshwater lake \n10 days back. Urine microscopy shows the following. Which of the following is the causative \nagent?",
    "options": {
      "a": "Schistosoma hematobium",
      "b": "Schistosoma mansoni",
      "c": "Schistosoma japonicum",
      "d": "Schistosoma species cannot be determined based on egg"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q12_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A 50-year-old fisherman presented with complaints of blood in the urine. A diagnostic \ncystoscopy was done and the microscopic view of the biopsied specimen is given below. \nWhich of the following is most likely to be associated with this condition? 559 \nSold by @itachibot",
    "options": {
      "a": "Schistosoma hematobium",
      "b": "Fasciolopsis buski",
      "c": "Clonorchis sinensis",
      "d": "Schistosoma mansoni"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Identify the parasite from the given life cycle.",
    "options": {
      "a": "Fasciola hepatica",
      "b": "Fasciolopsis buski",
      "c": "Pargaonimus westermani",
      "d": "Clonorchis sinensus"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: Which of the following organisms does the given life cycle belong to?",
    "options": {
      "a": "Diphyllobothrium latum",
      "b": "Paragonimus westermani",
      "c": "Fasciola hepatica",
      "d": "Clonorchis sinensis"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: A wet mount examination of the stool sample of a patient with abdominal pain and diarrhea \nis given below. Which of the following parasites is he likely infected with? 561 \nSold by @itachibot",
    "options": {
      "a": "Fasciola hepatica",
      "b": "Ancyclostoma duodenale",
      "c": "Schistosoma japonicum",
      "d": "Enterobius vermicularis"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: A 23-year-old patient has a history of travel to China and the consumption of pickled crab. He \nnow complains of rusty sputum and cough. What is the most likely causative organism?",
    "options": {
      "a": "Fasciola buski",
      "b": "Fasciola hepatica",
      "c": "Paragonimus westermani",
      "d": "Schistosoma japonicum"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: Which of the following parasites is ovoviviparous?",
    "options": {
      "a": "Enterobius vermicularis",
      "b": "Trichuris trichiura",
      "c": "Strongyloides stercoralis",
      "d": "Trichinella spiralis"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Identify the helminth from the life cycle given below.",
    "options": {
      "a": "Ancylostoma duodenale",
      "b": "Strongyloides stercoralis",
      "c": "Ascaris lumbricoides",
      "d": "Enterobius vermicularis"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: 575 \nSold by @itachibot A 24-year-old patient presented with complaints of diarrhea, vomiting, and abdominal pain \nfor 1 week. The stool microscopy revealed the following. What is the appropriate treatment \nfor this condition?",
    "options": {
      "a": "Ivermectin",
      "b": "Tinidazole",
      "c": "Albendazole",
      "d": "Praziquantel"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q3_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: An 8-year-old child was brought with complaints of perianal itching which is worse in the \nnight. The scotch tape method demonstrates eggs as shown in the image given below. What is \nthe most likely causative agent? 576 \nSold by @itachibot",
    "options": {
      "a": "Hookworm",
      "b": "Whipworm",
      "c": "Pinworm",
      "d": "Roundworm"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: Which of the following helminthic infections that is commonly transmitted by soil, is \ncharacterized by■ the egg in stool as shown in the image below?",
    "options": {
      "a": "Trichuris trichiura",
      "b": "Ancyclostoma duodenale",
      "c": "Necator americanus",
      "d": "Ascaris lumbricoides"
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: A college student came to the OPD with fever and muscle aches. He tells you he had \nconsumed smoked pork at a party 2 weeks back. Following this, he had developed abdominal \ncramps and diarrhea which had resolved on their own. CBC revealed eosinophilia and the \nmuscle biopsy showed the following finding. What is the causative organism?",
    "options": {
      "a": "Trichuris trichiura",
      "b": "Trichinella spiralis",
      "c": "Ascaris lumbricoides",
      "d": "Enterobius vermicularis"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: In a patient with a positive Bachman intradermal test, which of the following infections will \nyou suspect?",
    "options": {
      "a": "Schistosomiasis",
      "b": "Kala-azar",
      "c": "Hydatid disease",
      "d": "Trichinellosis"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: Identify the organism shown in this image.",
    "options": {
      "a": "Strongyloides stercoralis",
      "b": "Enterobius vermicularis",
      "c": "Ancylostoma duodenale",
      "d": "Ascaris lumbricoides"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q8_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A 9- year-old boy was brought to the casualty with fever and colicky abdominal pain. An erect \nX-ray abdomen showed multiple air-fluid levels. Stool examination revealed the following \negg. Which of the following is false about the organism causing this condition? 579 \nSold by @itachibot",
    "options": {
      "a": "Human is the only host",
      "b": "Can cause pancreatitis",
      "c": "Can cause Loeffler's syndrome",
      "d": "Egg containing L1 larva is infective"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q9_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: What is the most common cause for visceral larva migrans?",
    "options": {
      "a": "Toxocara canis",
      "b": "Ancylostoma braziliense",
      "c": "Ascaris lumbricoides",
      "d": "Strongyloides stercoralis"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: A middle-aged woman comes to the OPD with complaints of weakness for the past 3 months. \nShe is diagnosed to have microcytic hypochromic anemia. The stool microscopy reveals the \nfollowing. What is the most probable causative agent? 580 \nSold by @itachibot",
    "options": {
      "a": "Ancylostoma duodenale",
      "b": "Strongyloides stercoralis",
      "c": "Enterobius vermicularis",
      "d": "Ascaris lumbricoides"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: A patient presented to the OPD with dry cough, low-grade fever and wheezing. He is \ndiagnosed with Loeffler’s syndrome. Which of the following parasites does not cause this?",
    "options": {
      "a": "Ascaris lumbricoides",
      "b": "Necator americanus",
      "c": "Strongyloides stercoralis",
      "d": "Enterobius vermicularis"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A 27-year-old woman had gone on a trek in the Amazon rainforest. A month later she \npresented to the OPD with the following lesion which was painful and pruritic. Her systemic \nexamination was normal. Which of the following organisms is most likely to cause this \ncondition? 581 \nSold by @itachibot",
    "options": {
      "a": "Strongyloides stercoralis",
      "b": "Ancylostoma braziliense",
      "c": "Toxocara canis",
      "d": "Necator americanus"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which the following filarial worms are non-pathogenic to humans?",
    "options": {
      "a": "Onchocerca volvulus",
      "b": "Brugia malayi",
      "c": "Wuchereria bancrofti",
      "d": "Mansonella ozzardi"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: A 55-year-old man came to the hospital with complaints of progressive swelling of his legs. \nOn examination, you note bilateral non-pitting edema of the lower limbs with thickening of \nthe overlying skin. What is the best next step in the management of this patient? 582 \nSold by @itachibot",
    "options": {
      "a": "PCR",
      "b": "Lymphoscintigraphy",
      "c": "Night blood test for worms",
      "d": "Lymphangiography"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 16,
    "question": "Question 16: A child from Bihar is brought to the AIIMS ER with a high-grade fever. On examination, \nbilaterally enlarged, tender inguinal lymph nodes are present. The peripheral smear \nexamination finding is shown in the image. What is the most likely causative organism?",
    "options": {
      "a": "Wuchereria bancrofti",
      "b": "Brugia malayi",
      "c": "Loa loa",
      "d": "Onchocerca volvulus"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario and the peripheral smear showing sheathed microfilaria with two \nnuclei at the tail tip is suggestive of infection with Brugia malayi. Acute infection may manifest as acute adenolymphangitis which is characterized by high fever, \nlymphatic inflammation (lymphangitis and lymphadenitis) and transient local edema. The \nmost commonly affected lymph nodes are inguinal nodes followed by axillary nodes which \nbecome enlarged, painful and tender. The following are the characteristic features of microfilaria of Brugia malayi: • Smaller in size compared to microfilaria of W. bancrofti. • Shows kinks and secondary curves. • Cephalic space is longer. • Carries double stylets at the anterior end. • Nuclear column appears blurred in Giemsa-stained films. • Tail tip carries 2 distinct nuclei, one terminal and the other subterminal. The below image shows the microfilaria of Brugia malayi. 596 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 17,
    "question": "Question 17: A patient from Kerala has presented to your OPD with fever. A magnified view of peripheral \nblood smear is shown below. Which of the following is false regarding the organism seen?",
    "options": {
      "a": "DEC provocation test is used to demonstrate microfilaria during the day",
      "b": "Second stage filariform larva is the infective form",
      "c": "Microfilaria is the major diagnostic form",
      "d": "Filarial stage of adult worms are responsible for disease"
    },
    "correct_answer": "b",
    "explanation": "The given clinical scenario with a peripheral smear showing sheathed microfilaria with a pointed \ntail free of nuclei is suggestive of Wuchereria bancrofti. The third stage filariform larva is the \ninfective form. Wuchereria bancrofti infection is usually asymptomatic. The symptoms are due to obstruction of \nlymphatics by the filarial stage of adult worms. The lymphatic vessels of the male genitalia are most commonly affected in bancroftian filariasis, \nproducing episodic funiculitis, epididymitis, and orchitis. Adenolymphangitis of the extremities is \nless common. Hydrocele is the most common sign of chronic bancroftian filariasis, followed by lymphedema, \nelephantiasis, and chyluria. The swelling involves the whole leg, the whole arm, the scrotum, the \nvulva, or the breast. DEC provocation test is used to demonstrate microfilaria during the day. The image below shows the life cycle of Wuchereria bancrofti. 597 \nSold by @itachibot The image below shows the difference between microfilaria of various filarial nematodes.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q17_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 18,
    "question": "Question 18: A 54-year-old farmer from Assam presented with the finding shown in the image. He had also \ndeveloped a painless swelling in his elbow 2 years back which has gradually been increasing \nin size. Which of the following is the drug of choice to treat this condition? 584 \nSold by @itachibot",
    "options": {
      "a": "Eflornithine",
      "b": "Suramin",
      "c": "Ivermectin",
      "d": "Diethylcarbamazine"
    },
    "correct_answer": "c",
    "explanation": "The clinical scenario and image showing sclerosing keratitis are suggestive of onchocerchiasis \n(river blindness). The drug of choice is ivermectin. It is caused by Onchocerca volvulus. It is also known as convoluted filaria or blinding filaria. The vector is blackfly (Simulium species) which breed in fast-flowing rivers, and therefore the \ndisease is most common along the course of rivers. Hence, it is also called river blindness. The usual presentation is formation of a subcutaneous nodule or onchocercoma. It is a firm \nnon-tender nodule arising from bony sites like scalp, elbow, ribs, and iliac crest. It is associated \nwith pruritus and rashes. 598 \nSold by @itachibot The microfilaria in the eyes cause photophobia and gradual loss of vision. The most severe \nmanifestation is sclerosing keratitis and chorioretinitis which causes blindness. It is the 2nd major \ninfective cause of blindness in the world after trachoma. Suramin and diethylcarbamazine (DEC) were used earlier but are not used nowadays. DEC \ndestroys microfilariae but usually causes Mazzotti reaction consisting of pruritus, \nrash, lymphadenopathy, fever, hypotension, and occasionally, eye damage. Note: Onchocerciasis is not endemic in India but sporadic cases have been reported from \nNorth-Eastern India.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q18_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 19,
    "question": "Question 19: A middle-aged woman presents to your clinic with photosensitivity, redness, and watering of \nthe eyes for the last 2 days. She shows you this photo of a swelling in her hand that had arisen \n2 weeks back but disappeared in just 3 days. What is the most likely diagnosis?",
    "options": {
      "a": "Loiasis",
      "b": "River blindness",
      "c": "Tropical pulmonary eosinophilia",
      "d": "Occult filariasis"
    },
    "correct_answer": "a",
    "explanation": "The given clinical scenario and the image showing Calabar swelling is suggestive of loiasis caused \nby Loa loa. Calabar swellings are temporary foci of inflammation that appear as Loa loa wanders through the \nsubcutaneous tissues. They are up to 3 cm in size and are also called fugitive swellings because \nthey disappear in a few days only to reappear elsewhere. Loa loa is transmitted by the bite of Chrysops species (deerflies). The infective form is the third \nstage microfilaria. After entry into human skin, it grows into an adult worm. The ocular manifestations occur when the worm reaches the subconjunctival tissue during its \nwanderings. They include: • Granuloma in bulbar conjunctiva • Painless edema of the eyelids • Proptosis. The image below shows Calabar swelling. The image below shows a live, adult Loa loa in the anterior chamber of the eye. 599 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q19_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 20,
    "question": "Question 20: Which of the following is also known as Weingarten syndrome?",
    "options": {
      "a": "Tropical pulmonary eosinophilia",
      "b": "Loasis",
      "c": "Onchocerciasis",
      "d": "Tropical basophilia"
    },
    "correct_answer": "a",
    "explanation": "Tropical pulmonary eosinophilia is also known as Weingarten syndrome. Tropical eosinophilia occurs as a result of hypersensitivity reaction to microfilarial antigens and \nnot directly due to lymphatic involvement. It is a manifestation of occult filariasis \n(Meyer's-Kouwenaar syndrome). Clinical features of occult filariasis include massive eosinophilia and hepatosplenomegaly. Synonyms of tropical pulmonary eosinophilia include - • Weingarten syndrome • Pseudo-tuberculosis of the lung • Eosinophilic pseudo-leukemia • Tropical eosinophilic asthma • Frimodt-Moller and Barton's syndrome",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 21,
    "question": "Question 21: Which of the following is known as serpent worm?",
    "options": {
      "a": "Gnathostoma spinigerum",
      "b": "Angiostrongylus cantonensis",
      "c": "Dracunculus medinensis",
      "d": "Capillaria philippinensis"
    },
    "correct_answer": "c",
    "explanation": "Dracunculus medinensis is known as serpent worm. It is a viviparous nematode. This has been eradicated from India and all of the southeast Asian region in the year 2000.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 22,
    "question": "Question 22: Match the following parasites with their respective hosts:",
    "options": {
      "a": "duodenale or N. americanus ingest blood, secrete anticoagulants, and interfere with the ",
      "b": "A-2, B-1 ,C-4 ,D-3",
      "c": "A-1, B-2, C-3, D-4",
      "d": "A-4, B-3, C-1, D-2"
    },
    "correct_answer": "a",
    "explanation": "600 \nSold by @itachibot Parasite \nDefinitive host \nFirst intermediate host \nSecond intermediate ho \nst Diphyllobothri \num Humans \nCyclops \nCyclops and fish Paragonimus \nHumans \nSnail \nCrayfish and crab Fasciola \nSheep and hu \nmans Snail \nAquatic vegetations Brugia \nHumans \nMansonia mosquito \n- 601 \nSold by @itachibot Applied Microbiology",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q22_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 1,
    "question": "Question 1: While assessing the quality of drinking water in a village, you detect the presence of coliform \nbacilli by the multiple tube technique. Following this, you decide to perform the Eijkman test. \nWhat is this test also known as?",
    "options": {
      "a": "Presumptive coliform count",
      "b": "Differential coliform test",
      "c": "Colony plate count",
      "d": "Methylene blue reduction test"
    },
    "correct_answer": "b",
    "explanation": "Eijkman test is also known as differential coliform test. Drinking water should be free of any pathogenic microorganisms. The presence of coliform \nbacteria in the water may indicate faecal pollution, while the detection of E.coli confirms it. The presumptive coliform test is done by the multiple tube technique. Following this, the Eijkman \ntest is done to confirm the presence of E. coli. They can grow at 44°C (faecal thermotolerant \nbacilli), ferment lactose and cause indole and gas production. Option A: Presumptive coliform count detects the probable number of coliform bacilli in water. It \ncan be positive due to the presence of organisms other than E.coli also. Option C: Colony counts provide an estimate of the general bacterial purity of water. Option D: Methylene blue reduction test is used to assess the bacterial contamination of milk.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 2,
    "question": "Question 2: Faecal contamination of a water source is suspected by the mayor of a municipal corporation. \nHe asks you to test the water for evidence of recent contamination. The presence of which of \nthe following organisms would suggest this?",
    "options": {
      "a": "Shigella",
      "b": "Enterococcus",
      "c": "Clostridium",
      "d": "Staphylococcus"
    },
    "correct_answer": "b",
    "explanation": "Recent fecal contamination of water is suggested by the presence of enterococcus (fecal \nstreptococci). Clostridium perfringens may be present for a long duration. If it is present in water, it suggests \nthat contamination is not recent. If Escherichia coli is detected, it is definitive proof of fecal contamination. However, it is \nnon-specific for suggesting the duration of the contamination.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 3,
    "question": "Question 3: Which of the following tests is not used for bacteriological examination of milk?",
    "options": {
      "a": "Methylene blue reduction test",
      "b": "Phosphatase test",
      "c": "Resazurin test",
      "d": "Pasteurisation"
    },
    "correct_answer": "d",
    "explanation": "Pasteurization is not used for the bacteriological examination of milk. Pasteurization is the process of applying heat, to milk, for a specified period for the purpose of \nkilling pathogenic bacteria. There are two methods: holder method and flash method. Option A: Methylene blue reduction test depends on the reduction of methylene blue by bacteria \nin milk when incubated at 37 °C in complete darkness. Option B: Resazurin test is similar to methylene blue reduction test, but the dye resazurin on \nreduction passes through a series of colour changes from blue to pink to colourless. The shade of \ncolour after incubation with milk for a particular period of time depends on the degree of \ncontamination. 608 \nSold by @itachibot Option C: Phosphatase test is used to check whether milk has been pasteurised. Positive test after \npasteurisation of milk shows contamination after pasteurisation.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 4,
    "question": "Question 4: The following image depicts: 602 \nSold by @itachibot",
    "options": {
      "a": "Production of monoclonal antibodies",
      "b": "Cell lines for viral culture",
      "c": "Vaccine synthesis",
      "d": "Process of genetic engineering"
    },
    "correct_answer": "a",
    "explanation": "The image depicts the production of monoclonal antibodies by hybridoma technology. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and their \nspleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma cells \n(derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q4_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 5,
    "question": "Question 5: Which of the following statements about hybridoma is false?",
    "options": {
      "a": "Specific antibody-producing cells are integrated with myeloma cells.",
      "b": "Myeloma cells using salvage pathway grow well in HAT medium.",
      "c": "Aminopterin, a folate antagonist, inhibits de novo pathway.",
      "d": "HGPRTase and thymidylate synthetase are required for salvage pathway."
    },
    "correct_answer": "b",
    "explanation": "Aminopterin is a folate antagonist present in the HAT medium that inhibits the de novo pathway \nof nucleotide synthesis. Since myeloma cells cannot use the salvage pathway for nucleotide \nsynthesis due to the lack of HGPRTase enzyme, they cannot survive in the HAT medium. 609 \nSold by @itachibot Hybridoma technology is a method for producing large numbers of identical antibodies \n(monoclonal antibodies). Hybridomas are somatic cell hybrids produced by fusing the antibody-forming spleen cells with \nmyeloma cells. The resultant hybrid thus has both the antibody-producing ability of the B-cell and \nthe ability to multiply indefinitely of the myeloma. The following are the steps involved in hybridoma technology: • Mice are immunized with an antigen. After several weeks of immunization, blood samples are \nobtained from mice for measurement of serum antibodies. • When the antibody titer is high enough, mice are commonly boosted by injecting antigen \nwithout adjuvant intraperitoneally or intravenously. Then the mice are euthanized and \ntheir spleens removed for in vitro hybridoma cell production. • Fusing antibody-producing spleen cells, which have a limited life span with myeloma \ncells (derived from an immortal tumor of lymphocytes) results in a hybridoma that is capable of \nunlimited growth. • The cells are cultured in a medium containing hypoxanthine, aminopterin, and thymidine (HAT \nmedium) which allows only the fused cells to survive in culture. • Monoclonal antibodies are then harvested.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following is both a diffusion and a dilution method of testing antibiotic \nsensitivity?",
    "options": {
      "a": "Kirby–Bauer method",
      "b": "Stokes method",
      "c": "Epsilometer method",
      "d": "Tube dilution method"
    },
    "correct_answer": "c",
    "explanation": "Epsilometer (E-test) is both a diffusion and a dilution method of testing antibiotic sensitivity. It is a quantitative technique for determining the antimicrobial susceptibility (AST) and minimum \ninhibitory concentration (MIC) in µg/mL of gram-negative and gram-positive aerobic bacteria. 610 \nSold by @itachibot The antibiotic sensitivity tests are classified as follows: • Diffusion methods: Kirby–Bauer method, Stokes method • Dilution methods: Tube dilution method, Agar dilution method • Diffusion and dilution method: E–test (Epsilometer)",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 7,
    "question": "Question 7: In which of the following is the disc diffusion method for antibiotic susceptibility testing \napplied?",
    "options": {
      "a": "Agar dilution method",
      "b": "Kirby-Bauer method",
      "c": "Broth dilution method",
      "d": "PCR based assay"
    },
    "correct_answer": "b",
    "explanation": "The disc diffusion method for antibiotic susceptibility testing is applied in the Kirby-Bauer \nmethod. To perform Kirby-Bauer’s disc diffusion method, a suitable standard dilution of a broth culture of \nthe test bacterium is inoculated on the surface of a solid medium (Cation-adjusted Mueller-Hinton \nagar) as a lawn culture. After drying, various antibiotic discs are placed on its surface. Zones of \ninhibition around the disc are recorded and interpreted according to the zone diameters available \nin the tables of the Clinical and Laboratory Standards Institute (CLSI) guidelines. The results \nobtained are qualitative (resistant, sensitive, or partially sensitive). Laboratory testing for antibiotic sensitivity can be done by: • Diffusion method- Kirby-Bauer disc diffusion method, Stokes disc diffusion method • Dilution method- broth dilution method, agar dilution method • Combination of diffusion and dilution method- E–test (Epsilometer) The image below shows Kirby-Bauer disc diffusion method. 611 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 8,
    "question": "Question 8: Which of the following methods of antibiotic susceptibility testing cannot be used to calculate \nthe minimum inhibitory concentration of an antimicrobial drug?",
    "options": {
      "a": "Kirby–Bauer method",
      "b": "Tube dilution method",
      "c": "Agar dilution method",
      "d": "Epsilometer method"
    },
    "correct_answer": "a",
    "explanation": "Minimum inhibitory concentration (MIC) cannot be calculated using Kirby-Bauer's disk diffusion \nmethod and Stokes disk diffusion method as they are semi-quantitative methods. MIC is the lowest concentration of an antimicrobial agent that will inhibit the visible growth of a \nmicroorganism. Methods to determine MIC include: • Tube dilution method • Agar dilution method • E-test method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 9,
    "question": "Question 9: A microbiologist is about to run a polymerase chain reaction assay on the serum of a patient \nsuspected to have Q fever. He wishes to quantify the PCR by monitoring the amplification \nprocess while the PCR is ongoing. Which of the following types of PCR should he perform?",
    "options": {
      "a": "Multiplex PCR",
      "b": "Nested PCR",
      "c": "Reverse transcriptase PCR",
      "d": "Real time PCR"
    },
    "correct_answer": "d",
    "explanation": "Real-time polymerase chain reaction (PCR) can be used to quantify the PCR by monitoring the \namplification process while the PCR is ongoing. Types of PCR: • Reverse transcriptase PCR- The enzyme reverse transcriptase (RT) is used to synthesize a \ncomplementary copy of DNA (cDNA) from RNA and this cDNA is then used as a template for \nPCR. • Real-time PCR- This helps quantify the PCR and gives an estimate of the pathogen DNA load in \nthe specimen. It uses fluorescent dyes or specific DNA probes. It is also known as qPCR \n(Quantitative PCR) • Multiplex PCR- Primers to more than one pathogen are used simultaneously and hence multiple \nproducts are obtained. 612 \nSold by @itachibot • Nested PCR- It involves the sequential use of two primer sets. The first primer set is used for \namplification and the amplicon obtained is then used as a target sequence for second \namplification. This ensures specificity.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 10,
    "question": "Question 10: Which of the following investigations does not use antibody marking?",
    "options": {
      "a": "ELISA",
      "b": "Radioimmunoassay",
      "c": "Immunofluorescence",
      "d": "Hemagglutination Test"
    },
    "correct_answer": "d",
    "explanation": "The hemagglutination test is not based on the principle of antibody marking. When antibodies bind to antigens on the surface of red blood cells, the resultant clumping \nreaction is referred to as hemagglutination. It is routinely performed to type red blood cells in \nABO blood-typing. The image below shows hemagglutination. In ELISA, radioimmunoassay and immunofluorescence, the antigens or antibodies are labeled or \nmarked with enzymes, fluorescent dyes, etc. Note: If no hemagglutination occurs it means the patient’s serum has anti-haemagglutinin \nantibodies that bind to hemagglutinin and prevent the clumping reaction. This hemagglutination \ninhibition reaction is a method of detection of viruses and antiviral-antibodies and is used to \nmake a diagnosis of influenza.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following is not used as an immediate test in the screening of urinary tract \ninfections?",
    "options": {
      "a": "Pour plate culture",
      "b": "Griess Nitrite test",
      "c": "Leukocyte esterase test",
      "d": "Wet mount examination"
    },
    "correct_answer": "a",
    "explanation": "Pour plate culture (quantitative test) is not used as an immediate test for screening of \nUTI. However, it is considered the best diagnostic test for confirmation of UTI due it’s high \nsensitivity and specificity. The screening tests for UTI are as follows: • Wet mount examination- It is done to demonstrate pus cells in urine. 613 \nSold by @itachibot • Leukocyte esterase test- It is a rapid and cheaper method and detects leukocyte esterases \nsecreted by pus cells present in urine. • Nitrate reduction test (Griess test)- Nitrate reducing bacteria like E. coli gives a positive result. • Catalase test- E. coli and other bacteria that produce the enzyme catalase give a positive result. Quantitative Culture: • Standardized loop technique • Pour plate method",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 12,
    "question": "Question 12: The CLED medium is preferred over MacConkey agar for the culture of organisms in case of \nUTI because:",
    "options": {
      "a": "It inhibits proteus swarming",
      "b": "It promotes the growth of candida, streptococcus and staphylococcus",
      "c": "It differentiates between lactose-fermenting and non-lactose fermenting bacteria",
      "d": "It promotes the growth of pseudomonas"
    },
    "correct_answer": "b",
    "explanation": "CLED (Cysteine lactose electrolyte-deficient) medium is preferred over MacConkey agar for the \nculture of organisms involved in urinary tract infections because it is less inhibitory and promotes \nthe growth of gram-positive bacteria (except  hemolytic streptococcus) and candida. It is used as an alternative to the combination of blood agar and MacConkey agar, for the \nprocessing of urine specimens. CLED medium is not similar to blood agar in the fact that it can prevent swarming of proteus. It is \nsimilar to MacConkey agar in that it differentiates between lactose fermenters and \nnon-fermenters.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 13,
    "question": "Question 13: A patient who had been receiving ceftazidime and amikacin via central venous line for a week \nsuddenly spiked a fever. Blood culture is positive for a vancomycin-resistant, \ncatalase-negative organism whose Gram-stained image is given below. Identify the organism. 605 \nSold by @itachibot",
    "options": {
      "a": "Staphylococcus aureus",
      "b": "Viridans streptococci",
      "c": "Enterococcus faecalis",
      "d": "Coagulase-negative staphylococcus"
    },
    "correct_answer": "c",
    "explanation": "From the given case scenario and image we can deduce that the most likely organism involved is \nEnterococcus faecalis. The image shows gram-positive cocci in chains, that are described as catalase negative. This helps \nrule out Staphylocococcus aureus and coagulase-negative staphylococcus. 614 \nSold by @itachibot Streptococcus viridans is usually sensitive to penicillin and vancomycin hence it is ruled out. The mechanism of vancomycin resistance seen in E. faecalis is the alteration of the \nD-alanyl–D-alanine chain in the cell wall.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 14,
    "question": "Question 14: Which of the following is a bioterrorism category A agent?",
    "options": {
      "a": "Nipah virus",
      "b": "Anthrax",
      "c": "Coxiella",
      "d": "Brucella"
    },
    "correct_answer": "b",
    "explanation": "Bacillus anthracis which causes anthrax is categorized under category A bioterrorism agent.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  },
  {
    "q_no": 15,
    "question": "Question 15: The test kit shown in the image below works on the principle of: 606 \nSold by @itachibot",
    "options": {
      "a": "ELISA",
      "b": "Immunochromatography",
      "c": "Immunofluroscence",
      "d": "Chemiluminiscence"
    },
    "correct_answer": "b",
    "explanation": "The above image shows a HbsAg card test kit which works on the principle \nof immunochromatography. The immunochromatographic membrane is used for antigen detection, while a nitrocellulose \nmembrane is used to absorb the antigen from a specimen. A coloured reaction appears directly on \nthe membrane with the sequential addition of conjugate followed by the substrate. In some cases, \nthe antigen is captured by a bound antibody directed against the antigen. These assays have the \nadvantage of being rapid and also frequently include a built-in internal control. 615 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Spirochetes_Q15_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Spirochetes"
  }
]