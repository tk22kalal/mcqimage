[
  {
    "q_no": 1,
    "question": "Question 1: An old woman presented to the OPD with dysuria and frequent micturition. Urinalysis \nshowed pus cells, and culture on MacConkey agar showed the following. Which organism is \ninvolved here?",
    "options": {
      "a": "Escherichia",
      "b": "Salmonella",
      "c": "Shigella",
      "d": "Proteus"
    },
    "correct_answer": "a",
    "explanation": "This patient who presented with dysuria and frequent micturition with urinalysis showing pus \ncells, and growth of lactose-fermenting colonies on MacConkey agar suggests a diagnosis of \nurinary tract infection by Escherichia coli. Enterobacteriaceae family is classified based on their action on lactose present in MacConkey's \nmedium as: • Lactose fermenters - Escherichia, Klebsiella • Late lactose fermenters - Shigella sonnei • Non-lactose fermenters- Salmonella species, Shigella species The image below shows lactose fermenting and non-lactose fermenting colonies on MacConkey \nagar. Mnemonic to remember non-lactose fermenters: (SPY PSM) • Salmonella • Proteus • Yersinia • Providencia- late fermenter • Shigella (except S.sonnei which is a late lactose fermenter) 198 \nSold by @itachibot • Morganella",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q1_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 2,
    "question": "Question 2: The stool culture of a patient with suspected food poisoning produced hemolytic colonies on \nblood agar. The isolated organism gave a positive indole test and a positive MUG test. You \nobserve the following colonies on eosin methylene blue agar. Identify the organism. 190 \nSold by @itachibot",
    "options": {
      "a": "Escherichia coli",
      "b": "Klebsiella pneumoniae",
      "c": "Proteus vulgaris",
      "d": "Klebsiella granulomatis"
    },
    "correct_answer": "a",
    "explanation": "The given scenario of a patient with suspected food poisoning with stool culture growing \nhemolytic colony on blood agar with a positive indole test and MUG test with a iridescent green \ncolony growth on eosin methylene blue agar is characteristic of Escherichia coli. E. coli produces the enzyme -glucuronidase which is tested using the MUG test. In it, the \nsubstrate MUG (4-methylumbelliferyl--glucuronide) is reduced by the enzyme to produce a \nfluorescent color which indicates a positive MUG test.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q2_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 3,
    "question": "Question 3: What is the cut-off for bacteriuria beyond which a diagnosis of catheter-associated urinary \ntract infection (CAUTI) can be made?",
    "options": {
      "a": "&gt;10^2 CFU/ml",
      "b": "&gt;10^3 CFU/ml",
      "c": "&gt;10^4 CFU/ml",
      "d": "&gt;10^5 CFU/ml"
    },
    "correct_answer": "b",
    "explanation": "The cut-off value for bacteriuria to diagnose catheter-associated urinary tract infection (CAUTI) is \n&gt;103 CFU/mL. The minimum criterion for catheter-associated asymptomatic bacteriuria (CA-ASB) \nis &gt;102 CFU/mL.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 4,
    "question": "Question 4: A tourist came to the OPD with complaints of abdominal pain and watery diarrhea. Which of \nthe following strains of E. coli is most commonly implicated in this case?",
    "options": {
      "a": "Enteropathogenic E. coli",
      "b": "Enterohemorrhagic E. coli",
      "c": "Enterotoxigenic E. coli",
      "d": "Enteroinvasive E. coli"
    },
    "correct_answer": "c",
    "explanation": "This patient with watery diarrhea most likely has traveller’s diarrhea caused by Enterotoxigenic \nEscherichia coli (ETEC). Enterotoxigenic E. coli (ETEC) is the most common organism that causes diarrhea in travelers. It \nproduces the following toxins: • LT (heat-labile toxin) - acts by cAMP • ST (heat-stable toxin) - two types of ST are known, ST-A (ST-I) and ST-B (ST-II) • ST-A is soluble in methanol and acts by  cGMP in the intestine. • ST-B is insoluble in methanol, and the mode of action is not known. Other options: Option A: Enteropathogenic E. coli (EPEC) causes infantile diarrhea in developing countries. It \nadheres to the mucosal surface of the small intestine using E. coli adherent factor (EAF) and locus \nof enterocyte effacement (LEE) and causes effacement of microvilli. Option B: Enterohemorrhagic E. coli (EHEC) produces verocytotoxin, which targets vascular \nendothelium. It causes hemorrhagic colitis and hemolytic uremic syndrome. Option D: Enteroinvasive E.coli (EIEC) invades interstitial epithelial cells in the intestine and \ncauses a condition resembling shigellosis. This ability is determined by a plasmid, which can be \ndetected as a diagnostic test. 199 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 5,
    "question": "Question 5: Identify the organism below that causes effacement and attachment of intestinal cells.",
    "options": {
      "a": "ETEC",
      "b": "EIEC",
      "c": "EPEC",
      "d": "EAEC"
    },
    "correct_answer": "c",
    "explanation": "Attachment and effacement lesions on intestinal cells are caused by enteropathogenic Escherichia \ncoli (EPEC). E. coli is the second most common cause of diarrhea in the pediatric age group. Rotavirus is the \nmost common cause. EPEC causes watery diarrhea which is self-limiting. EPEC adheres to the mucosal cells of the small bowel and causes loss of microvilli (effacement). \nThis leads to the formation of filamentous actin pedestals or cuplike structures and occasionally \nmay cause entry of the EPEC into the mucosal cells. Pathogenicity requires the presence of two important factors: • Bundle-forming pilus encoded by plasmid containing EPEC adherence factor (EAF). • Chromosomal locus of enterocyte effacement (LEE) pathogenicity island. The image below shows an electron microscopy image of E Coli. 200 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 6,
    "question": "Question 6: You are investigating an outbreak of diarrhea. You find out that the etiological agent causes \nstacked-brick formation on hep-2 cells as shown below. What is the likely organism? 192 \nSold by @itachibot",
    "options": {
      "a": "Enteroaggregative E.coli",
      "b": "Enterohemorrhagic E.coli",
      "c": "Enterotoxigenic E.coli",
      "d": "Enteroinvasive E.coli"
    },
    "correct_answer": "a",
    "explanation": "The stacked-brick pattern of adherence on hep-2 cells is caused by enteroaggregative E. coli \n(EAEC). Enteroaggregative E. coli has been associated with persistent diarrhea. Intestinal colonization of \nEAEC is mediated by aggregative adherence fimbriae (AAF). EAST-1 toxin (enteroaggregative \nheat-stable toxin) is considered to be a major virulence factor for EAEC. The given image shows the stacked-brick pattern of adherence on microscopy at 600x \nmagnification. 201 \nSold by @itachibot",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 7,
    "question": "Question 7: A 29-year-old woman presented with bloody diarrhea, abdominal pain, hemolytic anemia, \nthrombocytopenia, and acute renal failure. She was diagnosed with hemolytic uremic \nsyndrome and treated with plasmapheresis and dialysis. What is false about the infectious \ncausative agent?",
    "options": {
      "a": "Serotype O157:H7 causes hemolytic-uremic syndrome.",
      "b": "It does not produce a Shiga like toxin",
      "c": "Fecal leukocytes may be seen",
      "d": "There is person to person transmission."
    },
    "correct_answer": "b",
    "explanation": "Hemolytic-uremic syndrome (HUS) is caused by enterohemorrhagic E. coli (EHEC) serotype \nO157:H7. It produces a Shiga like toxin, therefore EHEC is also known as Shiga toxin-producing \nE. coli (STEC). Other options: Option A - Strains of E. coli producing verocytotoxin or Shiga toxin (stx2a-g) can cause diarrheal \ndisease ranging from mild diarrhea to fatal hemorrhagic colitis and HUS. The most \ncommon EHEC belongs to serotype O157:H7. Option C - In EHEC diarrhea, fecal leukocytes are commonly seen (70%) but although it is an \ninfectious condition, fever is not seen. The absence of fever can lead to its misdiagnosis as a \nnon-infectious condition such as intussusception or ischemic bowel disease. Option D - The disease is transmitted through contaminated feces. Person-to-person \ntransmission can occur if infected persons do not wash their hands after using the toilet or after \nchanging diapers. Note: Shiga toxin produced by S. dysenteriae is referred to as Stx.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 8,
    "question": "Question 8: Sereny test was employed for laboratory diagnosis of which of the following organisms?",
    "options": {
      "a": "Enterotoxigenic E. coli",
      "b": "Enteropathogenic E. coli",
      "c": "Enterohemorrhagic E. coli",
      "d": "Enteroinvasive E. coli"
    },
    "correct_answer": "d",
    "explanation": "The Sereny test is an animal pathogenicity test that used to be employed for laboratory diagnosis \nof enteroinvasive E. coli and Shigella. Freshly isolated suspension of bacteria is instilled into the eyes of guinea pigs which leads \nto mucopurulent conjunctivitis and severe keratitis. It is not in use anymore as we have better methods of detecting toxigenicity now like molecular \nmethods.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 9,
    "question": "Question 9: What is the culture media used to differentiate E. coli O157:H7 from other E. coli?",
    "options": {
      "a": "Sorbitol-MacConkey agar",
      "b": "Mannitol salt agar",
      "c": "Cystine-lactose-electrolyte deficient medium",
      "d": "Thiosulphate citrate Bile salt sucrose medium"
    },
    "correct_answer": "a",
    "explanation": "Sorbitol-MacConkey agar is used to differentiate E. coli O157:H7 from other E. coli. E. coli O157:H7 does not ferment sorbitol and produces pale colonies on Sorbitol-MacConkey \nagar. All other strains of E. coli ferment sorbitol. Thus they produce pink colonies on \nSorbitol-MacConkey agar. O157:H7 strains do not contain -glucuronidase and so are unable to use the substrate \n4-methylumbelliferyl--glucuronide(MUG). Thus, they give a negative MUG test.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 10,
    "question": "Question 10: Match the following E.coli with their respective pathogenesis.",
    "options": {
      "a": "A-4,B-3,C-2,D-1",
      "b": "A-1,B-3,C-2,D-4",
      "c": "A-1,B-2,C-3,D-4",
      "d": "A-4,B-2,C-3.D-1"
    },
    "correct_answer": "c",
    "explanation": "The correctly matched pairs are as follows: The various strains of Escherichia coli are: 202 \nSold by @itachibot • Enterotoxigenic E. coli (ETEC) is the most common organism that causes diarrhea \nin travelers. It produces the following toxins: • LT (heat-labile toxin)- acts by cAMP • ST (heat-stable toxin)- two types of ST are known, ST-A (ST-I) and ST-B (ST-II) • ST-A is soluble in methanol and acts by cGMP in the intestine. • ST-B is insoluble in methanol, and the mode of action is not known. • Enteroinvasive E. coli (EIEC) invade interstitial epithelial cells in the intestine and cause a \ncondition resembling shigellosis. This ability is determined by a plasmid, detection of which can \nalso be a diagnostic test. Sereny's test was employed to diagnose EIEC but it is not in use \nanymore. • Enterohemorrhagic E. coli (EHEC) produces verocytotoxin, which targets vascular endothelium. \nIt causes hemorrhagic colitis and hemolytic uremic syndrome. • Enteropathogenic E. coli (EPEC) causes infantile diarrhea in developing countries. It adheres to \nthe mucosal surface of small intestine using EAF and LEE and causes effacement of microvilli. \nThis leads to attachment and effacement lesions of intestinal cells. • Enteroaggregative E. coli (EAEC) produces the stacked brick pattern of adherence on hep-2 cells. \nEAEC has been associated with persistent diarrhea. Intestinal colonization of EAEC is mediated \nby AAF (aggregative adherence fimbriae). EAEC produces EAST-1 toxin (enteroaggregative \nheat-stable toxin) which is considered to be a major virulence factor. E. co \nli Mechanism of action 1. ET \nEC A. Produce a heat-stable toxi \nn and cause activation of gua \nnylyl cyclase 2. EI \nEC B. Invades intestinal mucosal cells 3. E \nHEC C. Produces a toxin against v \nascular endothelium cells 4. EP \nEC D. Adhere to the mucosal sur \nface and cause effacement of \nmicrovilli",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 11,
    "question": "Question 11: Which of the following statements is false?",
    "options": {
      "a": "E.coli is an aerobe and facultative anaerobe.",
      "b": "Proteus infection increases risk of uric acid stones.",
      "c": "E.coli is motile by peritrichous flagella.",
      "d": "Proteus can metabolise phenylalanine to phenylpyruvic acid."
    },
    "correct_answer": "b",
    "explanation": "Proteus increases the risk of struvite stones in the bladder as it leads to the alkalinisation of \nurine. Struvite stones are magnesium-ammonium phosphate stones that appear as \nrectangular/coffin-lid crystals shaped on urine microscopy. Uric acid stones are precipitated in \nacidic urine. Proteus produces enzyme phenylalanine deaminase which converts phenylalanine to phenyl \npyruvic acid. This property is the basis for the phenylalanine deaminase test. 203 \nSold by @itachibot The test is performed by inoculating the organism in phenylalanine agar. After incubation, 10% \nferric chloride is added to the media. If phenyl pyruvic acid was produced, it will react with the \nferric chloride and turn dark green. If the medium remains a straw colour, the organism is \nnegative for phenylalanine deaminase production. E. coli is an aerobe and facultative anaerobe. Its motility is due to the presence of peritrichous \nflagella. It is the most common cause of urinary tract infections.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 12,
    "question": "Question 12: Which of the following shows Dienes phenomenon?",
    "options": {
      "a": "Proteus mirabilis",
      "b": "Klebsiella granulomatis",
      "c": "Providencia stuartii",
      "d": "Serratia marcescens"
    },
    "correct_answer": "a",
    "explanation": "Dienes phenomenon is exhibited by Proteus mirabilis. When two identical strains of Proteus are inoculated at different places of the same culture plate, \nthe resulting swarms of growth coalesce and no line is formed between swarming cultures of the \nsame strain. However, if they are from two different strains, the spreading films of growth fail to \ncoalesce and remain separated by a narrow but easily visible furrow (known as Dienes line). This \nis known as Dienes phenomenon. The image below shows Dienes phenomenon.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 13,
    "question": "Question 13: Blood culture of the sputum sample taken from a patient diagnosed with hospital-acquired \npneumonia, showed a characteristic phenomenon as shown in the image. Identify the bacteria \nthat exhibit this phenomenon.",
    "options": {
      "a": "Klebsiella",
      "b": "Enterobacter",
      "c": "Serratia",
      "d": "Proteus"
    },
    "correct_answer": "d",
    "explanation": "The given image of the blood culture finding shows the characteristic bull's eye swarming pattern \nexhibited by Proteus. Proteus species move very actively with the help of peritrichous flagella, resulting in swarming on \nsolid media. It can be suppressed by the addition of: • phenyl ethyl alcohol • chloral hydrate 204 \nSold by @itachibot • sulphonamides • sodium azide • boric acid • increasing the concentration of agar to 6%. Swarming does not occur on MacConkey medium and cystine-lactose-electrolyte-deficient (CLED) \nmedium. Proteus is a gram-negative bacillus seen as a normal gastrointestinal flora. The two most common \nspecies causing infection in humans are P. mirabilis and P. vulgaris, which can be differentiated \nby spot indole test. P. mirabilis is indole negative while P. vulgaris is indole positive. Production \nof urease enzyme by Proteus, which hydrolyses urea to ammonia causes alkalinization of urine. \nAlkalinization of urine leads to the precipitation of organic and inorganic compounds which \ncontributes to the formation of Struvite stones. P. mirabilis is associated with urinary tract \ninfections while P. vulgaris is usually associated with wound and soft tissue infections. Other organisms that show swarming include: • Clostridium tetani • Vibrio parahaemolyticus • Serratia",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q13_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 14,
    "question": "Question 14: A middle-aged man from north India presents with a deformity as shown in the image below. \nHe gives a history of foul-smelling purulent nasal discharge before this nodule appeared. \nWhich of the following organisms is responsible for his condition? 195 \nSold by @itachibot",
    "options": {
      "a": "Rhinosporidium seeberi",
      "b": "Klebsiella rhinoscleromatis",
      "c": "Klebsiella ozaenae",
      "d": "Klebsiella oxytoca"
    },
    "correct_answer": "b",
    "explanation": "The above image and clinical scenario are suggestive of rhinoscleroma and it is caused by \nKlebsiella rhinoscleromatis. K. rhinoscleromatis is a gram-negative bacillus also known as Frisch bacillus. It is endemic in \nnorth India. Rhinoscleroma is characterized by chronic granulomatous hypertrophy of the \nnose. Biopsy of the lesion shows: • Mikulicz cells- large foamy cells with a central nucleus and vacuolated, cytoplasm containing \ncausative bacilli. • Russell bodies- eosinophilic inclusion bodies found in the plasma cells. These are also observed \nin multiple myeloma. Other options: Option A: Rhinosporidium seeberi causes rhinosporidiosis. Option C: K. ozaenae causes atrophic rhinitis. Option D: K. oxytoca is associated with hemorrhagic colitis.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q14_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 15,
    "question": "Question 15: You notice a sputum sample of a patient suspected of having ventilator-associated pneumonia \nturns progressively redder over time. Microscopic examination of the sample reveals an \nabsence of red blood cells. Which of the following organisms could have caused this?",
    "options": {
      "a": "Streptococcus pneumoniae",
      "b": "Proteus mirabilis",
      "c": "Klebsiella pneumonia",
      "d": "Serratia marcescens"
    },
    "correct_answer": "d",
    "explanation": "The given condition of sputum sample turning redder over time can be caused by Serratia \nmarcescens. 205 \nSold by @itachibot Serratia marcescens are pleomorphic coccobacilli that can grow in sputum after collection and can \nmimic hemoptysis because they produce a red pigment called prodigiosin. S. macescens mainly cause healthcare-associated infections such as ventilator-associated \npneumonia, meningitis, endocarditis, septicemia and peritonitis. They can contaminate IV fluids, \nsurgical instruments, and antiseptic solutions.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  },
  {
    "q_no": 16,
    "question": "Question 16: A 19-year-old boy presented with a single painless papule on his penis with no enlarged \nlymph nodes. A smear was made from the lesion and stained with Wright- Giemsa stain \nwhich showed the finding as shown in the following picture. Identify the organism. 196 \nSold by @itachibot",
    "options": {
      "a": "Shigella dysenteriae",
      "b": "Shigella flexneri",
      "c": "Shigella boydii",
      "d": "Shigella sonnei"
    },
    "correct_answer": "d",
    "explanation": "The given clinical vignette and the image showing Donovan bodies in Wright/Giemsa-stained \nimpression smears indicate a diagnosis of donovanosis caused by Klebsiella granulomatis. They \nappear as rounded coccobacilli within cystic spaces in large mononuclear cells (called Pund cells). Klebsiella granulomatis shows bipolar condensation of chromatin giving a safety pin appearance. Bipolar staining (safety pin appearance) is shown by: • H. ducreyi • Vibrio parahaemolyticus • Klebsiella granulomatis • Yersinia pestis • Burkholderia pseudomallei • Burkholderia mallei 206 \nSold by @itachibot Shigella and Salmonella",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Escherichia__Proteus_and_Klebsiella_Q16_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Escherichia  Proteus and Klebsiella"
  }
]