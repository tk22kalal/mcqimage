[
  {
    "q_no": 1,
    "question": "Question 1: Which of the following is a pigment-producing species of mycobacteria?",
    "options": {
      "a": "M. ulcerans",
      "b": "M. scrofulaceum",
      "c": "M. avium intracellulare complex",
      "d": "M. xenopi"
    },
    "correct_answer": "b",
    "explanation": "182 \nSold by @itachibot Mycobacterium scrofulaceum is a pigment-producing species of mycobacteria. M. scrofulaceum is a scotochromogen which produces yellow or orange colored pigments, even in \nthe dark. It belongs to group II of Runyon's classification. It can cause scrofula or cervical adenitis \nin children. M.ulcerans, M.avium intracellulare complex (MAC), and M. xenopi belong to group III-non \nphotochromogens as they do not form pigment even on exposure to light.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 2,
    "question": "Question 2: A microbiologist working with mycobacteria notes moist, smooth, flat, white colonies growing \non Lowenstein-Jensen media. Which species of mycobacteria is she likely studying?",
    "options": {
      "a": "Mycobacterium tuberculosis",
      "b": "Mycobacterium bovis",
      "c": "Mycobacterium kansasii",
      "d": "Mycobacterium avium-intracellulare"
    },
    "correct_answer": "b",
    "explanation": "The species of mycobacteria being studied here is Mycobacterium bovis. It forms moist, smooth, \nflat, white colonies on Lowenstein-Jensen (LJ) media that break-up easily when touched. Mycobacterium bovis belongs to the Mycobacterium tuberculosis complex. It causes \ntuberculosis-like disease in humans. Lowenstein–Jensen medium is a commonly used, egg-based, selective media for mycobacteria. It \ncontains: • Egg- Provides fatty acids and protein required for metabolism • Malachite green- Prevents the growth of contaminants. Makes it a selective medium. • Mineral salt solution- Buffer • Glycerol- Source of carbon, favors growth of M. tuberculosis, but not M. bovis. LJ medium \nwithout glycerol, which contains pyruvate, is used for culture of M. bovis. • L-asparagine- Nitrogen source The image below shows M.bovis colonies on LJ media. Mycobacterium tuberculosis colonies on LJ medium are dry, rough, raised and irregular with a \nwrinkled surface. They are creamy white or buff-colored, tenacious and difficult to \nemulsify(rough, tough, buff). 183 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 3,
    "question": "Question 3: The following findings are obtained during biochemical testing of a mycobacterial species. \nIdentify the organism.",
    "options": {
      "a": "M. bovis",
      "b": "M. tuberculosis",
      "c": "M. simiae",
      "d": "M. kansasii"
    },
    "correct_answer": "c",
    "explanation": "The given biochemical findings are characteristic of Mycobacterium simiae. Eventhough atypical \nmycobacteria or non-tuberculous mycobacteria(NTM) are usually niacin test negative, some NTM \nlike M. simiae and M. chelonae give a positive niacin test positive. Mycobacteria can be identified based on their biochemical reactions as follows: The first four tests are used to distinguish between M. tb complex and atypical mycobacteria while \nthe last four tests are used to distinguish between M. tb and M. bovis. Biochemical tes \nt M. tb \nM. bov \nis NTM Catalase \nWeak+ \nWeak \n+ +++ Peroxidase \n+ \n+ \n_ Arylsulfatse \n- \n- \n+ Niacin \n+ \n- \n- + \n- \nN/A Nitrate reductio \nn Pyrazinamidase \n+ \n- \nN/A N/A Sensiti \nve TCH sensitivity \nResista \nnt",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 4,
    "question": "Question 4: A 54-year-old male presents with an ulcer on his hand. On swab culture, growth of M. \nulcerans is seen. What is the diagnosis?",
    "options": {
      "a": "Hunner’s ulcer",
      "b": "Meleney’s ulcer",
      "c": "Buruli ulcer",
      "d": "Marjolin's ulcer"
    },
    "correct_answer": "c",
    "explanation": "184 \nSold by @itachibot Mycobacterium ulcerans causes Buruli ulcer. M. ulcerans produces a toxin called mycolactone which leads to formation of Buruli ulcer. This is \na chronic, debilitating, necrotizing disease of the skin and soft tissue which is characterized by the \nformation of ulcers that progressively enlarge over time if left untreated. The ulcers heal with \ndisfiguring scars. The image below shows a Buruli ulcer. Option A: Hunner's ulcers are seen in a subset of patients with interstitial cystitis. These are areas \nof inflammation on the bladder wall. The image below shows a cystoscopic image of a Hunner's ulcer. Option B: Meleney's ulcer or post-operative synergistic bacterial gangrene occurs in \nimmuno-compromised individuals following abdominal surgery. It is caused by a synergistic \ninteraction between microaerophilic nonhemolytic Streptococcus and hemolytic aerobic \nStaphylococcus aureus. 185 \nSold by @itachibot Option D: Marjolin ulcer is a rare and aggressive form of squamous cell carcinoma that grows \nfrom burns, scars, or poorly healing wounds. The image below shows a Marjolin's ulcer in a burn scar.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 5,
    "question": "Question 5: A 42-year-old man who works at an aquarium and handles the fish without protective \nequipment presents to the OPD with the following finding. Infection with which of the \nfollowing bacteria led to his condition?",
    "options": {
      "a": "M. kansasi",
      "b": "M. marinum",
      "c": "M. paratuberculosis",
      "d": "M. gordonae"
    },
    "correct_answer": "b",
    "explanation": "The image shows a fish tank granuloma that is caused by M. marinum. The typical clinical presentation is as a single, small violet papule or nodule confined to one \nextremity, developing 2-3 weeks after trauma. The nodule may break down to form an indolent \nulcer. M. marinarum is a natural pathogen of fish and amphibians, which spreads to humans who \ncome in contact with contaminated swimming pools or fish tanks. Other non-tuberculous mycobacteria causing disease in humans include: • M. kansasii: Disease resembles pulmonary TB • M. scrofulaceum: Cervical lymphadenitis • M. avium complex: Pulmonary, disseminated TB, especially in AIDS patients • M. fortuitum: Nail salon furunculosis M. paratuberculosis (aka Johne’s bacillus) causes Johne’s disease in cattle. It is associated with \nCrohn’s disease in humans.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Other_Mycobacteria_Q5_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 6,
    "question": "Question 6: Which of the following statements is true about the microbiological diagnosis of the disease \nafflicting the patient shown below? 179 \nSold by @itachibot",
    "options": {
      "a": "Acid fast staining is done by Ziehl-Neelsen technique, using 25% sulphuric acid",
      "b": "Sample should be collected from the centre of the lesion",
      "c": "The number of samples to be collected is 3-4",
      "d": "It is cultivated in nine banded armadillos and foot pads of mice"
    },
    "correct_answer": "d",
    "explanation": "The image depicts leonine facies in a patient suffering from leprosy or Hansen's disease caused by \nMycobacterium leprae. It is cultivated in nine-banded armadillos and footpads of mice. 186 \nSold by @itachibot M. leprae is a Gram-positive, weakly acid fast bacillus. Thus, 5% sulphuric acid (option A) is used \nfor decolourisation to demonstrate M.leprae's acid-fastness. On microscopy, the bacilli appear \nbound together in masses called globi, within which they are arranged in a 'cigar bundle' \nappearance. For leprosy diagnosis, specimens are collected from the nasal mucosa, skin lesions and earlobes. \nNasal smears are collected from the internal septum of the nose. Skin smears are collected from \nthe edges of the lesions (option B) rather than from the centre. Slit skin smears are taken as well. \nThe skin is pinched up tight to minimise bleeding and a cut is made with a scalpel, deep enough to \nget into the infiltrated layers. This is done over the buttocks, forehead, chin, cheek, and ears (at \nleast 5-6 different areas) (option C).",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Other_Mycobacteria_Q6_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 7,
    "question": "Question 7: What is the generation time of lepra bacilli?",
    "options": {
      "a": "12-13 days",
      "b": "12-13 hours",
      "c": "15-20 hours",
      "d": "1 month"
    },
    "correct_answer": "a",
    "explanation": "The generation time of lepra bacilli is 12-13 days. Generation time, also known as doubling time, is the time it takes for the bacterial population to \ndouble. It can also be measured as the time between two cell divisions under optimum conditions. \nThe generation time of different bacilli are given below: • Lepra bacilli- 12-13 days average (may vary from 8-42 days) • Tubercle bacilli- 15-20 hours • Coliform bacilli- 20 minutes",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 8,
    "question": "Question 8: What are the bacteria present in Virchow's cells?",
    "options": {
      "a": "M. avium intercellulare",
      "b": "M. tuberculosis",
      "c": "M. bovis",
      "d": "M. leprae"
    },
    "correct_answer": "d",
    "explanation": "The bacteria present in Virchow’s cells is M. leprae. Lepromatous leprosy lesions contain large aggregates of lipid laden macrophages (lepra \ncells/Virchow cells) which are often filled with globi (masses) of acid fast bacilli. The image below shows a high-power Fite-Faraco stain of a skin lesion showing globi of M.leprae. 187 \nSold by @itachibot",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 9,
    "question": "Question 9: You counsel a patient with leprosy about lepra reactions before starting her on multidrug \ntherapy. Which among these is correct regarding these reactions?",
    "options": {
      "a": "1, 2 and 4",
      "b": "3 and 5 only",
      "c": "2, 4 and 5",
      "d": "1 and 2 only"
    },
    "correct_answer": "c",
    "explanation": "Statements 2, 4, and 5 regarding lepra reactions are correct. Type 2 lepra reactions are unrelated to drug therapy, whereas type 1 reactions may occur within a \nyear of starting treatment. New lesions typically appear in type 2 lepra reactions. They are tender and erythematous \nsubcutaneous and dermal nodules. Existing lesions show no changes.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 10,
    "question": "Question 10: A patient diagnosed with leprosy was undergoing further evaluation for classification of type \nand immune response. Which of the following statements is false regarding the intradermal \ntest used in such evaluation?",
    "options": {
      "a": "Negative in children &lt;6 month age",
      "b": "It has no value in prognostication of leprosy",
      "c": "Used to classify leprosy",
      "d": "BCG vaccine may convert a negative test to positive"
    },
    "correct_answer": "b",
    "explanation": "The lepromin test has value as a prognostic test for leprosy. The lepromin, or Mitsuda test, is a method to measure cellular immunity in leprosy. It is a skin \ntest for delayed hypersensitivity to lepra antigens. A bacillary suspension of inactivated M. leprae \nis injected just under the skin and the induration reaction is measured 3–4 weeks after. It is used to classify leprosy. A negative lepromin test is seen in lepromatous and borderline \nleprosy. It is negative in children &lt;6 months of age, it may be positive at the end of 1st \nyear. BCG vaccine is capable of converting a negative lepromin test to a positive.",
    "image": null,
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 11,
    "question": "Question 11: You are performing the test shown in the image on a patient. How many days later do you ask \nthe patient to return so that you get an accurate read on the Mitsuda reaction? 181 \nSold by @itachibot",
    "options": {
      "a": "3 days",
      "b": "10 days",
      "c": "20 days",
      "d": "30 days"
    },
    "correct_answer": "c",
    "explanation": "Mitsuda's reaction is read in the 3rd week, i.e., on the 21st day or 20 days after the day of \ninjection. Lepromin test is a skin test for delayed hypersensitivity to lepra antigens. It is the only method for \nstudying immunity in leprosy. A bacillary suspension of inactivated M. leprae is injected just 188 \nSold by @itachibot under the skin. The first reaction to occur is the early reaction of Fernandez, which consists of erythema and \ninduration developing in 24-48 hours. It usually remains for 3-5 days; it is usually poorly defined \nand carries less significance. The second and more meaningful result is the late reaction of \nMitsuda, starting at 1-2 weeks (7-10 days), reaching a peak in three or four weeks, and gradually \nsubsiding over the next few weeks. On the 21st day, if there is a nodule more than 5 mm in \ndiameter, the reaction is said to be positive. Note: The 21st day is 20 days after the day of injection which is counted as the 1st day.",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Other_Mycobacteria_Q11_q.jpg",
    "explanation_image": null,
    "chapter_heading": "Other Mycobacteria"
  },
  {
    "q_no": 12,
    "question": "Question 12: A leprosy vaccine is being introduced on a pilot basis in India. Which of the following \nmycobacterial species is the basis for its development?",
    "options": {
      "a": "Escherichia",
      "b": "Salmonella",
      "c": "Shigella",
      "d": "Proteus"
    },
    "correct_answer": "d",
    "explanation": "Mycobacterium indicus pranii is the basis for the development of a leprosy vaccine. The leprosy vaccine species was originally called Mycobacterium W (M.w) but was later renamed \nMycobacterium indicus pranii. The vaccine is administered via intradermal route. The dose is 0.1 \nml. It is divided into two equal doses and given on both arms. Booster doses will be given to maintain the immunity level. These are given only in one arm. 189 \nSold by @itachibot Escherichia, Proteus and Klebsiella",
    "image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Other_Mycobacteria_Q12_q.jpg",
    "explanation_image": "https://github.com/tk22kalal/mcqimage/blob/main/mxmicrobiology/Other_Mycobacteria_Q12_exp.jpg",
    "chapter_heading": "Other Mycobacteria"
  }
]